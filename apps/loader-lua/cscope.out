cscope 15 $HOME/Downloads/lua-5.3.5/src               0000913784
	@lapi.c

7 
	#œpi_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

29 
	~"lundump.h
"

30 
	~"lvm.h
"

34 c⁄° 
	glua_idít
[] =

35 "$LuaVîsi⁄: " 
LUA_COPYRIGHT
 " $"

36 "$LuaAuth‹s: " 
LUA_AUTHORS
 " $";

40 
	#NONVALIDVALUE
 
	`ˇ°
(
TVÆue
 *, 
luaO_nûobje˘
)

	)

43 
	#isvÆid
(
o
Ë((oË!
luaO_nûobje˘
)

	)

46 
	#i•£udo
(
i
Ë((iË<
LUA_REGISTRYINDEX
)

	)

49 
	#isupvÆue
(
i
Ë((iË< 
LUA_REGISTRYINDEX
)

	)

52 
	#is°acködex
(
i
, 
o
Ë(
	`isvÆid
(oË&& !
	`i•£udo
(i))

	)

54 
	#≠i_checkvÆidödex
(
l
,
o
Ë
	`≠i_check
÷, 
	`isvÆid
(o), "övÆid index")

	)

56 
	#≠i_check°acködex
(
l
, 
i
, 
o
) \

57 
	`≠i_check
(
l
, 
	`is°acködex
(
i
, 
o
), "ödexÇŸ i¿thê°ack")

	)

60 
TVÆue
 *
	$ödex2addr
 (
lua_Sèã
 *
L
, 
idx
) {

61 
CÆlInfo
 *
ci
 = 
L
->ci;

62 i‡(
idx
 > 0) {

63 
TVÆue
 *
o
 = 
ci
->
func
 + 
idx
;

64 
	`≠i_check
(
L
, 
idx
 <
ci
->
t›
 - (ci->
func
 + 1), "unacceptable index");

65 i‡(
o
 >
L
->
t›
Ë 
NONVALIDVALUE
;

66  
o
;

68 i‡(!
	`i•£udo
(
idx
)) {

69 
	`≠i_check
(
L
, 
idx
 !0 && -idx <L->
t›
 - (
ci
->
func
 + 1), "invalid index");

70  
L
->
t›
 + 
idx
;

72 i‡(
idx
 =
LUA_REGISTRYINDEX
)

73  &
	`G
(
L
)->
l_ªgi°ry
;

75 
idx
 = 
LUA_REGISTRYINDEX
 - idx;

76 
	`≠i_check
(
L
, 
idx
 <
MAXUPVAL
 + 1, "upvalue indexÅooÜarge");

77 i‡(
	`âi¶cf
(
ci
->
func
))

78  
NONVALIDVALUE
;

80 
CClosuª
 *
func
 = 
	`˛CvÆue
(
ci
->func);

81  (
idx
 <
func
->
nupvÆues
Ë? &func->
upvÆue
[idx-1] : 
NONVALIDVALUE
;

84 
	}
}

91 
	$grow°ack
 (
lua_Sèã
 *
L
, *
ud
) {

92 
size
 = *(*)
ud
;

93 
	`luaD_grow°ack
(
L
, 
size
);

94 
	}
}

97 
LUA_API
 
	$lua_check°ack
 (
lua_Sèã
 *
L
, 
n
) {

98 
ªs
;

99 
CÆlInfo
 *
ci
 = 
L
->ci;

100 
	`lua_lock
(
L
);

101 
	`≠i_check
(
L
, 
n
 >= 0, "negative 'n'");

102 i‡(
L
->
°ack_œ°
 - L->
t›
 > 
n
)

103 
ªs
 = 1;

105 
öu£
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
EXTRA_STACK
;

106 i‡(
öu£
 > 
LUAI_MAXSTACK
 - 
n
)

107 
ªs
 = 0;

109 
ªs
 = (
	`luaD_øwru≈rŸe˘ed
(
L
, &
grow°ack
, &
n
Ë=
LUA_OK
);

111 i‡(
ªs
 && 
ci
->
t›
 < 
L
->t› + 
n
)

112 
ci
->
t›
 = 
L
->t› + 
n
;

113 
	`lua_u∆ock
(
L
);

114  
ªs
;

115 
	}
}

118 
LUA_API
 
	$lua_xmove
 (
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
) {

119 
i
;

120 i‡(
‰om
 =
to
) ;

121 
	`lua_lock
(
to
);

122 
	`≠i_check√Àms
(
‰om
, 
n
);

123 
	`≠i_check
(
‰om
, 
	`G
(‰omË=G(
to
), "movingámong independent states");

124 
	`≠i_check
(
‰om
, 
to
->
ci
->
t›
 -Åo->t› >
n
, "stack overflow");

125 
‰om
->
t›
 -
n
;

126 
i
 = 0; i < 
n
; i++) {

127 
	`£tobj2s
(
to
,Åo->
t›
, 
‰om
->t› + 
i
);

128 
to
->
t›
++;

130 
	`lua_u∆ock
(
to
);

131 
	}
}

134 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_©∑nic
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
) {

135 
lua_CFun˘i⁄
 
ﬁd
;

136 
	`lua_lock
(
L
);

137 
ﬁd
 = 
	`G
(
L
)->
∑nic
;

138 
	`G
(
L
)->
∑nic
 = 
∑nicf
;

139 
	`lua_u∆ock
(
L
);

140  
ﬁd
;

141 
	}
}

144 
LUA_API
 c⁄° 
lua_Numbî
 *
	$lua_vîsi⁄
 (
lua_Sèã
 *
L
) {

145 c⁄° 
lua_Numbî
 
vîsi⁄
 = 
LUA_VERSION_NUM
;

146 i‡(
L
 =
NULL
Ë &
vîsi⁄
;

147  
	`G
(
L
)->
vîsi⁄
;

148 
	}
}

160 
LUA_API
 
	$lua_absödex
 (
lua_Sèã
 *
L
, 
idx
) {

161  (
idx
 > 0 || 
	`i•£udo
(idx))

162 ? 
idx


163 : 
	`ˇ°_öt
(
L
->
t›
 - L->
ci
->
func
Ë+ 
idx
;

164 
	}
}

167 
LUA_API
 
	$lua_gët›
 (
lua_Sèã
 *
L
) {

168  
	`ˇ°_öt
(
L
->
t›
 - (L->
ci
->
func
 + 1));

169 
	}
}

172 
LUA_API
 
	$lua_£â›
 (
lua_Sèã
 *
L
, 
idx
) {

173 
StkId
 
func
 = 
L
->
ci
->func;

174 
	`lua_lock
(
L
);

175 i‡(
idx
 >= 0) {

176 
	`≠i_check
(
L
, 
idx
 <L->
°ack_œ°
 - (
func
 + 1), "newÅopÅooÜarge");

177 
L
->
t›
 < (
func
 + 1Ë+ 
idx
)

178 
	`£äûvÆue
(
L
->
t›
++);

179 
L
->
t›
 = (
func
 + 1Ë+ 
idx
;

182 
	`≠i_check
(
L
, -(
idx
+1Ë<(L->
t›
 - (
func
 + 1)), "invalidÇewÅop");

183 
L
->
t›
 +
idx
+1;

185 
	`lua_u∆ock
(
L
);

186 
	}
}

193 
	$ªvî£
 (
lua_Sèã
 *
L
, 
StkId
 
‰om
, StkId 
to
) {

194 ; 
‰om
 < 
to
; from++,Åo--) {

195 
TVÆue
 
ãmp
;

196 
	`£tobj
(
L
, &
ãmp
, 
‰om
);

197 
	`£tobjs2s
(
L
, 
‰om
, 
to
);

198 
	`£tobj2s
(
L
, 
to
, &
ãmp
);

200 
	}
}

207 
LUA_API
 
	$lua_rŸ©e
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

208 
StkId
 
p
, 
t
, 
m
;

209 
	`lua_lock
(
L
);

210 
t
 = 
L
->
t›
 - 1;

211 
p
 = 
	`ödex2addr
(
L
, 
idx
);

212 
	`≠i_check°acködex
(
L
, 
idx
, 
p
);

213 
	`≠i_check
(
L
, (
n
 >0 ?Ç : -nË<(
t
 - 
p
 + 1), "invalid 'n'");

214 
m
 = (
n
 >0 ? 
t
 -Ç : 
p
 -Ç - 1);

215 
	`ªvî£
(
L
, 
p
, 
m
);

216 
	`ªvî£
(
L
, 
m
 + 1, 
t
);

217 
	`ªvî£
(
L
, 
p
, 
t
);

218 
	`lua_u∆ock
(
L
);

219 
	}
}

222 
LUA_API
 
	$lua_c›y
 (
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
) {

223 
TVÆue
 *
‰
, *
to
;

224 
	`lua_lock
(
L
);

225 
‰
 = 
	`ödex2addr
(
L
, 
‰omidx
);

226 
to
 = 
	`ödex2addr
(
L
, 
toidx
);

227 
	`≠i_checkvÆidödex
(
L
, 
to
);

228 
	`£tobj
(
L
, 
to
, 
‰
);

229 i‡(
	`isupvÆue
(
toidx
))

230 
	`luaC_b¨rõr
(
L
, 
	`˛CvÆue
(L->
ci
->
func
), 
‰
);

233 
	`lua_u∆ock
(
L
);

234 
	}
}

237 
LUA_API
 
	$lua_pushvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

238 
	`lua_lock
(
L
);

239 
	`£tobj2s
(
L
, L->
t›
, 
	`ödex2addr
(L, 
idx
));

240 
	`≠i_ö¸_t›
(
L
);

241 
	`lua_u∆ock
(
L
);

242 
	}
}

251 
LUA_API
 
	$lua_ty≥
 (
lua_Sèã
 *
L
, 
idx
) {

252 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

253  (
	`isvÆid
(
o
Ë? 
	`ânov
(oË: 
LUA_TNONE
);

254 
	}
}

257 
LUA_API
 c⁄° *
	$lua_ty≥«me
 (
lua_Sèã
 *
L
, 
t
) {

258 
	`UNUSED
(
L
);

259 
	`≠i_check
(
L
, 
LUA_TNONE
 <
t
 &&Å < 
LUA_NUMTAGS
, "invalidÅag");

260  
	`ây≥«me
(
t
);

261 
	}
}

264 
LUA_API
 
	$lua_iscfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

265 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

266  (
	`âi¶cf
(
o
Ë|| (
	`âisC˛osuª
(o)));

267 
	}
}

270 
LUA_API
 
	$lua_isöãgî
 (
lua_Sèã
 *
L
, 
idx
) {

271 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

272  
	`âisöãgî
(
o
);

273 
	}
}

276 
LUA_API
 
	$lua_i¢umbî
 (
lua_Sèã
 *
L
, 
idx
) {

277 
lua_Numbî
 
n
;

278 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

279  
	`t⁄umbî
(
o
, &
n
);

280 
	}
}

283 
LUA_API
 
	$lua_is°rög
 (
lua_Sèã
 *
L
, 
idx
) {

284 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

285  (
	`âis°rög
(
o
Ë|| 
	`cvt2°r
(o));

286 
	}
}

289 
LUA_API
 
	$lua_isu£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

290 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

291  (
	`âisfuŒu£rd©a
(
o
Ë|| 
	`âi¶ightu£rd©a
(o));

292 
	}
}

295 
LUA_API
 
	$lua_øwequÆ
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
) {

296 
StkId
 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

297 
StkId
 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

298  (
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)Ë? 
	`luaV_øwequÆobj
(o1, o2) : 0;

299 
	}
}

302 
LUA_API
 
	$lua_¨ôh
 (
lua_Sèã
 *
L
, 
›
) {

303 
	`lua_lock
(
L
);

304 i‡(
›
 !
LUA_OPUNM
 && o∞!
LUA_OPBNOT
)

305 
	`≠i_check√Àms
(
L
, 2);

307 
	`≠i_check√Àms
(
L
, 1);

308 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

309 
	`≠i_ö¸_t›
(
L
);

312 
	`luaO_¨ôh
(
L
, 
›
, L->
t›
 - 2, L->top - 1, L->top - 2);

313 
L
->
t›
--;

314 
	`lua_u∆ock
(
L
);

315 
	}
}

318 
LUA_API
 
	$lua_com∑ª
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
, 
›
) {

319 
StkId
 
o1
, 
o2
;

320 
i
 = 0;

321 
	`lua_lock
(
L
);

322 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

323 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

324 i‡(
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)) {

325 
›
) {

326 
LUA_OPEQ
: 
i
 = 
	`luaV_equÆobj
(
L
, 
o1
, 
o2
); ;

327 
LUA_OPLT
: 
i
 = 
	`luaV_Às°h™
(
L
, 
o1
, 
o2
); ;

328 
LUA_OPLE
: 
i
 = 
	`luaV_Às£quÆ
(
L
, 
o1
, 
o2
); ;

329 : 
	`≠i_check
(
L
, 0, "invalid option");

332 
	`lua_u∆ock
(
L
);

333  
i
;

334 
	}
}

337 
LUA_API
 
size_t
 
	$lua_°rögt⁄umbî
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

338 
size_t
 
sz
 = 
	`luaO_°r2num
(
s
, 
L
->
t›
);

339 i‡(
sz
 != 0)

340 
	`≠i_ö¸_t›
(
L
);

341  
sz
;

342 
	}
}

345 
LUA_API
 
lua_Numbî
 
	$lua_t⁄umbîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

346 
lua_Numbî
 
n
;

347 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

348 
i¢um
 = 
	`t⁄umbî
(
o
, &
n
);

349 i‡(!
i¢um
)

350 
n
 = 0;

351 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

352  
n
;

353 
	}
}

356 
LUA_API
 
lua_I¡egî
 
	$lua_toöãgîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

357 
lua_I¡egî
 
ªs
;

358 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

359 
i¢um
 = 
	`toöãgî
(
o
, &
ªs
);

360 i‡(!
i¢um
)

361 
ªs
 = 0;

362 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

363  
ªs
;

364 
	}
}

367 
LUA_API
 
	$lua_toboﬁón
 (
lua_Sèã
 *
L
, 
idx
) {

368 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

369  !
	`l_isÁl£
(
o
);

370 
	}
}

373 
LUA_API
 c⁄° *
	$lua_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

374 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

375 i‡(!
	`âis°rög
(
o
)) {

376 i‡(!
	`cvt2°r
(
o
)) {

377 i‡(
Àn
 !
NULL
) *len = 0;

378  
NULL
;

380 
	`lua_lock
(
L
);

381 
	`luaO_to°rög
(
L
, 
o
);

382 
	`luaC_checkGC
(
L
);

383 
o
 = 
	`ödex2addr
(
L
, 
idx
);

384 
	`lua_u∆ock
(
L
);

386 i‡(
Àn
 !
NULL
)

387 *
Àn
 = 
	`v¶í
(
o
);

388  
	`svÆue
(
o
);

389 
	}
}

392 
LUA_API
 
size_t
 
	$lua_øwÀn
 (
lua_Sèã
 *
L
, 
idx
) {

393 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

394 
	`ây≥
(
o
)) {

395 
LUA_TSHRSTR
:  
	`tsvÆue
(
o
)->
shæí
;

396 
LUA_TLNGSTR
:  
	`tsvÆue
(
o
)->
u
.
 gÀn
;

397 
LUA_TUSERDATA
:  
	`uvÆue
(
o
)->
Àn
;

398 
LUA_TTABLE
:  
	`luaH_gën
(
	`hvÆue
(
o
));

401 
	}
}

404 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_tocfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

405 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

406 i‡(
	`âi¶cf
(
o
)Ë 
	`fvÆue
(o);

407 i‡(
	`âisC˛osuª
(
o
))

408  
	`˛CvÆue
(
o
)->
f
;

409  
NULL
;

410 
	}
}

413 
LUA_API
 *
	$lua_tou£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

414 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

415 
	`ânov
(
o
)) {

416 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

417 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

418 :  
NULL
;

420 
	}
}

423 
LUA_API
 
lua_Sèã
 *
	$lua_tŸhªad
 (
lua_Sèã
 *
L
, 
idx
) {

424 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

425  (!
	`âi°hªad
(
o
)Ë? 
NULL
 : 
	`thvÆue
(o);

426 
	}
}

429 
LUA_API
 c⁄° *
	$lua_t›oöãr
 (
lua_Sèã
 *
L
, 
idx
) {

430 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

431 
	`ây≥
(
o
)) {

432 
LUA_TTABLE
:  
	`hvÆue
(
o
);

433 
LUA_TLCL
:  
	`˛LvÆue
(
o
);

434 
LUA_TCCL
:  
	`˛CvÆue
(
o
);

435 
LUA_TLCF
:  
	`ˇ°
(*, ca°(
size_t
, 
	`fvÆue
(
o
)));

436 
LUA_TTHREAD
:  
	`thvÆue
(
o
);

437 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

438 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

439 :  
NULL
;

441 
	}
}

450 
LUA_API
 
	$lua_pushnû
 (
lua_Sèã
 *
L
) {

451 
	`lua_lock
(
L
);

452 
	`£äûvÆue
(
L
->
t›
);

453 
	`≠i_ö¸_t›
(
L
);

454 
	`lua_u∆ock
(
L
);

455 
	}
}

458 
LUA_API
 
	$lua_pushnumbî
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
n
) {

459 
	`lua_lock
(
L
);

460 
	`£tÊtvÆue
(
L
->
t›
, 
n
);

461 
	`≠i_ö¸_t›
(
L
);

462 
	`lua_u∆ock
(
L
);

463 
	}
}

466 
LUA_API
 
	$lua_pushöãgî
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
) {

467 
	`lua_lock
(
L
);

468 
	`£tivÆue
(
L
->
t›
, 
n
);

469 
	`≠i_ö¸_t›
(
L
);

470 
	`lua_u∆ock
(
L
);

471 
	}
}

479 
LUA_API
 c⁄° *
	$lua_pushl°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
) {

480 
TSåög
 *
ts
;

481 
	`lua_lock
(
L
);

482 
ts
 = (
Àn
 =0Ë? 
	`luaS_√w
(
L
, ""Ë: 
	`luaS_√wl°r
(L, 
s
,Üen);

483 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

484 
	`≠i_ö¸_t›
(
L
);

485 
	`luaC_checkGC
(
L
);

486 
	`lua_u∆ock
(
L
);

487  
	`gë°r
(
ts
);

488 
	}
}

491 
LUA_API
 c⁄° *
	$lua_push°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

492 
	`lua_lock
(
L
);

493 i‡(
s
 =
NULL
)

494 
	`£äûvÆue
(
L
->
t›
);

496 
TSåög
 *
ts
;

497 
ts
 = 
	`luaS_√w
(
L
, 
s
);

498 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

499 
s
 = 
	`gë°r
(
ts
);

501 
	`≠i_ö¸_t›
(
L
);

502 
	`luaC_checkGC
(
L
);

503 
	`lua_u∆ock
(
L
);

504  
s
;

505 
	}
}

508 
LUA_API
 c⁄° *
	$lua_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

509 
va_li°
 
¨gp
) {

510 c⁄° *
ªt
;

511 
	`lua_lock
(
L
);

512 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

513 
	`luaC_checkGC
(
L
);

514 
	`lua_u∆ock
(
L
);

515  
ªt
;

516 
	}
}

519 
LUA_API
 c⁄° *
	$lua_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

520 c⁄° *
ªt
;

521 
va_li°
 
¨gp
;

522 
	`lua_lock
(
L
);

523 
	`va_°¨t
(
¨gp
, 
fmt
);

524 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

525 
	`va_íd
(
¨gp
);

526 
	`luaC_checkGC
(
L
);

527 
	`lua_u∆ock
(
L
);

528  
ªt
;

529 
	}
}

532 
LUA_API
 
	$lua_pushc˛osuª
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
) {

533 
	`lua_lock
(
L
);

534 i‡(
n
 == 0) {

535 
	`£tfvÆue
(
L
->
t›
, 
‚
);

536 
	`≠i_ö¸_t›
(
L
);

539 
CClosuª
 *
˛
;

540 
	`≠i_check√Àms
(
L
, 
n
);

541 
	`≠i_check
(
L
, 
n
 <
MAXUPVAL
, "upvalue indexÅooÜarge");

542 
˛
 = 
	`luaF_√wC˛osuª
(
L
, 
n
);

543 
˛
->
f
 = 
‚
;

544 
L
->
t›
 -
n
;

545 
n
--) {

546 
	`£tobj2n
(
L
, &
˛
->
upvÆue
[
n
], L->
t›
 +Ç);

549 
	`£t˛CvÆue
(
L
, L->
t›
, 
˛
);

550 
	`≠i_ö¸_t›
(
L
);

551 
	`luaC_checkGC
(
L
);

553 
	`lua_u∆ock
(
L
);

554 
	}
}

557 
LUA_API
 
	$lua_pushboﬁón
 (
lua_Sèã
 *
L
, 
b
) {

558 
	`lua_lock
(
L
);

559 
	`£tbvÆue
(
L
->
t›
, (
b
 != 0));

560 
	`≠i_ö¸_t›
(
L
);

561 
	`lua_u∆ock
(
L
);

562 
	}
}

565 
LUA_API
 
	$lua_pushlightu£rd©a
 (
lua_Sèã
 *
L
, *
p
) {

566 
	`lua_lock
(
L
);

567 
	`£çvÆue
(
L
->
t›
, 
p
);

568 
	`≠i_ö¸_t›
(
L
);

569 
	`lua_u∆ock
(
L
);

570 
	}
}

573 
LUA_API
 
	$lua_pushthªad
 (
lua_Sèã
 *
L
) {

574 
	`lua_lock
(
L
);

575 
	`£âhvÆue
(
L
, L->
t›
, L);

576 
	`≠i_ö¸_t›
(
L
);

577 
	`lua_u∆ock
(
L
);

578  (
	`G
(
L
)->
maöthªad
 == L);

579 
	}
}

588 
	$auxgë°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

589 c⁄° 
TVÆue
 *
¶Ÿ
;

590 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

591 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
°r
, 
¶Ÿ
, 
luaH_gë°r
)) {

592 
	`£tobj2s
(
L
, L->
t›
, 
¶Ÿ
);

593 
	`≠i_ö¸_t›
(
L
);

596 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

597 
	`≠i_ö¸_t›
(
L
);

598 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
¶Ÿ
);

600 
	`lua_u∆ock
(
L
);

601  
	`ânov
(
L
->
t›
 - 1);

602 
	}
}

605 
LUA_API
 
	$lua_gëglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

606 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

607 
	`lua_lock
(
L
);

608  
	`auxgë°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

609 
	}
}

612 
LUA_API
 
	$lua_gëèbÀ
 (
lua_Sèã
 *
L
, 
idx
) {

613 
StkId
 
t
;

614 
	`lua_lock
(
L
);

615 
t
 = 
	`ödex2addr
(
L
, 
idx
);

616 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

617 
	`lua_u∆ock
(
L
);

618  
	`ânov
(
L
->
t›
 - 1);

619 
	}
}

622 
LUA_API
 
	$lua_gëfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

623 
	`lua_lock
(
L
);

624  
	`auxgë°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

625 
	}
}

628 
LUA_API
 
	$lua_gëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

629 
StkId
 
t
;

630 c⁄° 
TVÆue
 *
¶Ÿ
;

631 
	`lua_lock
(
L
);

632 
t
 = 
	`ödex2addr
(
L
, 
idx
);

633 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
n
, 
¶Ÿ
, 
luaH_gëöt
)) {

634 
	`£tobj2s
(
L
, L->
t›
, 
¶Ÿ
);

635 
	`≠i_ö¸_t›
(
L
);

638 
	`£tivÆue
(
L
->
t›
, 
n
);

639 
	`≠i_ö¸_t›
(
L
);

640 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
¶Ÿ
);

642 
	`lua_u∆ock
(
L
);

643  
	`ânov
(
L
->
t›
 - 1);

644 
	}
}

647 
LUA_API
 
	$lua_øwgë
 (
lua_Sèã
 *
L
, 
idx
) {

648 
StkId
 
t
;

649 
	`lua_lock
(
L
);

650 
t
 = 
	`ödex2addr
(
L
, 
idx
);

651 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

652 
	`£tobj2s
(
L
, L->
t›
 - 1, 
	`luaH_gë
(
	`hvÆue
(
t
), L->top - 1));

653 
	`lua_u∆ock
(
L
);

654  
	`ânov
(
L
->
t›
 - 1);

655 
	}
}

658 
LUA_API
 
	$lua_øwgëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

659 
StkId
 
t
;

660 
	`lua_lock
(
L
);

661 
t
 = 
	`ödex2addr
(
L
, 
idx
);

662 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

663 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gëöt
(
	`hvÆue
(
t
), 
n
));

664 
	`≠i_ö¸_t›
(
L
);

665 
	`lua_u∆ock
(
L
);

666  
	`ânov
(
L
->
t›
 - 1);

667 
	}
}

670 
LUA_API
 
	$lua_øwgëp
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

671 
StkId
 
t
;

672 
TVÆue
 
k
;

673 
	`lua_lock
(
L
);

674 
t
 = 
	`ödex2addr
(
L
, 
idx
);

675 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

676 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

677 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gë
(
	`hvÆue
(
t
), &
k
));

678 
	`≠i_ö¸_t›
(
L
);

679 
	`lua_u∆ock
(
L
);

680  
	`ânov
(
L
->
t›
 - 1);

681 
	}
}

684 
LUA_API
 
	$lua_¸óãèbÀ
 (
lua_Sèã
 *
L
, 
«ºay
, 
ƒec
) {

685 
TabÀ
 *
t
;

686 
	`lua_lock
(
L
);

687 
t
 = 
	`luaH_√w
(
L
);

688 
	`£thvÆue
(
L
, L->
t›
, 
t
);

689 
	`≠i_ö¸_t›
(
L
);

690 i‡(
«ºay
 > 0 || 
ƒec
 > 0)

691 
	`luaH_ªsize
(
L
, 
t
, 
«ºay
, 
ƒec
);

692 
	`luaC_checkGC
(
L
);

693 
	`lua_u∆ock
(
L
);

694 
	}
}

697 
LUA_API
 
	$lua_gëmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

698 c⁄° 
TVÆue
 *
obj
;

699 
TabÀ
 *
mt
;

700 
ªs
 = 0;

701 
	`lua_lock
(
L
);

702 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

703 
	`ânov
(
obj
)) {

704 
LUA_TTABLE
:

705 
mt
 = 
	`hvÆue
(
obj
)->
më©abÀ
;

707 
LUA_TUSERDATA
:

708 
mt
 = 
	`uvÆue
(
obj
)->
më©abÀ
;

711 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
obj
)];

714 i‡(
mt
 !
NULL
) {

715 
	`£thvÆue
(
L
, L->
t›
, 
mt
);

716 
	`≠i_ö¸_t›
(
L
);

717 
ªs
 = 1;

719 
	`lua_u∆ock
(
L
);

720  
ªs
;

721 
	}
}

724 
LUA_API
 
	$lua_gëu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

725 
StkId
 
o
;

726 
	`lua_lock
(
L
);

727 
o
 = 
	`ödex2addr
(
L
, 
idx
);

728 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

729 
	`gëu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
);

730 
	`≠i_ö¸_t›
(
L
);

731 
	`lua_u∆ock
(
L
);

732  
	`ânov
(
L
->
t›
 - 1);

733 
	}
}

743 
	$aux£t°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

744 c⁄° 
TVÆue
 *
¶Ÿ
;

745 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

746 
	`≠i_check√Àms
(
L
, 1);

747 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
°r
, 
¶Ÿ
, 
luaH_gë°r
, L->
t›
 - 1))

748 
L
->
t›
--;

750 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

751 
	`≠i_ö¸_t›
(
L
);

752 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
¶Ÿ
);

753 
L
->
t›
 -= 2;

755 
	`lua_u∆ock
(
L
);

756 
	}
}

759 
LUA_API
 
	$lua_£tglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

760 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

761 
	`lua_lock
(
L
);

762 
	`aux£t°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

763 
	}
}

766 
LUA_API
 
	$lua_£âabÀ
 (
lua_Sèã
 *
L
, 
idx
) {

767 
StkId
 
t
;

768 
	`lua_lock
(
L
);

769 
	`≠i_check√Àms
(
L
, 2);

770 
t
 = 
	`ödex2addr
(
L
, 
idx
);

771 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 2, L->top - 1);

772 
L
->
t›
 -= 2;

773 
	`lua_u∆ock
(
L
);

774 
	}
}

777 
LUA_API
 
	$lua_£tfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

778 
	`lua_lock
(
L
);

779 
	`aux£t°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

780 
	}
}

783 
LUA_API
 
	$lua_£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

784 
StkId
 
t
;

785 c⁄° 
TVÆue
 *
¶Ÿ
;

786 
	`lua_lock
(
L
);

787 
	`≠i_check√Àms
(
L
, 1);

788 
t
 = 
	`ödex2addr
(
L
, 
idx
);

789 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
n
, 
¶Ÿ
, 
luaH_gëöt
, L->
t›
 - 1))

790 
L
->
t›
--;

792 
	`£tivÆue
(
L
->
t›
, 
n
);

793 
	`≠i_ö¸_t›
(
L
);

794 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
¶Ÿ
);

795 
L
->
t›
 -= 2;

797 
	`lua_u∆ock
(
L
);

798 
	}
}

801 
LUA_API
 
	$lua_øw£t
 (
lua_Sèã
 *
L
, 
idx
) {

802 
StkId
 
o
;

803 
TVÆue
 *
¶Ÿ
;

804 
	`lua_lock
(
L
);

805 
	`≠i_check√Àms
(
L
, 2);

806 
o
 = 
	`ödex2addr
(
L
, 
idx
);

807 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

808 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 2);

809 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

810 
	`övÆid©eTMˇche
(
	`hvÆue
(
o
));

811 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

812 
L
->
t›
 -= 2;

813 
	`lua_u∆ock
(
L
);

814 
	}
}

817 
LUA_API
 
	$lua_øw£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

818 
StkId
 
o
;

819 
	`lua_lock
(
L
);

820 
	`≠i_check√Àms
(
L
, 1);

821 
o
 = 
	`ödex2addr
(
L
, 
idx
);

822 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

823 
	`luaH_£töt
(
L
, 
	`hvÆue
(
o
), 
n
, L->
t›
 - 1);

824 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

825 
L
->
t›
--;

826 
	`lua_u∆ock
(
L
);

827 
	}
}

830 
LUA_API
 
	$lua_øw£ç
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

831 
StkId
 
o
;

832 
TVÆue
 
k
, *
¶Ÿ
;

833 
	`lua_lock
(
L
);

834 
	`≠i_check√Àms
(
L
, 1);

835 
o
 = 
	`ödex2addr
(
L
, 
idx
);

836 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

837 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

838 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), &
k
);

839 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

840 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 1);

841 
L
->
t›
--;

842 
	`lua_u∆ock
(
L
);

843 
	}
}

846 
LUA_API
 
	$lua_£tmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

847 
TVÆue
 *
obj
;

848 
TabÀ
 *
mt
;

849 
	`lua_lock
(
L
);

850 
	`≠i_check√Àms
(
L
, 1);

851 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

852 i‡(
	`âi¢û
(
L
->
t›
 - 1))

853 
mt
 = 
NULL
;

855 
	`≠i_check
(
L
, 
	`âi°abÀ
(L->
t›
 - 1), "tableÉxpected");

856 
mt
 = 
	`hvÆue
(
L
->
t›
 - 1);

858 
	`ânov
(
obj
)) {

859 
LUA_TTABLE
: {

860 
	`hvÆue
(
obj
)->
më©abÀ
 = 
mt
;

861 i‡(
mt
) {

862 
	`luaC_objb¨rõr
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

863 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

867 
LUA_TUSERDATA
: {

868 
	`uvÆue
(
obj
)->
më©abÀ
 = 
mt
;

869 i‡(
mt
) {

870 
	`luaC_objb¨rõr
(
L
, 
	`uvÆue
(
obj
), 
mt
);

871 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

876 
	`G
(
L
)->
mt
[
	`ânov
(
obj
)] = mt;

880 
L
->
t›
--;

881 
	`lua_u∆ock
(
L
);

883 
	}
}

886 
LUA_API
 
	$lua_£tu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

887 
StkId
 
o
;

888 
	`lua_lock
(
L
);

889 
	`≠i_check√Àms
(
L
, 1);

890 
o
 = 
	`ödex2addr
(
L
, 
idx
);

891 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

892 
	`£tu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
 - 1);

893 
	`luaC_b¨rõr
(
L
, 
	`gcvÆue
(
o
), L->
t›
 - 1);

894 
L
->
t›
--;

895 
	`lua_u∆ock
(
L
);

896 
	}
}

904 
	#checkªsu…s
(
L
,
«
,
ƒ
) \

905 
	`≠i_check
(
L
, (
ƒ
Ë=
LUA_MULTRET
 || (L->
ci
->
t›
 - L->t› >“rË- (
«
)), \

906 "ªsu…†‰om fun˘i⁄ ovîÊow cuºíà°ack size")

	)

909 
LUA_API
 
	$lua_ˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

910 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

911 
StkId
 
func
;

912 
	`lua_lock
(
L
);

913 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

915 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

916 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

917 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

918 
func
 = 
L
->
t›
 - (
«rgs
+1);

919 i‡(
k
 !
NULL
 && 
L
->
¬y
 == 0) {

920 
L
->
ci
->
u
.
c
.
k
 = k;

921 
L
->
ci
->
u
.
c
.
˘x
 = ctx;

922 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
);

925 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ƒesu…s
);

926 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

927 
	`lua_u∆ock
(
L
);

928 
	}
}

935 
	sCÆlS
 {

936 
StkId
 
	mfunc
;

937 
	mƒesu…s
;

941 
	$f_ˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

942 
CÆlS
 *
c
 = 
	`ˇ°
(CÆlS *, 
ud
);

943 
	`luaD_ˇŒnoyõld
(
L
, 
c
->
func
, c->
ƒesu…s
);

944 
	}
}

948 
LUA_API
 
	$lua_pˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

949 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

950 
CÆlS
 
c
;

951 
°©us
;

952 
±rdiff_t
 
func
;

953 
	`lua_lock
(
L
);

954 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

956 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

957 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

958 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

959 i‡(
îrfunc
 == 0)

960 
func
 = 0;

962 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
îrfunc
);

963 
	`≠i_check°acködex
(
L
, 
îrfunc
, 
o
);

964 
func
 = 
	`ßve°ack
(
L
, 
o
);

966 
c
.
func
 = 
L
->
t›
 - (
«rgs
+1);

967 i‡(
k
 =
NULL
 || 
L
->
¬y
 > 0) {

968 
c
.
ƒesu…s
 =Çresults;

969 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_ˇŒ
, &
c
, 
	`ßve°ack
(L, c.
func
), func);

972 
CÆlInfo
 *
ci
 = 
L
->ci;

973 
ci
->
u
.
c
.
k
 = k;

974 
ci
->
u
.
c
.
˘x
 = ctx;

976 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
c
.
func
);

977 
ci
->
u
.
c
.
ﬁd_îrfunc
 = 
L
->
îrfunc
;

978 
L
->
îrfunc
 = 
func
;

979 
	`£tﬂh
(
ci
->
ˇŒ°©us
, 
L
->
Ælowhook
);

980 
ci
->
ˇŒ°©us
 |
CIST_YPCALL
;

981 
	`luaD_ˇŒ
(
L
, 
c
.
func
, 
ƒesu…s
);

982 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

983 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

984 
°©us
 = 
LUA_OK
;

986 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

987 
	`lua_u∆ock
(
L
);

988  
°©us
;

989 
	}
}

992 
LUA_API
 
	$lua_lﬂd
 (
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
d©a
,

993 c⁄° *
chunk«me
, c⁄° *
mode
) {

994 
ZIO
 
z
;

995 
°©us
;

996 
	`lua_lock
(
L
);

997 i‡(!
chunk«me
) chunkname = "?";

998 
	`luaZ_öô
(
L
, &
z
, 
ªadî
, 
d©a
);

999 
°©us
 = 
	`luaD_¥Ÿe˘ed∑r£r
(
L
, &
z
, 
chunk«me
, 
mode
);

1000 i‡(
°©us
 =
LUA_OK
) {

1001 
LClosuª
 *
f
 = 
	`˛LvÆue
(
L
->
t›
 - 1);

1002 i‡(
f
->
nupvÆues
 >= 1) {

1004 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

1005 c⁄° 
TVÆue
 *
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

1007 
	`£tobj
(
L
, 
f
->
upvÆs
[0]->
v
, 
gt
);

1008 
	`luaC_upvÆb¨rõr
(
L
, 
f
->
upvÆs
[0]);

1011 
	`lua_u∆ock
(
L
);

1012  
°©us
;

1013 
	}
}

1016 
LUA_API
 
	$lua_dump
 (
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
) {

1017 
°©us
;

1018 
TVÆue
 *
o
;

1019 
	`lua_lock
(
L
);

1020 
	`≠i_check√Àms
(
L
, 1);

1021 
o
 = 
L
->
t›
 - 1;

1022 i‡(
	`isLfun˘i⁄
(
o
))

1023 
°©us
 = 
	`luaU_dump
(
L
, 
	`gë¥Ÿo
(
o
), 
wrôî
, 
d©a
, 
°rù
);

1025 
°©us
 = 1;

1026 
	`lua_u∆ock
(
L
);

1027  
°©us
;

1028 
	}
}

1031 
LUA_API
 
	$lua_°©us
 (
lua_Sèã
 *
L
) {

1032  
L
->
°©us
;

1033 
	}
}

1040 
LUA_API
 
	$lua_gc
 (
lua_Sèã
 *
L
, 
wh©
, 
d©a
) {

1041 
ªs
 = 0;

1042 
globÆ_Sèã
 *
g
;

1043 
	`lua_lock
(
L
);

1044 
g
 = 
	`G
(
L
);

1045 
wh©
) {

1046 
LUA_GCSTOP
: {

1047 
g
->
g¸u¬ög
 = 0;

1050 
LUA_GCRESTART
: {

1051 
	`luaE_£tdebt
(
g
, 0);

1052 
g
->
g¸u¬ög
 = 1;

1055 
LUA_GCCOLLECT
: {

1056 
	`luaC_fuŒgc
(
L
, 0);

1059 
LUA_GCCOUNT
: {

1061 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) >> 10);

1064 
LUA_GCCOUNTB
: {

1065 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) & 0x3ff);

1068 
LUA_GCSTEP
: {

1069 
l_mem
 
debt
 = 1;

1070 
lu_byã
 
ﬁdru¬ög
 = 
g
->
g¸u¬ög
;

1071 
g
->
g¸u¬ög
 = 1;

1072 i‡(
d©a
 == 0) {

1073 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
);

1074 
	`luaC_°ï
(
L
);

1077 
debt
 = 
	`ˇ°
(
l_mem
, 
d©a
Ë* 1024 + 
g
->
GCdebt
;

1078 
	`luaE_£tdebt
(
g
, 
debt
);

1079 
	`luaC_checkGC
(
L
);

1081 
g
->
g¸u¬ög
 = 
ﬁdru¬ög
;

1082 i‡(
debt
 > 0 && 
g
->
gc°©e
 =
GCS∑u£
)

1083 
ªs
 = 1;

1086 
LUA_GCSETPAUSE
: {

1087 
ªs
 = 
g
->
g˝au£
;

1088 
g
->
g˝au£
 = 
d©a
;

1091 
LUA_GCSETSTEPMUL
: {

1092 
ªs
 = 
g
->
gc°ïmul
;

1093 i‡(
d©a
 < 40) data = 40;

1094 
g
->
gc°ïmul
 = 
d©a
;

1097 
LUA_GCISRUNNING
: {

1098 
ªs
 = 
g
->
g¸u¬ög
;

1101 : 
ªs
 = -1;

1103 
	`lua_u∆ock
(
L
);

1104  
ªs
;

1105 
	}
}

1114 
LUA_API
 
	$lua_îr‹
 (
lua_Sèã
 *
L
) {

1115 
	`lua_lock
(
L
);

1116 
	`≠i_check√Àms
(
L
, 1);

1117 
	`luaG_îr‹msg
(
L
);

1120 
	}
}

1123 
LUA_API
 
	$lua_√xt
 (
lua_Sèã
 *
L
, 
idx
) {

1124 
StkId
 
t
;

1125 
m‹e
;

1126 
	`lua_lock
(
L
);

1127 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1128 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

1129 
m‹e
 = 
	`luaH_√xt
(
L
, 
	`hvÆue
(
t
), L->
t›
 - 1);

1130 i‡(
m‹e
) {

1131 
	`≠i_ö¸_t›
(
L
);

1134 
L
->
t›
 -= 1;

1135 
	`lua_u∆ock
(
L
);

1136  
m‹e
;

1137 
	}
}

1140 
LUA_API
 
	$lua_c⁄ˇt
 (
lua_Sèã
 *
L
, 
n
) {

1141 
	`lua_lock
(
L
);

1142 
	`≠i_check√Àms
(
L
, 
n
);

1143 i‡(
n
 >= 2) {

1144 
	`luaV_c⁄ˇt
(
L
, 
n
);

1146 i‡(
n
 == 0) {

1147 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, "", 0));

1148 
	`≠i_ö¸_t›
(
L
);

1151 
	`luaC_checkGC
(
L
);

1152 
	`lua_u∆ock
(
L
);

1153 
	}
}

1156 
LUA_API
 
	$lua_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

1157 
StkId
 
t
;

1158 
	`lua_lock
(
L
);

1159 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1160 
	`luaV_objÀn
(
L
, L->
t›
, 
t
);

1161 
	`≠i_ö¸_t›
(
L
);

1162 
	`lua_u∆ock
(
L
);

1163 
	}
}

1166 
LUA_API
 
lua_AŒoc
 
	$lua_gëÆlocf
 (
lua_Sèã
 *
L
, **
ud
) {

1167 
lua_AŒoc
 
f
;

1168 
	`lua_lock
(
L
);

1169 i‡(
ud
Ë*ud = 
	`G
(
L
)->ud;

1170 
f
 = 
	`G
(
L
)->
‰óŒoc
;

1171 
	`lua_u∆ock
(
L
);

1172  
f
;

1173 
	}
}

1176 
LUA_API
 
	$lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
) {

1177 
	`lua_lock
(
L
);

1178 
	`G
(
L
)->
ud
 = ud;

1179 
	`G
(
L
)->
‰óŒoc
 = 
f
;

1180 
	`lua_u∆ock
(
L
);

1181 
	}
}

1184 
LUA_API
 *
	$lua_√wu£rd©a
 (
lua_Sèã
 *
L
, 
size_t
 
size
) {

1185 
Ud©a
 *
u
;

1186 
	`lua_lock
(
L
);

1187 
u
 = 
	`luaS_√wud©a
(
L
, 
size
);

1188 
	`£tuvÆue
(
L
, L->
t›
, 
u
);

1189 
	`≠i_ö¸_t›
(
L
);

1190 
	`luaC_checkGC
(
L
);

1191 
	`lua_u∆ock
(
L
);

1192  
	`gëud©amem
(
u
);

1193 
	}
}

1197 c⁄° *
	$aux_upvÆue
 (
StkId
 
fi
, 
n
, 
TVÆue
 **
vÆ
,

1198 
CClosuª
 **
ow√r
, 
UpVÆ
 **
uv
) {

1199 
	`ây≥
(
fi
)) {

1200 
LUA_TCCL
: {

1201 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1202 i‡(!(1 <
n
 &&Ç <
f
->
nupvÆues
)Ë 
NULL
;

1203 *
vÆ
 = &
f
->
upvÆue
[
n
-1];

1204 i‡(
ow√r
Ë*ow√∏
f
;

1207 
LUA_TLCL
: {

1208 
LClosuª
 *
f
 = 
	`˛LvÆue
(
fi
);

1209 
TSåög
 *
«me
;

1210 
PrŸo
 *
p
 = 
f
->p;

1211 i‡(!(1 <
n
 &&Ç <
p
->
sizeupvÆues
)Ë 
NULL
;

1212 *
vÆ
 = 
f
->
upvÆs
[
n
-1]->
v
;

1213 i‡(
uv
Ë*uv = 
f
->
upvÆs
[
n
 - 1];

1214 
«me
 = 
p
->
upvÆues
[
n
-1].name;

1215  (
«me
 =
NULL
Ë? "(*nÿ«me)" : 
	`gë°r
(name);

1217 :  
NULL
;

1219 
	}
}

1222 
LUA_API
 c⁄° *
	$lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1223 c⁄° *
«me
;

1224 
TVÆue
 *
vÆ
 = 
NULL
;

1225 
	`lua_lock
(
L
);

1226 
«me
 = 
	`aux_upvÆue
(
	`ödex2addr
(
L
, 
funcödex
), 
n
, &
vÆ
, 
NULL
, NULL);

1227 i‡(
«me
) {

1228 
	`£tobj2s
(
L
, L->
t›
, 
vÆ
);

1229 
	`≠i_ö¸_t›
(
L
);

1231 
	`lua_u∆ock
(
L
);

1232  
«me
;

1233 
	}
}

1236 
LUA_API
 c⁄° *
	$lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1237 c⁄° *
«me
;

1238 
TVÆue
 *
vÆ
 = 
NULL
;

1239 
CClosuª
 *
ow√r
 = 
NULL
;

1240 
UpVÆ
 *
uv
 = 
NULL
;

1241 
StkId
 
fi
;

1242 
	`lua_lock
(
L
);

1243 
fi
 = 
	`ödex2addr
(
L
, 
funcödex
);

1244 
	`≠i_check√Àms
(
L
, 1);

1245 
«me
 = 
	`aux_upvÆue
(
fi
, 
n
, &
vÆ
, &
ow√r
, &
uv
);

1246 i‡(
«me
) {

1247 
L
->
t›
--;

1248 
	`£tobj
(
L
, 
vÆ
, L->
t›
);

1249 i‡(
ow√r
Ë{ 
	`luaC_b¨rõr
(
L
, ow√r, L->
t›
); }

1250 i‡(
uv
Ë{ 
	`luaC_upvÆb¨rõr
(
L
, uv); }

1252 
	`lua_u∆ock
(
L
);

1253  
«me
;

1254 
	}
}

1257 
UpVÆ
 **
	$gëupvÆªf
 (
lua_Sèã
 *
L
, 
fidx
, 
n
, 
LClosuª
 **
pf
) {

1258 
LClosuª
 *
f
;

1259 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1260 
	`≠i_check
(
L
, 
	`âisL˛osuª
(
fi
), "Lua functionÉxpected");

1261 
f
 = 
	`˛LvÆue
(
fi
);

1262 
	`≠i_check
(
L
, (1 <
n
 &&Ç <
f
->
p
->
sizeupvÆues
), "invalid upvalue index");

1263 i‡(
pf
Ë*p‡
f
;

1264  &
f
->
upvÆs
[
n
 - 1];

1265 
	}
}

1268 
LUA_API
 *
	$lua_upvÆueid
 (
lua_Sèã
 *
L
, 
fidx
, 
n
) {

1269 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1270 
	`ây≥
(
fi
)) {

1271 
LUA_TLCL
: {

1272  *
	`gëupvÆªf
(
L
, 
fidx
, 
n
, 
NULL
);

1274 
LUA_TCCL
: {

1275 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1276 
	`≠i_check
(
L
, 1 <
n
 &&Ç <
f
->
nupvÆues
, "invalid upvalue index");

1277  &
f
->
upvÆue
[
n
 - 1];

1280 
	`≠i_check
(
L
, 0, "closureÉxpected");

1281  
NULL
;

1284 
	}
}

1287 
LUA_API
 
	$lua_upvÆuejoö
 (
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

1288 
fidx2
, 
n2
) {

1289 
LClosuª
 *
f1
;

1290 
UpVÆ
 **
up1
 = 
	`gëupvÆªf
(
L
, 
fidx1
, 
n1
, &
f1
);

1291 
UpVÆ
 **
up2
 = 
	`gëupvÆªf
(
L
, 
fidx2
, 
n2
, 
NULL
);

1292 
	`luaC_upvdeccou¡
(
L
, *
up1
);

1293 *
up1
 = *
up2
;

1294 (*
up1
)->
ªfcou¡
++;

1295 i‡(
	`upis›í
(*
up1
)Ë(*up1)->
u
.
›í
.
touched
 = 1;

1296 
	`luaC_upvÆb¨rõr
(
L
, *
up1
);

1297 
	}
}

	@lapi.h

7 #i‚de‡
œpi_h


8 
	#œpi_h


	)

11 
	~"Œimôs.h
"

12 
	~"l°©e.h
"

14 
	#≠i_ö¸_t›
(
L
Ë{L->
t›
++; 
	`≠i_check
(L, L->t› <L->
ci
->top, \

15 "°ack ovîÊow");}

	)

17 
	#adju°ªsu…s
(
L
,
ƒes
) \

18 { i‡((
ƒes
Ë=
LUA_MULTRET
 && 
L
->
ci
->
t›
 < L->t›ËL->ci->t› = L->t›; }

	)

20 
	#≠i_check√Àms
(
L
,
n
Ë
	`≠i_check
(L, (nË< (L->
t›
 - L->
ci
->
func
), \

21 "nŸÉnoughÉÀmít†öÅhê°ack")

	)

	@lauxlib.c

7 
	#œuxlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

25 
	~"lua.h
"

27 
	~"œuxlib.h
"

37 
	#LEVELS1
 10

	)

38 
	#LEVELS2
 11

	)

46 
	$födfõld
 (
lua_Sèã
 *
L
, 
objidx
, 
Àvñ
) {

47 i‡(
Àvñ
 =0 || !
	`lua_i°abÀ
(
L
, -1))

49 
	`lua_pushnû
(
L
);

50 
	`lua_√xt
(
L
, -2)) {

51 i‡(
	`lua_ty≥
(
L
, -2Ë=
LUA_TSTRING
) {

52 i‡(
	`lua_øwequÆ
(
L
, 
objidx
, -1)) {

53 
	`lua_p›
(
L
, 1);

56 i‡(
	`födfõld
(
L
, 
objidx
, 
Àvñ
 - 1)) {

57 
	`lua_ªmove
(
L
, -2);

58 
	`lua_pushlôîÆ
(
L
, ".");

59 
	`lua_ö£π
(
L
, -2);

60 
	`lua_c⁄ˇt
(
L
, 3);

64 
	`lua_p›
(
L
, 1);

67 
	}
}

73 
	$pushglobÆfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

74 
t›
 = 
	`lua_gët›
(
L
);

75 
	`lua_gëöfo
(
L
, "f", 
¨
);

76 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

77 i‡(
	`födfõld
(
L
, 
t›
 + 1, 2)) {

78 c⁄° *
«me
 = 
	`lua_to°rög
(
L
, -1);

79 i‡(
	`°∫cmp
(
«me
, "_G.", 3) == 0) {

80 
	`lua_push°rög
(
L
, 
«me
 + 3);

81 
	`lua_ªmove
(
L
, -2);

83 
	`lua_c›y
(
L
, -1, 
t›
 + 1);

84 
	`lua_p›
(
L
, 2);

88 
	`lua_£â›
(
L
, 
t›
);

91 
	}
}

94 
	$pushfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

95 i‡(
	`pushglobÆfun˙ame
(
L
, 
¨
)) {

96 
	`lua_pushf°rög
(
L
, "fun˘i⁄ '%s'", 
	`lua_to°rög
(L, -1));

97 
	`lua_ªmove
(
L
, -2);

99 i‡(*
¨
->
«mewh©
 != '\0')

100 
	`lua_pushf°rög
(
L
, "%†'%s'", 
¨
->
«mewh©
,ár->
«me
);

101 i‡(*
¨
->
wh©
 == 'm')

102 
	`lua_pushlôîÆ
(
L
, "main chunk");

103 i‡(*
¨
->
wh©
 != 'C')

104 
	`lua_pushf°rög
(
L
, "fun˘i⁄ <%s:%d>", 
¨
->
sh‹t_§c
,ár->
löedeföed
);

106 
	`lua_pushlôîÆ
(
L
, "?");

107 
	}
}

110 
	$œ°Àvñ
 (
lua_Sèã
 *
L
) {

111 
lua_Debug
 
¨
;

112 
li
 = 1, 
À
 = 1;

114 
	`lua_gë°ack
(
L
, 
À
, &
¨
)Ë{ 
li
 =Üe;Üe *= 2; }

116 
li
 < 
À
) {

117 
m
 = (
li
 + 
À
)/2;

118 i‡(
	`lua_gë°ack
(
L
, 
m
, &
¨
)Ë
li
 = m + 1;

119 
À
 = 
m
;

121  
À
 - 1;

122 
	}
}

125 
LUALIB_API
 
	$luaL_åa˚back
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

126 c⁄° *
msg
, 
Àvñ
) {

127 
lua_Debug
 
¨
;

128 
t›
 = 
	`lua_gët›
(
L
);

129 
œ°
 = 
	`œ°Àvñ
(
L1
);

130 
n1
 = (
œ°
 - 
Àvñ
 > 
LEVELS1
 + 
LEVELS2
) ? LEVELS1 : -1;

131 i‡(
msg
)

132 
	`lua_pushf°rög
(
L
, "%s\n", 
msg
);

133 
	`luaL_check°ack
(
L
, 10, 
NULL
);

134 
	`lua_pushlôîÆ
(
L
, "stackÅraceback:");

135 
	`lua_gë°ack
(
L1
, 
Àvñ
++, &
¨
)) {

136 i‡(
n1
-- == 0) {

137 
	`lua_pushlôîÆ
(
L
, "\n\t...");

138 
Àvñ
 = 
œ°
 - 
LEVELS2
 + 1;

141 
	`lua_gëöfo
(
L1
, "S t", &
¨
);

142 
	`lua_pushf°rög
(
L
, "\n\t%s:", 
¨
.
sh‹t_§c
);

143 i‡(
¨
.
cuºíéöe
 > 0)

144 
	`lua_pushf°rög
(
L
, "%d:", 
¨
.
cuºíéöe
);

145 
	`lua_pushlôîÆ
(
L
, " in ");

146 
	`pushfun˙ame
(
L
, &
¨
);

147 i‡(
¨
.
i°aûˇŒ
)

148 
	`lua_pushlôîÆ
(
L
, "\n\t(...tail calls...)");

149 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

152 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

153 
	}
}

164 
LUALIB_API
 
	$luaL_¨gîr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
) {

165 
lua_Debug
 
¨
;

166 i‡(!
	`lua_gë°ack
(
L
, 0, &
¨
))

167  
	`luaL_îr‹
(
L
, "badárgumíà#%d (%s)", 
¨g
, 
exåamsg
);

168 
	`lua_gëöfo
(
L
, "n", &
¨
);

169 i‡(
	`°rcmp
(
¨
.
«mewh©
, "method") == 0) {

170 
¨g
--;

171 i‡(
¨g
 == 0)

172  
	`luaL_îr‹
(
L
, "calling '%s' on bad self (%s)",

173 
¨
.
«me
, 
exåamsg
);

175 i‡(
¨
.
«me
 =
NULL
)

176 
¨
.
«me
 = (
	`pushglobÆfun˙ame
(
L
, &¨)Ë? 
	`lua_to°rög
(L, -1) : "?";

177  
	`luaL_îr‹
(
L
, "badárgument #%dÅo '%s' (%s)",

178 
¨g
, 
¨
.
«me
, 
exåamsg
);

179 
	}
}

182 
	$ty≥îr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
äame
) {

183 c⁄° *
msg
;

184 c⁄° *
ty≥¨g
;

185 i‡(
	`luaL_gëmëafõld
(
L
, 
¨g
, "__«me"Ë=
LUA_TSTRING
)

186 
ty≥¨g
 = 
	`lua_to°rög
(
L
, -1);

187 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TLIGHTUSERDATA
)

188 
ty≥¨g
 = "light userdata";

190 
ty≥¨g
 = 
	`luaL_ty≥«me
(
L
, 
¨g
);

191 
msg
 = 
	`lua_pushf°rög
(
L
, "%†ex≥˘ed, gŸ %s", 
äame
, 
ty≥¨g
);

192  
	`luaL_¨gîr‹
(
L
, 
¨g
, 
msg
);

193 
	}
}

196 
	$èg_îr‹
 (
lua_Sèã
 *
L
, 
¨g
, 
èg
) {

197 
	`ty≥îr‹
(
L
, 
¨g
, 
	`lua_ty≥«me
(L, 
èg
));

198 
	}
}

205 
LUALIB_API
 
	$luaL_whîe
 (
lua_Sèã
 *
L
, 
Àvñ
) {

206 
lua_Debug
 
¨
;

207 i‡(
	`lua_gë°ack
(
L
, 
Àvñ
, &
¨
)) {

208 
	`lua_gëöfo
(
L
, "Sl", &
¨
);

209 i‡(
¨
.
cuºíéöe
 > 0) {

210 
	`lua_pushf°rög
(
L
, "%s:%d: ", 
¨
.
sh‹t_§c
,ár.
cuºíéöe
);

214 
	`lua_pushf°rög
(
L
, "");

215 
	}
}

223 
LUALIB_API
 
	$luaL_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

224 
va_li°
 
¨gp
;

225 
	`va_°¨t
(
¨gp
, 
fmt
);

226 
	`luaL_whîe
(
L
, 1);

227 
	`lua_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

228 
	`va_íd
(
¨gp
);

229 
	`lua_c⁄ˇt
(
L
, 2);

230  
	`lua_îr‹
(
L
);

231 
	}
}

234 
LUALIB_API
 
	$luaL_fûîesu…
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
) {

235 
í
 = 
î∫o
;

236 i‡(
°©
) {

237 
	`lua_pushboﬁón
(
L
, 1);

241 
	`lua_pushnû
(
L
);

242 i‡(
‚ame
)

243 
	`lua_pushf°rög
(
L
, "%s: %s", 
‚ame
, 
	`°ªº‹
(
í
));

245 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

246 
	`lua_pushöãgî
(
L
, 
í
);

249 
	}
}

252 #i‡!
deföed
(
l_ö•e˘°©
)

254 #i‡
deföed
(
LUA_USE_POSIX
)

256 
	~<sys/waô.h
>

261 
	#l_ö•e˘°©
(
°©
,
wh©
) \

262 i‡(
	`WIFEXITED
(
°©
)Ë{ sèà
	`WEXITSTATUS
(stat); } \

263 i‡(
	`WIFSIGNALED
(
°©
)Ë{ sèà
	`WTERMSIG
(°©); 
wh©
 = "sig«l"; }

	)

267 
	#l_ö•e˘°©
(
°©
,
wh©
Ë

	)

274 
LUALIB_API
 
	$luaL_exe¸esu…
 (
lua_Sèã
 *
L
, 
°©
) {

275 c⁄° *
wh©
 = "exit";

276 i‡(
°©
 == -1)

277  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

279 
	`l_ö•e˘°©
(
°©
, 
wh©
);

280 i‡(*
wh©
 ='e' && 
°©
 == 0)

281 
	`lua_pushboﬁón
(
L
, 1);

283 
	`lua_pushnû
(
L
);

284 
	`lua_push°rög
(
L
, 
wh©
);

285 
	`lua_pushöãgî
(
L
, 
°©
);

288 
	}
}

299 
LUALIB_API
 
	$luaL_√wmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

300 i‡(
	`luaL_gëmë©abÀ
(
L
, 
äame
Ë!
LUA_TNIL
)

302 
	`lua_p›
(
L
, 1);

303 
	`lua_¸óãèbÀ
(
L
, 0, 2);

304 
	`lua_push°rög
(
L
, 
äame
);

305 
	`lua_£tfõld
(
L
, -2, "__name");

306 
	`lua_pushvÆue
(
L
, -1);

307 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
äame
);

309 
	}
}

312 
LUALIB_API
 
	$luaL_£tmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

313 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

314 
	`lua_£tmë©abÀ
(
L
, -2);

315 
	}
}

318 
LUALIB_API
 *
	$luaL_ã°ud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

319 *
p
 = 
	`lua_tou£rd©a
(
L
, 
ud
);

320 i‡(
p
 !
NULL
) {

321 i‡(
	`lua_gëmë©abÀ
(
L
, 
ud
)) {

322 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

323 i‡(!
	`lua_øwequÆ
(
L
, -1, -2))

324 
p
 = 
NULL
;

325 
	`lua_p›
(
L
, 2);

326  
p
;

329  
NULL
;

330 
	}
}

333 
LUALIB_API
 *
	$luaL_checkud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

334 *
p
 = 
	`luaL_ã°ud©a
(
L
, 
ud
, 
äame
);

335 i‡(
p
 =
NULL
Ë
	`ty≥îr‹
(
L
, 
ud
, 
äame
);

336  
p
;

337 
	}
}

348 
LUALIB_API
 
	$luaL_check›ti⁄
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

349 c⁄° *c⁄° 
l°
[]) {

350 c⁄° *
«me
 = (
def
Ë? 
	`luaL_›t°rög
(
L
, 
¨g
, def) :

351 
	`luaL_check°rög
(
L
, 
¨g
);

352 
i
;

353 
i
=0; 
l°
[i]; i++)

354 i‡(
	`°rcmp
(
l°
[
i
], 
«me
) == 0)

355  
i
;

356  
	`luaL_¨gîr‹
(
L
, 
¨g
,

357 
	`lua_pushf°rög
(
L
, "övÆid o±i⁄ '%s'", 
«me
));

358 
	}
}

368 
LUALIB_API
 
	$luaL_check°ack
 (
lua_Sèã
 *
L
, 
•a˚
, c⁄° *
msg
) {

369 i‡(!
	`lua_check°ack
(
L
, 
•a˚
)) {

370 i‡(
msg
)

371 
	`luaL_îr‹
(
L
, "°ack ovîÊow (%s)", 
msg
);

373 
	`luaL_îr‹
(
L
, "stack overflow");

375 
	}
}

378 
LUALIB_API
 
	$luaL_checkty≥
 (
lua_Sèã
 *
L
, 
¨g
, 
t
) {

379 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
t
)

380 
	`èg_îr‹
(
L
, 
¨g
, 
t
);

381 
	}
}

384 
LUALIB_API
 
	$luaL_check™y
 (
lua_Sèã
 *
L
, 
¨g
) {

385 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNONE
)

386 
	`luaL_¨gîr‹
(
L
, 
¨g
, "valueÉxpected");

387 
	}
}

390 
LUALIB_API
 c⁄° *
	$luaL_checkl°rög
 (
lua_Sèã
 *
L
, 
¨g
, 
size_t
 *
Àn
) {

391 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, 
Àn
);

392 i‡(!
s
Ë
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TSTRING
);

393  
s
;

394 
	}
}

397 
LUALIB_API
 c⁄° *
	$luaL_›é°rög
 (
lua_Sèã
 *
L
, 
¨g
,

398 c⁄° *
def
, 
size_t
 *
Àn
) {

399 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
)) {

400 i‡(
Àn
)

401 *
Àn
 = (
def
 ? 
	`°æí
(def) : 0);

402  
def
;

404  
	`luaL_checkl°rög
(
L
, 
¨g
, 
Àn
);

405 
	}
}

408 
LUALIB_API
 
lua_Numbî
 
	$luaL_checknumbî
 (
lua_Sèã
 *
L
, 
¨g
) {

409 
i¢um
;

410 
lua_Numbî
 
d
 = 
	`lua_t⁄umbîx
(
L
, 
¨g
, &
i¢um
);

411 i‡(!
i¢um
)

412 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

413  
d
;

414 
	}
}

417 
LUALIB_API
 
lua_Numbî
 
	$luaL_›äumbî
 (
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
) {

418  
	`luaL_›t
(
L
, 
luaL_checknumbî
, 
¨g
, 
def
);

419 
	}
}

422 
	$öãº‹
 (
lua_Sèã
 *
L
, 
¨g
) {

423 i‡(
	`lua_i¢umbî
(
L
, 
¨g
))

424 
	`luaL_¨gîr‹
(
L
, 
¨g
, "number hasÇo integerÑepresentation");

426 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

427 
	}
}

430 
LUALIB_API
 
lua_I¡egî
 
	$luaL_checköãgî
 (
lua_Sèã
 *
L
, 
¨g
) {

431 
i¢um
;

432 
lua_I¡egî
 
d
 = 
	`lua_toöãgîx
(
L
, 
¨g
, &
i¢um
);

433 i‡(!
i¢um
) {

434 
	`öãº‹
(
L
, 
¨g
);

436  
d
;

437 
	}
}

440 
LUALIB_API
 
lua_I¡egî
 
	$luaL_›töãgî
 (
lua_Sèã
 *
L
, 
¨g
,

441 
lua_I¡egî
 
def
) {

442  
	`luaL_›t
(
L
, 
luaL_checköãgî
, 
¨g
, 
def
);

443 
	}
}

455 
	sUBox
 {

456 *
	mbox
;

457 
size_t
 
	mbsize
;

458 } 
	tUBox
;

461 *
	$ªsizebox
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 
√wsize
) {

462 *
ud
;

463 
lua_AŒoc
 
Ælocf
 = 
	`lua_gëÆlocf
(
L
, &
ud
);

464 
UBox
 *
box
 = (UBox *)
	`lua_tou£rd©a
(
L
, 
idx
);

465 *
ãmp
 = 
	`Ælocf
(
ud
, 
box
->box, box->
bsize
, 
√wsize
);

466 i‡(
ãmp
 =
NULL
 && 
√wsize
 > 0) {

467 
	`ªsizebox
(
L
, 
idx
, 0);

468 
	`luaL_îr‹
(
L
, "notÉnough memory for bufferállocation");

470 
box
->box = 
ãmp
;

471 
box
->
bsize
 = 
√wsize
;

472  
ãmp
;

473 
	}
}

476 
	$boxgc
 (
lua_Sèã
 *
L
) {

477 
	`ªsizebox
(
L
, 1, 0);

479 
	}
}

482 *
	$√wbox
 (
lua_Sèã
 *
L
, 
size_t
 
√wsize
) {

483 
UBox
 *
box
 = (UBox *)
	`lua_√wu£rd©a
(
L
, (UBox));

484 
box
->box = 
NULL
;

485 
box
->
bsize
 = 0;

486 i‡(
	`luaL_√wmë©abÀ
(
L
, "LUABOX")) {

487 
	`lua_pushcfun˘i⁄
(
L
, 
boxgc
);

488 
	`lua_£tfõld
(
L
, -2, "__gc");

490 
	`lua_£tmë©abÀ
(
L
, -2);

491  
	`ªsizebox
(
L
, -1, 
√wsize
);

492 
	}
}

499 
	#buff⁄°ack
(
B
Ë((B)->
b
 !(B)->
öôb
)

	)

505 
LUALIB_API
 *
	$luaL_¥ïbuffsize
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

506 
lua_Sèã
 *
L
 = 
B
->L;

507 i‡(
B
->
size
 - B->
n
 < 
sz
) {

508 *
√wbuff
;

509 
size_t
 
√wsize
 = 
B
->
size
 * 2;

510 i‡(
√wsize
 - 
B
->
n
 < 
sz
)

511 
√wsize
 = 
B
->
n
 + 
sz
;

512 i‡(
√wsize
 < 
B
->
n
 ||Çewsizê- B->¿< 
sz
)

513 
	`luaL_îr‹
(
L
, "bufferÅooÜarge");

515 i‡(
	`buff⁄°ack
(
B
))

516 
√wbuff
 = (*)
	`ªsizebox
(
L
, -1, 
√wsize
);

518 
√wbuff
 = (*)
	`√wbox
(
L
, 
√wsize
);

519 
	`mem˝y
(
√wbuff
, 
B
->
b
, B->
n
 * ());

521 
B
->
b
 = 
√wbuff
;

522 
B
->
size
 = 
√wsize
;

524  &
B
->
b
[B->
n
];

525 
	}
}

528 
LUALIB_API
 
	$luaL_addl°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
) {

529 i‡(
l
 > 0) {

530 *
b
 = 
	`luaL_¥ïbuffsize
(
B
, 
l
);

531 
	`mem˝y
(
b
, 
s
, 
l
 * ());

532 
	`luaL_addsize
(
B
, 
l
);

534 
	}
}

537 
LUALIB_API
 
	$luaL_add°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
) {

538 
	`luaL_addl°rög
(
B
, 
s
, 
	`°æí
(s));

539 
	}
}

542 
LUALIB_API
 
	$luaL_pushªsu…
 (
luaL_Buf„r
 *
B
) {

543 
lua_Sèã
 *
L
 = 
B
->L;

544 
	`lua_pushl°rög
(
L
, 
B
->
b
, B->
n
);

545 i‡(
	`buff⁄°ack
(
B
)) {

546 
	`ªsizebox
(
L
, -2, 0);

547 
	`lua_ªmove
(
L
, -2);

549 
	}
}

552 
LUALIB_API
 
	$luaL_pushªsu…size
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

553 
	`luaL_addsize
(
B
, 
sz
);

554 
	`luaL_pushªsu…
(
B
);

555 
	}
}

558 
LUALIB_API
 
	$luaL_addvÆue
 (
luaL_Buf„r
 *
B
) {

559 
lua_Sèã
 *
L
 = 
B
->L;

560 
size_t
 
l
;

561 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

562 i‡(
	`buff⁄°ack
(
B
))

563 
	`lua_ö£π
(
L
, -2);

564 
	`luaL_addl°rög
(
B
, 
s
, 
l
);

565 
	`lua_ªmove
(
L
, (
	`buff⁄°ack
(
B
)) ? -2 : -1);

566 
	}
}

569 
LUALIB_API
 
	$luaL_bufföô
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
) {

570 
B
->
L
 = L;

571 
B
->
b
 = B->
öôb
;

572 
B
->
n
 = 0;

573 
B
->
size
 = 
LUAL_BUFFERSIZE
;

574 
	}
}

577 
LUALIB_API
 *
	$luaL_bufföôsize
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

578 
	`luaL_bufföô
(
L
, 
B
);

579  
	`luaL_¥ïbuffsize
(
B
, 
sz
);

580 
	}
}

592 
	#‰ìli°
 0

	)

595 
LUALIB_API
 
	$luaL_ªf
 (
lua_Sèã
 *
L
, 
t
) {

596 
ªf
;

597 i‡(
	`lua_i¢û
(
L
, -1)) {

598 
	`lua_p›
(
L
, 1);

599  
LUA_REFNIL
;

601 
t
 = 
	`lua_absödex
(
L
,Å);

602 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

603 
ªf
 = ()
	`lua_toöãgî
(
L
, -1);

604 
	`lua_p›
(
L
, 1);

605 i‡(
ªf
 != 0) {

606 
	`lua_øwgëi
(
L
, 
t
, 
ªf
);

607 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

610 
ªf
 = ()
	`lua_øwÀn
(
L
, 
t
) + 1;

611 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

612  
ªf
;

613 
	}
}

616 
LUALIB_API
 
	$luaL_uƒef
 (
lua_Sèã
 *
L
, 
t
, 
ªf
) {

617 i‡(
ªf
 >= 0) {

618 
t
 = 
	`lua_absödex
(
L
,Å);

619 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

620 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

621 
	`lua_pushöãgî
(
L
, 
ªf
);

622 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

624 
	}
}

635 
	sLﬂdF
 {

636 
	mn
;

637 
FILE
 *
	mf
;

638 
	mbuff
[
BUFSIZ
];

639 } 
	tLﬂdF
;

642 c⁄° *
	$gëF
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

643 
LﬂdF
 *
lf
 = (LﬂdF *)
ud
;

644 ()
L
;

645 i‡(
lf
->
n
 > 0) {

646 *
size
 = 
lf
->
n
;

647 
lf
->
n
 = 0;

653 i‡(
	`„of
(
lf
->
f
)Ë 
NULL
;

654 *
size
 = 
	`‰ód
(
lf
->
buff
, 1, ÷f->buff),Üf->
f
);

656  
lf
->
buff
;

657 
	}
}

660 
	$îrfûe
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
‚ameödex
) {

661 c⁄° *
£º
 = 
	`°ªº‹
(
î∫o
);

662 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 
‚ameödex
) + 1;

663 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ %†%s: %s", 
wh©
, 
fûíame
, 
£º
);

664 
	`lua_ªmove
(
L
, 
‚ameödex
);

665  
LUA_ERRFILE
;

666 
	}
}

669 
	$skùBOM
 (
LﬂdF
 *
lf
) {

670 c⁄° *
p
 = "\xEF\xBB\xBF";

671 
c
;

672 
lf
->
n
 = 0;

674 
c
 = 
	`gëc
(
lf
->
f
);

675 i‡(
c
 =
EOF
 || c !*(c⁄° *)
p
++)  c;

676 
lf
->
buff
[lf->
n
++] = 
c
;

677 } *
p
 != '\0');

678 
lf
->
n
 = 0;

679  
	`gëc
(
lf
->
f
);

680 
	}
}

690 
	$skùcommít
 (
LﬂdF
 *
lf
, *
˝
) {

691 
c
 = *
˝
 = 
	`skùBOM
(
lf
);

692 i‡(
c
 == '#') {

694 
c
 = 
	`gëc
(
lf
->
f
);

695 } 
c
 !
EOF
 && c != '\n');

696 *
˝
 = 
	`gëc
(
lf
->
f
);

700 
	}
}

703 
LUALIB_API
 
	$luaL_lﬂdfûex
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
,

704 c⁄° *
mode
) {

705 
LﬂdF
 
lf
;

706 
°©us
, 
ªad°©us
;

707 
c
;

708 
‚ameödex
 = 
	`lua_gët›
(
L
) + 1;

709 i‡(
fûíame
 =
NULL
) {

710 
	`lua_pushlôîÆ
(
L
, "=stdin");

711 
lf
.
f
 = 
°dö
;

714 
	`lua_pushf°rög
(
L
, "@%s", 
fûíame
);

715 
lf
.
f
 = 
	`f›í
(
fûíame
, "r");

716 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "›í", 
‚ameödex
);

718 i‡(
	`skùcommít
(&
lf
, &
c
))

719 
lf
.
buff
[lf.
n
++] = '\n';

720 i‡(
c
 =
LUA_SIGNATURE
[0] && 
fûíame
) {

721 
lf
.
f
 = 
	`‰e›í
(
fûíame
, "rb",Üf.f);

722 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "ª›í", 
‚ameödex
);

723 
	`skùcommít
(&
lf
, &
c
);

725 i‡(
c
 !
EOF
)

726 
lf
.
buff
[lf.
n
++] = 
c
;

727 
°©us
 = 
	`lua_lﬂd
(
L
, 
gëF
, &
lf
, 
	`lua_to°rög
(L, -1), 
mode
);

728 
ªad°©us
 = 
	`„º‹
(
lf
.
f
);

729 i‡(
fûíame
Ë
	`f˛o£
(
lf
.
f
);

730 i‡(
ªad°©us
) {

731 
	`lua_£â›
(
L
, 
‚ameödex
);

732  
	`îrfûe
(
L
, "ªad", 
‚ameödex
);

734 
	`lua_ªmove
(
L
, 
‚ameödex
);

735  
°©us
;

736 
	}
}

739 
	sLﬂdS
 {

740 c⁄° *
	ms
;

741 
size_t
 
	msize
;

742 } 
	tLﬂdS
;

745 c⁄° *
	$gëS
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

746 
LﬂdS
 *
ls
 = (LﬂdS *)
ud
;

747 ()
L
;

748 i‡(
ls
->
size
 =0Ë 
NULL
;

749 *
size
 = 
ls
->size;

750 
ls
->
size
 = 0;

751  
ls
->
s
;

752 
	}
}

755 
LUALIB_API
 
	$luaL_lﬂdbuf„rx
 (
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
size
,

756 c⁄° *
«me
, c⁄° *
mode
) {

757 
LﬂdS
 
ls
;

758 
ls
.
s
 = 
buff
;

759 
ls
.
size
 = size;

760  
	`lua_lﬂd
(
L
, 
gëS
, &
ls
, 
«me
, 
mode
);

761 
	}
}

764 
LUALIB_API
 
	$luaL_lﬂd°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

765  
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), s);

766 
	}
}

772 
LUALIB_API
 
	$luaL_gëmëafõld
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

773 i‡(!
	`lua_gëmë©abÀ
(
L
, 
obj
))

774  
LUA_TNIL
;

776 
â
;

777 
	`lua_push°rög
(
L
, 
evít
);

778 
â
 = 
	`lua_øwgë
(
L
, -2);

779 i‡(
â
 =
LUA_TNIL
)

780 
	`lua_p›
(
L
, 2);

782 
	`lua_ªmove
(
L
, -2);

783  
â
;

785 
	}
}

788 
LUALIB_API
 
	$luaL_ˇŒmëa
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

789 
obj
 = 
	`lua_absödex
(
L
, obj);

790 i‡(
	`luaL_gëmëafõld
(
L
, 
obj
, 
evít
Ë=
LUA_TNIL
)

792 
	`lua_pushvÆue
(
L
, 
obj
);

793 
	`lua_ˇŒ
(
L
, 1, 1);

795 
	}
}

798 
LUALIB_API
 
lua_I¡egî
 
	$luaL_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

799 
lua_I¡egî
 
l
;

800 
i¢um
;

801 
	`lua_Àn
(
L
, 
idx
);

802 
l
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

803 i‡(!
i¢um
)

804 
	`luaL_îr‹
(
L
, "objectÜength isÇotán integer");

805 
	`lua_p›
(
L
, 1);

806  
l
;

807 
	}
}

810 
LUALIB_API
 c⁄° *
	$luaL_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

811 i‡(
	`luaL_ˇŒmëa
(
L
, 
idx
, "__tostring")) {

812 i‡(!
	`lua_is°rög
(
L
, -1))

813 
	`luaL_îr‹
(
L
, "'__tostring' mustÑeturná string");

816 
	`lua_ty≥
(
L
, 
idx
)) {

817 
LUA_TNUMBER
: {

818 i‡(
	`lua_isöãgî
(
L
, 
idx
))

819 
	`lua_pushf°rög
(
L
, "%I", (
LUAI_UACINT
)
	`lua_toöãgî
(L, 
idx
));

821 
	`lua_pushf°rög
(
L
, "%f", (
LUAI_UACNUMBER
)
	`lua_t⁄umbî
(L, 
idx
));

824 
LUA_TSTRING
:

825 
	`lua_pushvÆue
(
L
, 
idx
);

827 
LUA_TBOOLEAN
:

828 
	`lua_push°rög
(
L
, (
	`lua_toboﬁón
(L, 
idx
) ? "true" : "false"));

830 
LUA_TNIL
:

831 
	`lua_pushlôîÆ
(
L
, "nil");

834 
â
 = 
	`luaL_gëmëafõld
(
L
, 
idx
, "__name");

835 c⁄° *
köd
 = (
â
 =
LUA_TSTRING
Ë? 
	`lua_to°rög
(
L
, -1) :

836 
	`luaL_ty≥«me
(
L
, 
idx
);

837 
	`lua_pushf°rög
(
L
, "%s: %p", 
köd
, 
	`lua_t›oöãr
(L, 
idx
));

838 i‡(
â
 !
LUA_TNIL
)

839 
	`lua_ªmove
(
L
, -2);

844  
	`lua_tﬁ°rög
(
L
, -1, 
Àn
);

845 
	}
}

853 #i‡
deföed
(
LUA_COMPAT_MODULE
)

855 c⁄° *
	$luaL_födèbÀ
 (
lua_Sèã
 *
L
, 
idx
,

856 c⁄° *
‚ame
, 
szhöt
) {

857 c⁄° *
e
;

858 i‡(
idx
Ë
	`lua_pushvÆue
(
L
, idx);

860 
e
 = 
	`°rchr
(
‚ame
, '.');

861 i‡(
e
 =
NULL
Ëê
‚ame
 + 
	`°æí
(fname);

862 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

863 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TNIL
) {

864 
	`lua_p›
(
L
, 1);

865 
	`lua_¸óãèbÀ
(
L
, 0, (*
e
 ='.' ? 1 : 
szhöt
));

866 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

867 
	`lua_pushvÆue
(
L
, -2);

868 
	`lua_£âabÀ
(
L
, -4);

870 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

871 
	`lua_p›
(
L
, 2);

872  
‚ame
;

874 
	`lua_ªmove
(
L
, -2);

875 
‚ame
 = 
e
 + 1;

876 } *
e
 == '.');

877  
NULL
;

878 
	}
}

884 
	$libsize
 (c⁄° 
luaL_Reg
 *
l
) {

885 
size
 = 0;

886 ; 
l
 &&Ü->
«me
;Ü++Ë
size
++;

887  
size
;

888 
	}
}

897 
LUALIB_API
 
	$luaL_pushmoduÀ
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

898 
sizehöt
) {

899 
	`luaL_födèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
, 1);

900 i‡(
	`lua_gëfõld
(
L
, -1, 
mod«me
Ë!
LUA_TTABLE
) {

901 
	`lua_p›
(
L
, 1);

903 
	`lua_pushglobÆèbÀ
(
L
);

904 i‡(
	`luaL_födèbÀ
(
L
, 0, 
mod«me
, 
sizehöt
Ë!
NULL
)

905 
	`luaL_îr‹
(
L
, "«mêc⁄Êi˘ f‹ moduÀ '%s'", 
mod«me
);

906 
	`lua_pushvÆue
(
L
, -1);

907 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

909 
	`lua_ªmove
(
L
, -2);

910 
	}
}

913 
LUALIB_API
 
	$luaL_›ílib
 (
lua_Sèã
 *
L
, c⁄° *
lib«me
,

914 c⁄° 
luaL_Reg
 *
l
, 
nup
) {

915 
	`luaL_checkvîsi⁄
(
L
);

916 i‡(
lib«me
) {

917 
	`luaL_pushmoduÀ
(
L
, 
lib«me
, 
	`libsize
(
l
));

918 
	`lua_ö£π
(
L
, -(
nup
 + 1));

920 i‡(
l
)

921 
	`luaL_£tfuncs
(
L
, 
l
, 
nup
);

923 
	`lua_p›
(
L
, 
nup
);

924 
	}
}

934 
LUALIB_API
 
	$luaL_£tfuncs
 (
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
) {

935 
	`luaL_check°ack
(
L
, 
nup
, "too many upvalues");

936 ; 
l
->
«me
 !
NULL
;Ü++) {

937 
i
;

938 
i
 = 0; i < 
nup
; i++)

939 
	`lua_pushvÆue
(
L
, -
nup
);

940 
	`lua_pushc˛osuª
(
L
, 
l
->
func
, 
nup
);

941 
	`lua_£tfõld
(
L
, -(
nup
 + 2), 
l
->
«me
);

943 
	`lua_p›
(
L
, 
nup
);

944 
	}
}

951 
LUALIB_API
 
	$luaL_gësubèbÀ
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
) {

952 i‡(
	`lua_gëfõld
(
L
, 
idx
, 
‚ame
Ë=
LUA_TTABLE
)

955 
	`lua_p›
(
L
, 1);

956 
idx
 = 
	`lua_absödex
(
L
, idx);

957 
	`lua_√wèbÀ
(
L
);

958 
	`lua_pushvÆue
(
L
, -1);

959 
	`lua_£tfõld
(
L
, 
idx
, 
‚ame
);

962 
	}
}

971 
LUALIB_API
 
	$luaL_ªquúef
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

972 
lua_CFun˘i⁄
 
›íf
, 
glb
) {

973 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

974 
	`lua_gëfõld
(
L
, -1, 
mod«me
);

975 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

976 
	`lua_p›
(
L
, 1);

977 
	`lua_pushcfun˘i⁄
(
L
, 
›íf
);

978 
	`lua_push°rög
(
L
, 
mod«me
);

979 
	`lua_ˇŒ
(
L
, 1, 1);

980 
	`lua_pushvÆue
(
L
, -1);

981 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

983 
	`lua_ªmove
(
L
, -2);

984 i‡(
glb
) {

985 
	`lua_pushvÆue
(
L
, -1);

986 
	`lua_£tglobÆ
(
L
, 
mod«me
);

988 
	}
}

991 
LUALIB_API
 c⁄° *
	$luaL_gsub
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

992 c⁄° *
r
) {

993 c⁄° *
wûd
;

994 
size_t
 
l
 = 
	`°æí
(
p
);

995 
luaL_Buf„r
 
b
;

996 
	`luaL_bufföô
(
L
, &
b
);

997 (
wûd
 = 
	`°r°r
(
s
, 
p
)Ë!
NULL
) {

998 
	`luaL_addl°rög
(&
b
, 
s
, 
wûd
 - s);

999 
	`luaL_add°rög
(&
b
, 
r
);

1000 
s
 = 
wûd
 + 
l
;

1002 
	`luaL_add°rög
(&
b
, 
s
);

1003 
	`luaL_pushªsu…
(&
b
);

1004  
	`lua_to°rög
(
L
, -1);

1005 
	}
}

1008 *
	$l_Æloc
 (*
ud
, *
±r
, 
size_t
 
osize
, size_à
nsize
) {

1009 ()
ud
; ()
osize
;

1010 i‡(
nsize
 == 0) {

1011 
	`‰ì
(
±r
);

1012  
NULL
;

1015  
	`ªÆloc
(
±r
, 
nsize
);

1016 
	}
}

1019 
	$∑nic
 (
lua_Sèã
 *
L
) {

1020 
	`lua_wrôe°rögîr‹
("PANIC: unprotectedÉrror in callÅo Lua API (%s)\n",

1021 
	`lua_to°rög
(
L
, -1));

1023 
	}
}

1026 
LUALIB_API
 
lua_Sèã
 *
	$luaL_√w°©e
 () {

1027 
lua_Sèã
 *
L
 = 
	`lua_√w°©e
(
l_Æloc
, 
NULL
);

1028 i‡(
L
Ë
	`lua_©∑nic
(L, &
∑nic
);

1029  
L
;

1030 
	}
}

1033 
LUALIB_API
 
	$luaL_checkvîsi⁄_
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
) {

1034 c⁄° 
lua_Numbî
 *
v
 = 
	`lua_vîsi⁄
(
L
);

1035 i‡(
sz
 !
LUAL_NUMSIZES
)

1036 
	`luaL_îr‹
(
L
, "coreándÜibrary have incompatibleÇumericÅypes");

1037 i‡(
v
 !
	`lua_vîsi⁄
(
NULL
))

1038 
	`luaL_îr‹
(
L
, "multiple Lua VMs detected");

1039 i‡(*
v
 !
vî
)

1040 
	`luaL_îr‹
(
L
, "version mismatch:ápp.Çeeds %f, Lua coreÖrovides %f",

1041 (
LUAI_UACNUMBER
)
vî
, (LUAI_UACNUMBER)*
v
);

1042 
	}
}

	@lauxlib.h

8 #i‚de‡
œuxlib_h


9 
	#œuxlib_h


	)

12 
	~<°ddef.h
>

13 
	~<°dio.h
>

15 
	~"lua.h
"

20 
	#LUA_ERRFILE
 (
LUA_ERRERR
+1)

	)

24 
	#LUA_LOADED_TABLE
 "_LOADED"

	)

28 
	#LUA_PRELOAD_TABLE
 "_PRELOAD"

	)

31 
	sluaL_Reg
 {

32 c⁄° *
	m«me
;

33 
lua_CFun˘i⁄
 
	mfunc
;

34 } 
	tluaL_Reg
;

37 
	#LUAL_NUMSIZES
 ((
lua_I¡egî
)*16 + (
lua_Numbî
))

	)

39 
LUALIB_API
 (
luaL_checkvîsi⁄_
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
);

40 
	#luaL_checkvîsi⁄
(
L
) \

41 
	`luaL_checkvîsi⁄_
(
L
, 
LUA_VERSION_NUM
, 
LUAL_NUMSIZES
)

	)

43 
LUALIB_API
 (
luaL_gëmëafõld
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

44 
LUALIB_API
 (
luaL_ˇŒmëa
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

45 
LUALIB_API
 c⁄° *(
luaL_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

46 
LUALIB_API
 (
luaL_¨gîr‹
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
);

47 
LUALIB_API
 c⁄° *(
luaL_checkl°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

48 
size_t
 *
l
);

49 
LUALIB_API
 c⁄° *(
luaL_›é°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

50 c⁄° *
def
, 
size_t
 *
l
);

51 
LUALIB_API
 
	$lua_Numbî
 (
luaL_checknumbî
Ë(
lua_Sèã
 *
L
, 
¨g
);

52 
LUALIB_API
 
	$lua_Numbî
 (
luaL_›äumbî
Ë(
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
);

54 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_checköãgî
Ë(
lua_Sèã
 *
L
, 
¨g
);

55 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_›töãgî
Ë(
lua_Sèã
 *
L
, 
¨g
,

56 
lua_I¡egî
 
def
);

58 
LUALIB_API
 (
luaL_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
, c⁄° *
msg
);

59 
LUALIB_API
 (
luaL_checkty≥
Ë(
lua_Sèã
 *
L
, 
¨g
, 
t
);

60 
LUALIB_API
 (
luaL_check™y
Ë(
lua_Sèã
 *
L
, 
¨g
);

62 
LUALIB_API
 (
luaL_√wmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

63 
LUALIB_API
 (
luaL_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

64 
LUALIB_API
 *(
luaL_ã°ud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

65 
LUALIB_API
 *(
luaL_checkud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

67 
LUALIB_API
 (
luaL_whîe
Ë(
lua_Sèã
 *
L
, 
lvl
);

68 
LUALIB_API
 (
luaL_îr‹
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

70 
LUALIB_API
 (
luaL_check›ti⁄
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

71 c⁄° *c⁄° 
l°
[]);

73 
LUALIB_API
 (
luaL_fûîesu…
Ë(
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
);

74 
LUALIB_API
 (
luaL_exe¸esu…
Ë(
lua_Sèã
 *
L
, 
°©
);

77 
	#LUA_NOREF
 (-2)

	)

78 
	#LUA_REFNIL
 (-1)

	)

80 
LUALIB_API
 (
luaL_ªf
Ë(
lua_Sèã
 *
L
, 
t
);

81 
LUALIB_API
 (
luaL_uƒef
Ë(
lua_Sèã
 *
L
, 
t
, 
ªf
);

83 
LUALIB_API
 (
luaL_lﬂdfûex
Ë(
lua_Sèã
 *
L
, c⁄° *
fûíame
,

84 c⁄° *
mode
);

86 
	#luaL_lﬂdfûe
(
L
,
f
Ë
	`luaL_lﬂdfûex
(L,f,
NULL
)

	)

88 
LUALIB_API
 (
luaL_lﬂdbuf„rx
Ë(
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
sz
,

89 c⁄° *
«me
, c⁄° *
mode
);

90 
LUALIB_API
 (
luaL_lﬂd°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

92 
LUALIB_API
 
lua_Sèã
 *(
luaL_√w°©e
) ();

94 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

96 
LUALIB_API
 c⁄° *(
luaL_gsub
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

97 c⁄° *
r
);

99 
LUALIB_API
 (
luaL_£tfuncs
Ë(
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
);

101 
LUALIB_API
 (
luaL_gësubèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
);

103 
LUALIB_API
 (
luaL_åa˚back
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

104 c⁄° *
msg
, 
Àvñ
);

106 
LUALIB_API
 (
luaL_ªquúef
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

107 
lua_CFun˘i⁄
 
›íf
, 
glb
);

116 
	#luaL_√wlibèbÀ
(
L
,
l
) \

117 
	`lua_¸óãèbÀ
(
L
, 0, (
l
)/(÷)[0]Ë- 1)

	)

119 
	#luaL_√wlib
(
L
,
l
) \

120 (
	`luaL_checkvîsi⁄
(
L
), 
	`luaL_√wlibèbÀ
(L,
l
), 
	`luaL_£tfuncs
(L,l,0))

	)

122 
	#luaL_¨gcheck
(
L
, 
c⁄d
,
¨g
,
exåamsg
) \

123 (()((
c⁄d
Ë|| 
	`luaL_¨gîr‹
(
L
, (
¨g
), (
exåamsg
))))

	)

124 
	#luaL_check°rög
(
L
,
n
Ë(
	`luaL_checkl°rög
(L, (n), 
NULL
))

	)

125 
	#luaL_›t°rög
(
L
,
n
,
d
Ë(
	`luaL_›é°rög
(L, (n), (d), 
NULL
))

	)

127 
	#luaL_ty≥«me
(
L
,
i
Ë
	`lua_ty≥«me
(L, 
	`lua_ty≥
(L,(i)))

	)

129 
	#luaL_dofûe
(
L
, 
‚
) \

130 (
	`luaL_lﬂdfûe
(
L
, 
‚
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

132 
	#luaL_do°rög
(
L
, 
s
) \

133 (
	`luaL_lﬂd°rög
(
L
, 
s
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

135 
	#luaL_gëmë©abÀ
(
L
,
n
Ë(
	`lua_gëfõld
(L, 
LUA_REGISTRYINDEX
, (n)))

	)

137 
	#luaL_›t
(
L
,
f
,
n
,
d
Ë(
	`lua_i¢⁄e‹nû
(L,“)Ë? (dË: 
	`f
(L,“)))

	)

139 
	#luaL_lﬂdbuf„r
(
L
,
s
,
sz
,
n
Ë
	`luaL_lﬂdbuf„rx
(L,s,sz,n,
NULL
)

	)

148 
	sluaL_Buf„r
 {

149 *
b
;

150 
size_t
 
size
;

151 
size_t
 
n
;

152 
lua_Sèã
 *
L
;

153 
öôb
[
LUAL_BUFFERSIZE
];

154 } 
	tluaL_Buf„r
;

157 
	#luaL_addch¨
(
B
,
c
) \

158 (()((
B
)->
n
 < (B)->
size
 || 
	`luaL_¥ïbuffsize
((B), 1)), \

159 ((
B
)->
b
[(B)->
n
++] = (
c
)))

	)

161 
	#luaL_addsize
(
B
,
s
Ë((B)->
n
 +(s))

	)

163 
LUALIB_API
 (
luaL_bufföô
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
);

164 
LUALIB_API
 *(
luaL_¥ïbuffsize
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

165 
LUALIB_API
 (
luaL_addl°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
);

166 
LUALIB_API
 (
luaL_add°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
);

167 
LUALIB_API
 (
luaL_addvÆue
Ë(
luaL_Buf„r
 *
B
);

168 
LUALIB_API
 (
luaL_pushªsu…
Ë(
luaL_Buf„r
 *
B
);

169 
LUALIB_API
 (
luaL_pushªsu…size
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

170 
LUALIB_API
 *(
luaL_bufföôsize
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

172 
	#luaL_¥ïbuf„r
(
B
Ë
	`luaL_¥ïbuffsize
(B, 
LUAL_BUFFERSIZE
)

	)

190 
	#LUA_FILEHANDLE
 "FILE*"

	)

193 
	sluaL_Såóm
 {

194 
FILE
 *
f
;

195 
lua_CFun˘i⁄
 
˛o£f
;

196 } 
	tluaL_Såóm
;

203 #i‡
	`deföed
(
LUA_COMPAT_MODULE
)

205 
LUALIB_API
 (
luaL_pushmoduÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

206 
sizehöt
);

207 
LUALIB_API
 (
luaL_›ílib
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

208 c⁄° 
luaL_Reg
 *
l
, 
nup
);

210 
	#luaL_ªgi°î
(
L
,
n
,
l
Ë(
	`luaL_›ílib
(L,“),÷),0))

	)

222 #i‡!
	`deföed
(
lua_wrôe°rög
)

223 
	#lua_wrôe°rög
(
s
,
l
Ë
	`fwrôe
((s), (), (l), 
°dout
)

	)

227 #i‡!
	`deföed
(
lua_wrôñöe
)

228 
	#lua_wrôñöe
(Ë(
	`lua_wrôe°rög
("\n", 1), 
	`fÊush
(
°dout
))

	)

232 #i‡!
	`deföed
(
lua_wrôe°rögîr‹
)

233 
	#lua_wrôe°rögîr‹
(
s
,
p
) \

234 (
	`Ârötf
(
°dîr
, (
s
), (
p
)), 
	`fÊush
(°dîr))

	)

245 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

247 
	#luaL_checkunsig√d
(
L
,
a
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,a))

	)

248 
	#luaL_›tunsig√d
(
L
,
a
,
d
) \

249 ((
lua_Unsig√d
)
	`luaL_›töãgî
(
L
,
a
,(
lua_I¡egî
)(
d
)))

	)

251 
	#luaL_checköt
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

252 
	#luaL_›töt
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

254 
	#luaL_checkl⁄g
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

255 
	#luaL_›é⁄g
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

	@lbaselib.c

7 
	#lba£lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

24 
	$luaB_¥öt
 (
lua_Sèã
 *
L
) {

25 
n
 = 
	`lua_gët›
(
L
);

26 
i
;

27 
	`lua_gëglobÆ
(
L
, "tostring");

28 
i
=1; i<=
n
; i++) {

29 c⁄° *
s
;

30 
size_t
 
l
;

31 
	`lua_pushvÆue
(
L
, -1);

32 
	`lua_pushvÆue
(
L
, 
i
);

33 
	`lua_ˇŒ
(
L
, 1, 1);

34 
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

35 i‡(
s
 =
NULL
)

36  
	`luaL_îr‹
(
L
, "'tostring' mustÑeturná stringÅo 'print'");

37 i‡(
i
>1Ë
	`lua_wrôe°rög
("\t", 1);

38 
	`lua_wrôe°rög
(
s
, 
l
);

39 
	`lua_p›
(
L
, 1);

41 
	`lua_wrôñöe
();

43 
	}
}

46 
	#SPACECHARS
 " \f\n\r\t\v"

	)

48 c⁄° *
	$b_°r2öt
 (c⁄° *
s
, 
ba£
, 
lua_I¡egî
 *
≤
) {

49 
lua_Unsig√d
 
n
 = 0;

50 
√g
 = 0;

51 
s
 +
	`°r•n
(s, 
SPACECHARS
);

52 i‡(*
s
 ='-'Ë{ s++; 
√g
 = 1; }

53 i‡(*
s
 == '+') s++;

54 i‡(!
	`iß um
(()*
s
))

55  
NULL
;

57 
digô
 = (
	`isdigô
(()*
s
)) ? *s - '0'

58 : (
	`touµî
(()*
s
) - 'A') + 10;

59 i‡(
digô
 >
ba£
Ë 
NULL
;

60 
n
 =Ç * 
ba£
 + 
digô
;

61 
s
++;

62 } 
	`iß um
(()*
s
));

63 
s
 +
	`°r•n
(s, 
SPACECHARS
);

64 *
≤
 = (
lua_I¡egî
)((
√g
Ë? (0u - 
n
) :Ç);

65  
s
;

66 
	}
}

69 
	$luaB_t⁄umbî
 (
lua_Sèã
 *
L
) {

70 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2)) {

71 
	`luaL_check™y
(
L
, 1);

72 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

73 
	`lua_£â›
(
L
, 1);

77 
size_t
 
l
;

78 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

79 i‡(
s
 !
NULL
 && 
	`lua_°rögt⁄umbî
(
L
, sË=
l
 + 1)

85 
size_t
 
l
;

86 c⁄° *
s
;

87 
lua_I¡egî
 
n
 = 0;

88 
lua_I¡egî
 
ba£
 = 
	`luaL_checköãgî
(
L
, 2);

89 
	`luaL_checkty≥
(
L
, 1, 
LUA_TSTRING
);

90 
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

91 
	`luaL_¨gcheck
(
L
, 2 <
ba£
 && base <= 36, 2, "base out ofÑange");

92 i‡(
	`b_°r2öt
(
s
, ()
ba£
, &
n
Ë=†+ 
l
) {

93 
	`lua_pushöãgî
(
L
, 
n
);

97 
	`lua_pushnû
(
L
);

99 
	}
}

102 
	$luaB_îr‹
 (
lua_Sèã
 *
L
) {

103 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 2, 1);

104 
	`lua_£â›
(
L
, 1);

105 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && 
Àvñ
 > 0) {

106 
	`luaL_whîe
(
L
, 
Àvñ
);

107 
	`lua_pushvÆue
(
L
, 1);

108 
	`lua_c⁄ˇt
(
L
, 2);

110  
	`lua_îr‹
(
L
);

111 
	}
}

114 
	$luaB_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

115 
	`luaL_check™y
(
L
, 1);

116 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

117 
	`lua_pushnû
(
L
);

120 
	`luaL_gëmëafõld
(
L
, 1, "__metatable");

122 
	}
}

125 
	$luaB_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

126 
t
 = 
	`lua_ty≥
(
L
, 2);

127 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

128 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

130 i‡(
	`luaL_gëmëafõld
(
L
, 1, "__më©abÀ"Ë!
LUA_TNIL
)

131  
	`luaL_îr‹
(
L
, "cannot changeáÖrotected metatable");

132 
	`lua_£â›
(
L
, 2);

133 
	`lua_£tmë©abÀ
(
L
, 1);

135 
	}
}

138 
	$luaB_øwequÆ
 (
lua_Sèã
 *
L
) {

139 
	`luaL_check™y
(
L
, 1);

140 
	`luaL_check™y
(
L
, 2);

141 
	`lua_pushboﬁón
(
L
, 
	`lua_øwequÆ
(L, 1, 2));

143 
	}
}

146 
	$luaB_øwÀn
 (
lua_Sèã
 *
L
) {

147 
t
 = 
	`lua_ty≥
(
L
, 1);

148 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TTABLE
 ||Å =
LUA_TSTRING
, 1,

150 
	`lua_pushöãgî
(
L
, 
	`lua_øwÀn
(L, 1));

152 
	}
}

155 
	$luaB_øwgë
 (
lua_Sèã
 *
L
) {

156 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

157 
	`luaL_check™y
(
L
, 2);

158 
	`lua_£â›
(
L
, 2);

159 
	`lua_øwgë
(
L
, 1);

161 
	}
}

163 
	$luaB_øw£t
 (
lua_Sèã
 *
L
) {

164 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

165 
	`luaL_check™y
(
L
, 2);

166 
	`luaL_check™y
(
L
, 3);

167 
	`lua_£â›
(
L
, 3);

168 
	`lua_øw£t
(
L
, 1);

170 
	}
}

173 
	$luaB_cﬁÀ˘g¨bage
 (
lua_Sèã
 *
L
) {

174 c⁄° *c⁄° 
›ts
[] = {"stop", "restart", "collect",

176 "i§u¬ög", 
NULL
};

177 c⁄° 
›t¢um
[] = {
LUA_GCSTOP
, 
LUA_GCRESTART
, 
LUA_GCCOLLECT
,

178 
LUA_GCCOUNT
, 
LUA_GCSTEP
, 
LUA_GCSETPAUSE
, 
LUA_GCSETSTEPMUL
,

179 
LUA_GCISRUNNING
};

180 
o
 = 
›t¢um
[
	`luaL_check›ti⁄
(
L
, 1, "cﬁÀ˘", 
›ts
)];

181 
ex
 = ()
	`luaL_›töãgî
(
L
, 2, 0);

182 
ªs
 = 
	`lua_gc
(
L
, 
o
, 
ex
);

183 
o
) {

184 
LUA_GCCOUNT
: {

185 
b
 = 
	`lua_gc
(
L
, 
LUA_GCCOUNTB
, 0);

186 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
ªs
 + (÷ua_Numbî)
b
/1024));

189 
LUA_GCSTEP
: 
LUA_GCISRUNNING
: {

190 
	`lua_pushboﬁón
(
L
, 
ªs
);

194 
	`lua_pushöãgî
(
L
, 
ªs
);

198 
	}
}

201 
	$luaB_ty≥
 (
lua_Sèã
 *
L
) {

202 
t
 = 
	`lua_ty≥
(
L
, 1);

203 
	`luaL_¨gcheck
(
L
, 
t
 !
LUA_TNONE
, 1, "valueÉxpected");

204 
	`lua_push°rög
(
L
, 
	`lua_ty≥«me
(L, 
t
));

206 
	}
}

209 
	$∑úsmëa
 (
lua_Sèã
 *
L
, c⁄° *
mëhod
, 
iszîo
,

210 
lua_CFun˘i⁄
 
ôî
) {

211 
	`luaL_check™y
(
L
, 1);

212 i‡(
	`luaL_gëmëafõld
(
L
, 1, 
mëhod
Ë=
LUA_TNIL
) {

213 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

214 
	`lua_pushvÆue
(
L
, 1);

215 i‡(
iszîo
Ë
	`lua_pushöãgî
(
L
, 0);

216 
	`lua_pushnû
(
L
);

219 
	`lua_pushvÆue
(
L
, 1);

220 
	`lua_ˇŒ
(
L
, 1, 3);

223 
	}
}

226 
	$luaB_√xt
 (
lua_Sèã
 *
L
) {

227 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

228 
	`lua_£â›
(
L
, 2);

229 i‡(
	`lua_√xt
(
L
, 1))

232 
	`lua_pushnû
(
L
);

235 
	}
}

238 
	$luaB_∑ús
 (
lua_Sèã
 *
L
) {

239  
	`∑úsmëa
(
L
, "__∑ús", 0, 
luaB_√xt
);

240 
	}
}

246 
	$ùaúßux
 (
lua_Sèã
 *
L
) {

247 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2) + 1;

248 
	`lua_pushöãgî
(
L
, 
i
);

249  (
	`lua_gëi
(
L
, 1, 
i
Ë=
LUA_TNIL
) ? 1 : 2;

250 
	}
}

257 
	$luaB_ùaús
 (
lua_Sèã
 *
L
) {

258 #i‡
	`deföed
(
LUA_COMPAT_IPAIRS
)

259  
	`∑úsmëa
(
L
, "__ùaús", 1, 
ùaúßux
);

261 
	`luaL_check™y
(
L
, 1);

262 
	`lua_pushcfun˘i⁄
(
L
, 
ùaúßux
);

263 
	`lua_pushvÆue
(
L
, 1);

264 
	`lua_pushöãgî
(
L
, 0);

267 
	}
}

270 
	$lﬂd_aux
 (
lua_Sèã
 *
L
, 
°©us
, 
ívidx
) {

271 i‡(
°©us
 =
LUA_OK
) {

272 i‡(
ívidx
 != 0) {

273 
	`lua_pushvÆue
(
L
, 
ívidx
);

274 i‡(!
	`lua_£tupvÆue
(
L
, -2, 1))

275 
	`lua_p›
(
L
, 1);

280 
	`lua_pushnû
(
L
);

281 
	`lua_ö£π
(
L
, -2);

284 
	}
}

287 
	$luaB_lﬂdfûe
 (
lua_Sèã
 *
L
) {

288 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

289 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, 
NULL
);

290 
ív
 = (!
	`lua_i¢⁄e
(
L
, 3) ? 3 : 0);

291 
°©us
 = 
	`luaL_lﬂdfûex
(
L
, 
‚ame
, 
mode
);

292  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

293 
	}
}

308 
	#RESERVEDSLOT
 5

	)

317 c⁄° *
	$gíîic_ªadî
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

318 ()(
ud
);

319 
	`luaL_check°ack
(
L
, 2, "too manyÇested functions");

320 
	`lua_pushvÆue
(
L
, 1);

321 
	`lua_ˇŒ
(
L
, 0, 1);

322 i‡(
	`lua_i¢û
(
L
, -1)) {

323 
	`lua_p›
(
L
, 1);

324 *
size
 = 0;

325  
NULL
;

327 i‡(!
	`lua_is°rög
(
L
, -1))

328 
	`luaL_îr‹
(
L
, "reader function mustÑeturná string");

329 
	`lua_ª∂a˚
(
L
, 
RESERVEDSLOT
);

330  
	`lua_tﬁ°rög
(
L
, 
RESERVEDSLOT
, 
size
);

331 
	}
}

334 
	$luaB_lﬂd
 (
lua_Sèã
 *
L
) {

335 
°©us
;

336 
size_t
 
l
;

337 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

338 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 3, "bt");

339 
ív
 = (!
	`lua_i¢⁄e
(
L
, 4) ? 4 : 0);

340 i‡(
s
 !
NULL
) {

341 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, 
s
);

342 
°©us
 = 
	`luaL_lﬂdbuf„rx
(
L
, 
s
, 
l
, 
chunk«me
, 
mode
);

345 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, "=(load)");

346 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

347 
	`lua_£â›
(
L
, 
RESERVEDSLOT
);

348 
°©us
 = 
	`lua_lﬂd
(
L
, 
gíîic_ªadî
, 
NULL
, 
chunk«me
, 
mode
);

350  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

351 
	}
}

356 
	$dofûec⁄t
 (
lua_Sèã
 *
L
, 
d1
, 
lua_KC⁄ãxt
 
d2
) {

357 ()
d1
; ()
d2
;

358  
	`lua_gët›
(
L
) - 1;

359 
	}
}

362 
	$luaB_dofûe
 (
lua_Sèã
 *
L
) {

363 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

364 
	`lua_£â›
(
L
, 1);

365 i‡(
	`luaL_lﬂdfûe
(
L
, 
‚ame
Ë!
LUA_OK
)

366  
	`lua_îr‹
(
L
);

367 
	`lua_ˇŒk
(
L
, 0, 
LUA_MULTRET
, 0, 
dofûec⁄t
);

368  
	`dofûec⁄t
(
L
, 0, 0);

369 
	}
}

372 
	$luaB_as£π
 (
lua_Sèã
 *
L
) {

373 i‡(
	`lua_toboﬁón
(
L
, 1))

374  
	`lua_gët›
(
L
);

376 
	`luaL_check™y
(
L
, 1);

377 
	`lua_ªmove
(
L
, 1);

378 
	`lua_pushlôîÆ
(
L
, "assertion failed!");

379 
	`lua_£â›
(
L
, 1);

380  
	`luaB_îr‹
(
L
);

382 
	}
}

385 
	$luaB_£À˘
 (
lua_Sèã
 *
L
) {

386 
n
 = 
	`lua_gët›
(
L
);

387 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && *
	`lua_to°rög
(L, 1) == '#') {

388 
	`lua_pushöãgî
(
L
, 
n
-1);

392 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 1);

393 i‡(
i
 < 0Ëò
n
 + i;

394 i‡(
i
 > 
n
) i =Ç;

395 
	`luaL_¨gcheck
(
L
, 1 <
i
, 1, "index out ofÑange");

396  
n
 - ()
i
;

398 
	}
}

408 
	$föishpˇŒ
 (
lua_Sèã
 *
L
, 
°©us
, 
lua_KC⁄ãxt
 
exåa
) {

409 i‡(
°©us
 !
LUA_OK
 && sètu†!
LUA_YIELD
) {

410 
	`lua_pushboﬁón
(
L
, 0);

411 
	`lua_pushvÆue
(
L
, -2);

415  
	`lua_gët›
(
L
Ë- ()
exåa
;

416 
	}
}

419 
	$luaB_pˇŒ
 (
lua_Sèã
 *
L
) {

420 
°©us
;

421 
	`luaL_check™y
(
L
, 1);

422 
	`lua_pushboﬁón
(
L
, 1);

423 
	`lua_ö£π
(
L
, 1);

424 
°©us
 = 
	`lua_pˇŒk
(
L
, 
	`lua_gët›
(LË- 2, 
LUA_MULTRET
, 0, 0, 
föishpˇŒ
);

425  
	`föishpˇŒ
(
L
, 
°©us
, 0);

426 
	}
}

434 
	$luaB_xpˇŒ
 (
lua_Sèã
 *
L
) {

435 
°©us
;

436 
n
 = 
	`lua_gët›
(
L
);

437 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

438 
	`lua_pushboﬁón
(
L
, 1);

439 
	`lua_pushvÆue
(
L
, 1);

440 
	`lua_rŸ©e
(
L
, 3, 2);

441 
°©us
 = 
	`lua_pˇŒk
(
L
, 
n
 - 2, 
LUA_MULTRET
, 2, 2, 
föishpˇŒ
);

442  
	`föishpˇŒ
(
L
, 
°©us
, 2);

443 
	}
}

446 
	$luaB_to°rög
 (
lua_Sèã
 *
L
) {

447 
	`luaL_check™y
(
L
, 1);

448 
	`luaL_tﬁ°rög
(
L
, 1, 
NULL
);

450 
	}
}

453 c⁄° 
luaL_Reg
 
	gba£_funcs
[] = {

454 {"as£π", 
luaB_as£π
},

455 {"cﬁÀ˘g¨bage", 
luaB_cﬁÀ˘g¨bage
},

456 {"dofûe", 
luaB_dofûe
},

457 {"îr‹", 
luaB_îr‹
},

458 {"gëmë©abÀ", 
luaB_gëmë©abÀ
},

459 {"ùaús", 
luaB_ùaús
},

460 {"lﬂdfûe", 
luaB_lﬂdfûe
},

461 {"lﬂd", 
luaB_lﬂd
},

462 #i‡
deföed
(
LUA_COMPAT_LOADSTRING
)

463 {"lﬂd°rög", 
luaB_lﬂd
},

465 {"√xt", 
luaB_√xt
},

466 {"∑ús", 
luaB_∑ús
},

467 {"pˇŒ", 
luaB_pˇŒ
},

468 {"¥öt", 
luaB_¥öt
},

469 {"øwequÆ", 
luaB_øwequÆ
},

470 {"øwÀn", 
luaB_øwÀn
},

471 {"øwgë", 
luaB_øwgë
},

472 {"øw£t", 
luaB_øw£t
},

473 {"£À˘", 
luaB_£À˘
},

474 {"£tmë©abÀ", 
luaB_£tmë©abÀ
},

475 {"t⁄umbî", 
luaB_t⁄umbî
},

476 {"to°rög", 
luaB_to°rög
},

477 {"ty≥", 
luaB_ty≥
},

478 {"xpˇŒ", 
luaB_xpˇŒ
},

480 {"_G", 
NULL
},

481 {"_VERSION", 
NULL
},

482 {
NULL
, NULL}

486 
LUAMOD_API
 
	$lua›í_ba£
 (
lua_Sèã
 *
L
) {

488 
	`lua_pushglobÆèbÀ
(
L
);

489 
	`luaL_£tfuncs
(
L
, 
ba£_funcs
, 0);

491 
	`lua_pushvÆue
(
L
, -1);

492 
	`lua_£tfõld
(
L
, -2, "_G");

494 
	`lua_pushlôîÆ
(
L
, 
LUA_VERSION
);

495 
	`lua_£tfõld
(
L
, -2, "_VERSION");

497 
	}
}

	@lbitlib.c

7 
	#lbôlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~"lua.h
"

15 
	~"œuxlib.h
"

16 
	~"luÆib.h
"

19 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

22 
	#pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

23 
	#checkunsig√d
(
L
,
i
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,i))

	)

27 #i‡!
deföed
(
LUA_NBITS
)

28 
	#LUA_NBITS
 32

	)

37 
	#ALLONES
 (~(((~(
lua_Unsig√d
)0Ë<< (
LUA_NBITS
 - 1)Ë<< 1))

	)

41 
	#åim
(
x
Ë((xË& 
ALLONES
)

	)

45 
	#mask
(
n
Ë(~((
ALLONES
 << 1Ë<< (“Ë- 1)))

	)

49 
lua_Unsig√d
 
	$™daux
 (
lua_Sèã
 *
L
) {

50 
i
, 
n
 = 
	`lua_gët›
(
L
);

51 
lua_Unsig√d
 
r
 = ~(lua_Unsigned)0;

52 
i
 = 1; i <
n
; i++)

53 
r
 &
	`checkunsig√d
(
L
, 
i
);

54  
	`åim
(
r
);

55 
	}
}

58 
	$b_™d
 (
lua_Sèã
 *
L
) {

59 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

60 
	`pushunsig√d
(
L
, 
r
);

62 
	}
}

65 
	$b_ã°
 (
lua_Sèã
 *
L
) {

66 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

67 
	`lua_pushboﬁón
(
L
, 
r
 != 0);

69 
	}
}

72 
	$b_‹
 (
lua_Sèã
 *
L
) {

73 
i
, 
n
 = 
	`lua_gët›
(
L
);

74 
lua_Unsig√d
 
r
 = 0;

75 
i
 = 1; i <
n
; i++)

76 
r
 |
	`checkunsig√d
(
L
, 
i
);

77 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

79 
	}
}

82 
	$b_x‹
 (
lua_Sèã
 *
L
) {

83 
i
, 
n
 = 
	`lua_gët›
(
L
);

84 
lua_Unsig√d
 
r
 = 0;

85 
i
 = 1; i <
n
; i++)

86 
r
 ^
	`checkunsig√d
(
L
, 
i
);

87 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

89 
	}
}

92 
	$b_nŸ
 (
lua_Sèã
 *
L
) {

93 
lua_Unsig√d
 
r
 = ~
	`checkunsig√d
(
L
, 1);

94 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

96 
	}
}

99 
	$b_shi·
 (
lua_Sèã
 *
L
, 
lua_Unsig√d
 
r
, 
lua_I¡egî
 
i
) {

100 i‡(
i
 < 0) {

101 
i
 = -i;

102 
r
 = 
	`åim
(r);

103 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

104 
r
 >>
i
;

107 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

108 
r
 <<
i
;

109 
r
 = 
	`åim
(r);

111 
	`pushunsig√d
(
L
, 
r
);

113 
	}
}

116 
	$b_lshi·
 (
lua_Sèã
 *
L
) {

117  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), 
	`luaL_checköãgî
(L, 2));

118 
	}
}

121 
	$b_rshi·
 (
lua_Sèã
 *
L
) {

122  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), -
	`luaL_checköãgî
(L, 2));

123 
	}
}

126 
	$b_¨shi·
 (
lua_Sèã
 *
L
) {

127 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

128 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2);

129 i‡(
i
 < 0 || !(
r
 & ((
lua_Unsig√d
)1 << (
LUA_NBITS
 - 1))))

130  
	`b_shi·
(
L
, 
r
, -
i
);

132 i‡(
i
 >
LUA_NBITS
Ë
r
 = 
ALLONES
;

134 
r
 = 
	`åim
(‘ >> 
i
Ë| ~—rim(~(
lua_Unsig√d
)0) >> i));

135 
	`pushunsig√d
(
L
, 
r
);

138 
	}
}

141 
	$b_rŸ
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
d
) {

142 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

143 
i
 = 
d
 & (
LUA_NBITS
 - 1);

144 
r
 = 
	`åim
(r);

145 i‡(
i
 != 0)

146 
r
 = (∏<< 
i
Ë| (∏>> (
LUA_NBITS
 - i));

147 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

149 
	}
}

152 
	$b_ÃŸ
 (
lua_Sèã
 *
L
) {

153  
	`b_rŸ
(
L
, 
	`luaL_checköãgî
(L, 2));

154 
	}
}

157 
	$b_ºŸ
 (
lua_Sèã
 *
L
) {

158  
	`b_rŸ
(
L
, -
	`luaL_checköãgî
(L, 2));

159 
	}
}

168 
	$fõld¨gs
 (
lua_Sèã
 *
L
, 
Árg
, *
width
) {

169 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 
Árg
);

170 
lua_I¡egî
 
w
 = 
	`luaL_›töãgî
(
L
, 
Árg
 + 1, 1);

171 
	`luaL_¨gcheck
(
L
, 0 <
f
, 
Árg
, "field cannot beÇegative");

172 
	`luaL_¨gcheck
(
L
, 0 < 
w
, 
Árg
 + 1, "width must beÖositive");

173 i‡(
f
 + 
w
 > 
LUA_NBITS
)

174 
	`luaL_îr‹
(
L
, "tryingÅoáccessÇon-existent bits");

175 *
width
 = ()
w
;

176  ()
f
;

177 
	}
}

180 
	$b_exåa˘
 (
lua_Sèã
 *
L
) {

181 
w
;

182 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

183 
f
 = 
	`fõld¨gs
(
L
, 2, &
w
);

184 
r
 = (∏>> 
f
Ë& 
	`mask
(
w
);

185 
	`pushunsig√d
(
L
, 
r
);

187 
	}
}

190 
	$b_ª∂a˚
 (
lua_Sèã
 *
L
) {

191 
w
;

192 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

193 
lua_Unsig√d
 
v
 = 
	`åim
(
	`checkunsig√d
(
L
, 2));

194 
f
 = 
	`fõld¨gs
(
L
, 3, &
w
);

195 
lua_Unsig√d
 
m
 = 
	`mask
(
w
);

196 
r
 = (∏& ~(
m
 << 
f
)Ë| ((
v
 & m) << f);

197 
	`pushunsig√d
(
L
, 
r
);

199 
	}
}

202 c⁄° 
luaL_Reg
 
	gbôlib
[] = {

203 {"¨shi·", 
b_¨shi·
},

204 {"b™d", 
b_™d
},

205 {"bnŸ", 
b_nŸ
},

206 {"b‹", 
b_‹
},

207 {"bx‹", 
b_x‹
},

208 {"bã°", 
b_ã°
},

209 {"exåa˘", 
b_exåa˘
},

210 {"ÃŸ©e", 
b_ÃŸ
},

211 {"lshi·", 
b_lshi·
},

212 {"ª∂a˚", 
b_ª∂a˚
},

213 {"ºŸ©e", 
b_ºŸ
},

214 {"rshi·", 
b_rshi·
},

215 {
NULL
, NULL}

220 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

221 
	`luaL_√wlib
(
L
, 
bôlib
);

223 
	}
}

229 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

230  
	`luaL_îr‹
(
L
, "library 'bit32' has been deprecated");

231 
	}
}

	@lcode.c

7 
	#lcode_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<m©h.h
>

14 
	~<°dlib.h
>

16 
	~"lua.h
"

18 
	~"lcode.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"Õ¨£r.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"lvm.h
"

33 
	#MAXREGS
 255

	)

36 
	#hasjumps
(
e
Ë(”)->
t
 !”)->
f
)

	)

43 
	$t⁄umîÆ
(c⁄° 
expdesc
 *
e
, 
TVÆue
 *
v
) {

44 i‡(
	`hasjumps
(
e
))

46 
e
->
k
) {

47 
VKINT
:

48 i‡(
v
Ë
	`£tivÆue
(v, 
e
->
u
.
ivÆ
);

50 
VKFLT
:

51 i‡(
v
Ë
	`£tÊtvÆue
(v, 
e
->
u
.
nvÆ
);

55 
	}
}

64 
	$luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
) {

65 
In°ru˘i⁄
 *
¥evious
;

66 
l
 = 
‰om
 + 
n
 - 1;

67 i‡(
fs
->
pc
 > fs->
œ°èrgë
) {

68 
¥evious
 = &
fs
->
f
->
code
[fs->
pc
-1];

69 i‡(
	`GET_OPCODE
(*
¥evious
Ë=
OP_LOADNIL
) {

70 
p‰om
 = 
	`GETARG_A
(*
¥evious
);

71 
∂
 = 
p‰om
 + 
	`GETARG_B
(*
¥evious
);

72 i‡((
p‰om
 <
‰om
 && from <
∂
 + 1) ||

73 (
‰om
 <
p‰om
 &&Ö‰om <
l
 + 1)) {

74 i‡(
p‰om
 < 
‰om
) from =Öfrom;

75 i‡(
∂
 > 
l
)Ü =Öl;

76 
	`SETARG_A
(*
¥evious
, 
‰om
);

77 
	`SETARG_B
(*
¥evious
, 
l
 - 
‰om
);

82 
	`luaK_codeABC
(
fs
, 
OP_LOADNIL
, 
‰om
, 
n
 - 1, 0);

83 
	}
}

90 
	$gëjump
 (
FuncSèã
 *
fs
, 
pc
) {

91 
off£t
 = 
	`GETARG_sBx
(
fs
->
f
->
code
[
pc
]);

92 i‡(
off£t
 =
NO_JUMP
)

93  
NO_JUMP
;

95  (
pc
+1)+
off£t
;

96 
	}
}

103 
	$fixjump
 (
FuncSèã
 *
fs
, 
pc
, 
de°
) {

104 
In°ru˘i⁄
 *
jmp
 = &
fs
->
f
->
code
[
pc
];

105 
off£t
 = 
de°
 - (
pc
 + 1);

106 
	`lua_as£π
(
de°
 !
NO_JUMP
);

107 i‡(
	`abs
(
off£t
Ë> 
MAXARG_sBx
)

108 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "control structureÅooÜong");

109 
	`SETARG_sBx
(*
jmp
, 
off£t
);

110 
	}
}

116 
	$luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
) {

117 i‡(
l2
 =
NO_JUMP
) ;

118 i‡(*
l1
 =
NO_JUMP
)

119 *
l1
 = 
l2
;

121 
li°
 = *
l1
;

122 
√xt
;

123 (
√xt
 = 
	`gëjump
(
fs
, 
li°
)Ë!
NO_JUMP
)

124 
li°
 = 
√xt
;

125 
	`fixjump
(
fs
, 
li°
, 
l2
);

127 
	}
}

136 
	$luaK_jump
 (
FuncSèã
 *
fs
) {

137 
jpc
 = 
fs
->jpc;

138 
j
;

139 
fs
->
jpc
 = 
NO_JUMP
;

140 
j
 = 
	`luaK_codeAsBx
(
fs
, 
OP_JMP
, 0, 
NO_JUMP
);

141 
	`luaK_c⁄ˇt
(
fs
, &
j
, 
jpc
);

142  
j
;

143 
	}
}

149 
	$luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
) {

150 
	`luaK_codeABC
(
fs
, 
OP_RETURN
, 
fú°
, 
ƒë
+1, 0);

151 
	}
}

158 
	$c⁄djump
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
A
, 
B
, 
C
) {

159 
	`luaK_codeABC
(
fs
, 
›
, 
A
, 
B
, 
C
);

160  
	`luaK_jump
(
fs
);

161 
	}
}

168 
	$luaK_gëœbñ
 (
FuncSèã
 *
fs
) {

169 
fs
->
œ°èrgë
 = fs->
pc
;

170  
fs
->
pc
;

171 
	}
}

179 
In°ru˘i⁄
 *
	$gëjumpc⁄åﬁ
 (
FuncSèã
 *
fs
, 
pc
) {

180 
In°ru˘i⁄
 *
pi
 = &
fs
->
f
->
code
[
pc
];

181 i‡(
pc
 >1 && 
	`ã°TMode
(
	`GET_OPCODE
(*(
pi
-1))))

182  
pi
-1;

184  
pi
;

185 
	}
}

195 
	$∑tchã°ªg
 (
FuncSèã
 *
fs
, 
node
, 
ªg
) {

196 
In°ru˘i⁄
 *
i
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
node
);

197 i‡(
	`GET_OPCODE
(*
i
Ë!
OP_TESTSET
)

199 i‡(
ªg
 !
NO_REG
 &&Ñeg !
	`GETARG_B
(*
i
))

200 
	`SETARG_A
(*
i
, 
ªg
);

204 *
i
 = 
	`CREATE_ABC
(
OP_TEST
, 
	`GETARG_B
(*i), 0, 
	`GETARG_C
(*i));

207 
	}
}

213 
	$ªmovevÆues
 (
FuncSèã
 *
fs
, 
li°
) {

214 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist))

215 
	`∑tchã°ªg
(
fs
, 
li°
, 
NO_REG
);

216 
	}
}

224 
	$∑tchli°aux
 (
FuncSèã
 *
fs
, 
li°
, 
vèrgë
, 
ªg
,

225 
dèrgë
) {

226 
li°
 !
NO_JUMP
) {

227 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

228 i‡(
	`∑tchã°ªg
(
fs
, 
li°
, 
ªg
))

229 
	`fixjump
(
fs
, 
li°
, 
vèrgë
);

231 
	`fixjump
(
fs
, 
li°
, 
dèrgë
);

232 
li°
 = 
√xt
;

234 
	}
}

242 
	$disch¨gejpc
 (
FuncSèã
 *
fs
) {

243 
	`∑tchli°aux
(
fs
, fs->
jpc
, fs->
pc
, 
NO_REG
, fs->pc);

244 
fs
->
jpc
 = 
NO_JUMP
;

245 
	}
}

252 
	$luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
) {

253 
	`luaK_gëœbñ
(
fs
);

254 
	`luaK_c⁄ˇt
(
fs
, &fs->
jpc
, 
li°
);

255 
	}
}

263 
	$luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
) {

264 i‡(
èrgë
 =
fs
->
pc
)

265 
	`luaK_∑tchtohîe
(
fs
, 
li°
);

267 
	`lua_as£π
(
èrgë
 < 
fs
->
pc
);

268 
	`∑tchli°aux
(
fs
, 
li°
, 
èrgë
, 
NO_REG
,Åarget);

270 
	}
}

278 
	$luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
) {

279 
Àvñ
++;

280 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

281 
	`lua_as£π
(
	`GET_OPCODE
(
fs
->
f
->
code
[
li°
]Ë=
OP_JMP
 &&

282 (
	`GETARG_A
(
fs
->
f
->
code
[
li°
]) == 0 ||

283 
	`GETARG_A
(
fs
->
f
->
code
[
li°
]Ë>
Àvñ
));

284 
	`SETARG_A
(
fs
->
f
->
code
[
li°
], 
Àvñ
);

286 
	}
}

293 
	$luaK_code
 (
FuncSèã
 *
fs
, 
In°ru˘i⁄
 
i
) {

294 
PrŸo
 *
f
 = 
fs
->f;

295 
	`disch¨gejpc
(
fs
);

297 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
code
, fs->
pc
, f->
sizecode
, 
In°ru˘i⁄
,

298 
MAX_INT
, "opcodes");

299 
f
->
code
[
fs
->
pc
] = 
i
;

301 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
löeöfo
, fs->
pc
, f->
sizñöeöfo
, ,

302 
MAX_INT
, "opcodes");

303 
f
->
löeöfo
[
fs
->
pc
] = fs->
ls
->
œ°löe
;

304  
fs
->
pc
++;

305 
	}
}

312 
	$luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
b
, 
c
) {

313 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABC
);

314 
	`lua_as£π
(
	`gëBMode
(
o
Ë!
OpArgN
 || 
b
 == 0);

315 
	`lua_as£π
(
	`gëCMode
(
o
Ë!
OpArgN
 || 
c
 == 0);

316 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
b
 <
MAXARG_B
 && 
c
 <
MAXARG_C
);

317  
	`luaK_code
(
fs
, 
	`CREATE_ABC
(
o
, 
a
, 
b
, 
c
));

318 
	}
}

324 
	$luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
bc
) {

325 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABx
 || gëOpMode(oË=
iAsBx
);

326 
	`lua_as£π
(
	`gëCMode
(
o
Ë=
OpArgN
);

327 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
bc
 <
MAXARG_Bx
);

328  
	`luaK_code
(
fs
, 
	`CREATE_ABx
(
o
, 
a
, 
bc
));

329 
	}
}

335 
	$codìxåØrg
 (
FuncSèã
 *
fs
, 
a
) {

336 
	`lua_as£π
(
a
 <
MAXARG_Ax
);

337  
	`luaK_code
(
fs
, 
	`CREATE_Ax
(
OP_EXTRAARG
, 
a
));

338 
	}
}

346 
	$luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
) {

347 i‡(
k
 <
MAXARG_Bx
)

348  
	`luaK_codeABx
(
fs
, 
OP_LOADK
, 
ªg
, 
k
);

350 
p
 = 
	`luaK_codeABx
(
fs
, 
OP_LOADKX
, 
ªg
, 0);

351 
	`codìxåØrg
(
fs
, 
k
);

352  
p
;

354 
	}
}

361 
	$luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
) {

362 
√w°ack
 = 
fs
->
‰ìªg
 + 
n
;

363 i‡(
√w°ack
 > 
fs
->
f
->
max°acksize
) {

364 i‡(
√w°ack
 >
MAXREGS
)

365 
	`luaX_sy¡axîr‹
(
fs
->
ls
,

367 
fs
->
f
->
max°acksize
 = 
	`ˇ°_byã
(
√w°ack
);

369 
	}
}

375 
	$luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
) {

376 
	`luaK_check°ack
(
fs
, 
n
);

377 
fs
->
‰ìªg
 +
n
;

378 
	}
}

386 
	$‰ìªg
 (
FuncSèã
 *
fs
, 
ªg
) {

387 i‡(!
	`ISK
(
ªg
Ë&&Ñeg >
fs
->
«˘v¨
) {

388 
fs
->
‰ìªg
--;

389 
	`lua_as£π
(
ªg
 =
fs
->
‰ìªg
);

391 
	}
}

397 
	$‰ìexp
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

398 i‡(
e
->
k
 =
VNONRELOC
)

399 
	`‰ìªg
(
fs
, 
e
->
u
.
öfo
);

400 
	}
}

407 
	$‰ìexps
 (
FuncSèã
 *
fs
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

408 
r1
 = (
e1
->
k
 =
VNONRELOC
Ë?É1->
u
.
öfo
 : -1;

409 
r2
 = (
e2
->
k
 =
VNONRELOC
Ë?É2->
u
.
öfo
 : -1;

410 i‡(
r1
 > 
r2
) {

411 
	`‰ìªg
(
fs
, 
r1
);

412 
	`‰ìªg
(
fs
, 
r2
);

415 
	`‰ìªg
(
fs
, 
r2
);

416 
	`‰ìªg
(
fs
, 
r1
);

418 
	}
}

428 
	$addk
 (
FuncSèã
 *
fs
, 
TVÆue
 *
key
, TVÆuê*
v
) {

429 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

430 
PrŸo
 *
f
 = 
fs
->f;

431 
TVÆue
 *
idx
 = 
	`luaH_£t
(
L
, 
fs
->
ls
->
h
, 
key
);

432 
k
, 
ﬁdsize
;

433 i‡(
	`âisöãgî
(
idx
)) {

434 
k
 = 
	`ˇ°_öt
(
	`ivÆue
(
idx
));

436 i‡(
k
 < 
fs
->
nk
 && 
	`ây≥
(&
f
->k[k]Ë=ây≥(
v
) &&

437 
	`luaV_øwequÆobj
(&
f
->
k
[k], 
v
))

438  
k
;

441 
ﬁdsize
 = 
f
->
sizek
;

442 
k
 = 
fs
->
nk
;

445 
	`£tivÆue
(
idx
, 
k
);

446 
	`luaM_growve˘‹
(
L
, 
f
->
k
, k, f->
sizek
, 
TVÆue
, 
MAXARG_Ax
, "constants");

447 
ﬁdsize
 < 
f
->
sizek
Ë
	`£äûvÆue
(&f->
k
[oldsize++]);

448 
	`£tobj
(
L
, &
f
->
k
[k], 
v
);

449 
fs
->
nk
++;

450 
	`luaC_b¨rõr
(
L
, 
f
, 
v
);

451  
k
;

452 
	}
}

458 
	$luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
) {

459 
TVÆue
 
o
;

460 
	`£tsvÆue
(
fs
->
ls
->
L
, &
o
, 
s
);

461  
	`addk
(
fs
, &
o
, &o);

462 
	}
}

471 
	$luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
) {

472 
TVÆue
 
k
, 
o
;

473 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, ca°(
size_t
, 
n
)));

474 
	`£tivÆue
(&
o
, 
n
);

475  
	`addk
(
fs
, &
k
, &
o
);

476 
	}
}

481 
	$luaK_numbîK
 (
FuncSèã
 *
fs
, 
lua_Numbî
 
r
) {

482 
TVÆue
 
o
;

483 
	`£tÊtvÆue
(&
o
, 
r
);

484  
	`addk
(
fs
, &
o
, &o);

485 
	}
}

491 
	$boﬁK
 (
FuncSèã
 *
fs
, 
b
) {

492 
TVÆue
 
o
;

493 
	`£tbvÆue
(&
o
, 
b
);

494  
	`addk
(
fs
, &
o
, &o);

495 
	}
}

501 
	$nûK
 (
FuncSèã
 *
fs
) {

502 
TVÆue
 
k
, 
v
;

503 
	`£äûvÆue
(&
v
);

505 
	`£thvÆue
(
fs
->
ls
->
L
, &
k
, fs->ls->
h
);

506  
	`addk
(
fs
, &
k
, &
v
);

507 
	}
}

515 
	$luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
) {

516 i‡(
e
->
k
 =
VCALL
) {

517 
	`SETARG_C
(
	`gëö°ru˘i⁄
(
fs
, 
e
), 
ƒesu…s
 + 1);

519 i‡(
e
->
k
 =
VVARARG
) {

520 
In°ru˘i⁄
 *
pc
 = &
	`gëö°ru˘i⁄
(
fs
, 
e
);

521 
	`SETARG_B
(*
pc
, 
ƒesu…s
 + 1);

522 
	`SETARG_A
(*
pc
, 
fs
->
‰ìªg
);

523 
	`luaK_ª£rvîegs
(
fs
, 1);

525 
	`lua_as£π
(
ƒesu…s
 =
LUA_MULTRET
);

526 
	}
}

539 
	$luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

540 i‡(
e
->
k
 =
VCALL
) {

542 
	`lua_as£π
(
	`GETARG_C
(
	`gëö°ru˘i⁄
(
fs
, 
e
)) == 2);

543 
e
->
k
 = 
VNONRELOC
;

544 
e
->
u
.
öfo
 = 
	`GETARG_A
(
	`gëö°ru˘i⁄
(
fs
,É));

546 i‡(
e
->
k
 =
VVARARG
) {

547 
	`SETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e
), 2);

548 
e
->
k
 = 
VRELOCABLE
;

550 
	}
}

556 
	$luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

557 
e
->
k
) {

558 
VLOCAL
: {

559 
e
->
k
 = 
VNONRELOC
;

562 
VUPVAL
: {

563 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_GETUPVAL
, 0,É->u.info, 0);

564 
e
->
k
 = 
VRELOCABLE
;

567 
VINDEXED
: {

568 
OpCode
 
›
;

569 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
idx
);

570 i‡(
e
->
u
.
öd
.
vt
 =
VLOCAL
) {

571 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
t
);

572 
›
 = 
OP_GETTABLE
;

575 
	`lua_as£π
(
e
->
u
.
öd
.
vt
 =
VUPVAL
);

576 
›
 = 
OP_GETTABUP
;

578 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0,É->u.
öd
.
t
,É->u.öd.
idx
);

579 
e
->
k
 = 
VRELOCABLE
;

582 
VVARARG
: 
VCALL
: {

583 
	`luaK_£t⁄îë
(
fs
, 
e
);

588 
	}
}

595 
	$disch¨ge2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

596 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

597 
e
->
k
) {

598 
VNIL
: {

599 
	`luaK_nû
(
fs
, 
ªg
, 1);

602 
VFALSE
: 
VTRUE
: {

603 
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
ªg
, 
e
->
k
 =
VTRUE
, 0);

606 
VK
: {

607 
	`luaK_codek
(
fs
, 
ªg
, 
e
->
u
.
öfo
);

610 
VKFLT
: {

611 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_numbîK
(fs, 
e
->
u
.
nvÆ
));

614 
VKINT
: {

615 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_ötK
(fs, 
e
->
u
.
ivÆ
));

618 
VRELOCABLE
: {

619 
In°ru˘i⁄
 *
pc
 = &
	`gëö°ru˘i⁄
(
fs
, 
e
);

620 
	`SETARG_A
(*
pc
, 
ªg
);

623 
VNONRELOC
: {

624 i‡(
ªg
 !
e
->
u
.
öfo
)

625 
	`luaK_codeABC
(
fs
, 
OP_MOVE
, 
ªg
, 
e
->
u
.
öfo
, 0);

629 
	`lua_as£π
(
e
->
k
 =
VJMP
);

633 
e
->
u
.
öfo
 = 
ªg
;

634 
e
->
k
 = 
VNONRELOC
;

635 
	}
}

641 
	$disch¨ge2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

642 i‡(
e
->
k
 !
VNONRELOC
) {

643 
	`luaK_ª£rvîegs
(
fs
, 1);

644 
	`disch¨ge2ªg
(
fs
, 
e
, fs->
‰ìªg
-1);

646 
	}
}

649 
	$code_lﬂdboﬁ
 (
FuncSèã
 *
fs
, 
A
, 
b
, 
jump
) {

650 
	`luaK_gëœbñ
(
fs
);

651  
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
A
, 
b
, 
jump
);

652 
	}
}

659 
	$√ed_vÆue
 (
FuncSèã
 *
fs
, 
li°
) {

660 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

661 
In°ru˘i⁄
 
i
 = *
	`gëjumpc⁄åﬁ
(
fs
, 
li°
);

662 i‡(
	`GET_OPCODE
(
i
Ë!
OP_TESTSET
)  1;

665 
	}
}

675 
	$exp2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

676 
	`disch¨ge2ªg
(
fs
, 
e
, 
ªg
);

677 i‡(
e
->
k
 =
VJMP
)

678 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
,É->
u
.
öfo
);

679 i‡(
	`hasjumps
(
e
)) {

680 
föÆ
;

681 
p_f
 = 
NO_JUMP
;

682 
p_t
 = 
NO_JUMP
;

683 i‡(
	`√ed_vÆue
(
fs
, 
e
->
t
Ë||Çìd_vÆue(fs,É->
f
)) {

684 
fj
 = (
e
->
k
 =
VJMP
Ë? 
NO_JUMP
 : 
	`luaK_jump
(
fs
);

685 
p_f
 = 
	`code_lﬂdboﬁ
(
fs
, 
ªg
, 0, 1);

686 
p_t
 = 
	`code_lﬂdboﬁ
(
fs
, 
ªg
, 1, 0);

687 
	`luaK_∑tchtohîe
(
fs
, 
fj
);

689 
föÆ
 = 
	`luaK_gëœbñ
(
fs
);

690 
	`∑tchli°aux
(
fs
, 
e
->
f
, 
föÆ
, 
ªg
, 
p_f
);

691 
	`∑tchli°aux
(
fs
, 
e
->
t
, 
föÆ
, 
ªg
, 
p_t
);

693 
e
->
f
 =É->
t
 = 
NO_JUMP
;

694 
e
->
u
.
öfo
 = 
ªg
;

695 
e
->
k
 = 
VNONRELOC
;

696 
	}
}

703 
	$luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

704 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

705 
	`‰ìexp
(
fs
, 
e
);

706 
	`luaK_ª£rvîegs
(
fs
, 1);

707 
	`exp2ªg
(
fs
, 
e
, fs->
‰ìªg
 - 1);

708 
	}
}

715 
	$luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

716 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

717 i‡(
e
->
k
 =
VNONRELOC
) {

718 i‡(!
	`hasjumps
(
e
))

719  
e
->
u
.
öfo
;

720 i‡(
e
->
u
.
öfo
 >
fs
->
«˘v¨
) {

721 
	`exp2ªg
(
fs
, 
e
,É->
u
.
öfo
);

722  
e
->
u
.
öfo
;

725 
	`luaK_exp2√xåeg
(
fs
, 
e
);

726  
e
->
u
.
öfo
;

727 
	}
}

734 
	$luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

735 i‡(
e
->
k
 !
VUPVAL
 || 
	`hasjumps
(e))

736 
	`luaK_exp2™yªg
(
fs
, 
e
);

737 
	}
}

744 
	$luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

745 i‡(
	`hasjumps
(
e
))

746 
	`luaK_exp2™yªg
(
fs
, 
e
);

748 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

749 
	}
}

758 
	$luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

759 
	`luaK_exp2vÆ
(
fs
, 
e
);

760 
e
->
k
) {

761 
VTRUE
: 
e
->
u
.
öfo
 = 
	`boﬁK
(
fs
, 1); 
vk
;

762 
VFALSE
: 
e
->
u
.
öfo
 = 
	`boﬁK
(
fs
, 0); 
vk
;

763 
VNIL
: 
e
->
u
.
öfo
 = 
	`nûK
(
fs
); 
vk
;

764 
VKINT
: 
e
->
u
.
öfo
 = 
	`luaK_ötK
(
fs
,É->u.
ivÆ
); 
vk
;

765 
VKFLT
: 
e
->
u
.
öfo
 = 
	`luaK_numbîK
(
fs
,É->u.
nvÆ
); 
vk
;

766 
VK
:

767 
vk
:

768 
e
->
k
 = 
VK
;

769 i‡(
e
->
u
.
öfo
 <
MAXINDEXRK
)

770  
	`RKASK
(
e
->
u
.
öfo
);

775  
	`luaK_exp2™yªg
(
fs
, 
e
);

776 
	}
}

782 
	$luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
ex
) {

783 
v¨
->
k
) {

784 
VLOCAL
: {

785 
	`‰ìexp
(
fs
, 
ex
);

786 
	`exp2ªg
(
fs
, 
ex
, 
v¨
->
u
.
öfo
);

789 
VUPVAL
: {

790 
e
 = 
	`luaK_exp2™yªg
(
fs
, 
ex
);

791 
	`luaK_codeABC
(
fs
, 
OP_SETUPVAL
, 
e
, 
v¨
->
u
.
öfo
, 0);

794 
VINDEXED
: {

795 
OpCode
 
›
 = (
v¨
->
u
.
öd
.
vt
 =
VLOCAL
Ë? 
OP_SETTABLE
 : 
OP_SETTABUP
;

796 
e
 = 
	`luaK_exp2RK
(
fs
, 
ex
);

797 
	`luaK_codeABC
(
fs
, 
›
, 
v¨
->
u
.
öd
.
t
, v¨->u.öd.
idx
, 
e
);

800 : 
	`lua_as£π
(0);

802 
	`‰ìexp
(
fs
, 
ex
);

803 
	}
}

809 
	$luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
) {

810 
îeg
;

811 
	`luaK_exp2™yªg
(
fs
, 
e
);

812 
îeg
 = 
e
->
u
.
öfo
;

813 
	`‰ìexp
(
fs
, 
e
);

814 
e
->
u
.
öfo
 = 
fs
->
‰ìªg
;

815 
e
->
k
 = 
VNONRELOC
;

816 
	`luaK_ª£rvîegs
(
fs
, 2);

817 
	`luaK_codeABC
(
fs
, 
OP_SELF
, 
e
->
u
.
öfo
, 
îeg
, 
	`luaK_exp2RK
(fs, 
key
));

818 
	`‰ìexp
(
fs
, 
key
);

819 
	}
}

825 
	$√g©ec⁄dôi⁄
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

826 
In°ru˘i⁄
 *
pc
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
e
->
u
.
öfo
);

827 
	`lua_as£π
(
	`ã°TMode
(
	`GET_OPCODE
(*
pc
)Ë&& GET_OPCODE(*pcË!
OP_TESTSET
 &&

828 
	`GET_OPCODE
(*
pc
Ë!
OP_TEST
);

829 
	`SETARG_A
(*
pc
, !(
	`GETARG_A
(*pc)));

830 
	}
}

839 
	$jump⁄c⁄d
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
c⁄d
) {

840 i‡(
e
->
k
 =
VRELOCABLE
) {

841 
In°ru˘i⁄
 
õ
 = 
	`gëö°ru˘i⁄
(
fs
, 
e
);

842 i‡(
	`GET_OPCODE
(
õ
Ë=
OP_NOT
) {

843 
fs
->
pc
--;

844  
	`c⁄djump
(
fs
, 
OP_TEST
, 
	`GETARG_B
(
õ
), 0, !
c⁄d
);

848 
	`disch¨ge2™yªg
(
fs
, 
e
);

849 
	`‰ìexp
(
fs
, 
e
);

850  
	`c⁄djump
(
fs
, 
OP_TESTSET
, 
NO_REG
, 
e
->
u
.
öfo
, 
c⁄d
);

851 
	}
}

857 
	$luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

858 
pc
;

859 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

860 
e
->
k
) {

861 
VJMP
: {

862 
	`√g©ec⁄dôi⁄
(
fs
, 
e
);

863 
pc
 = 
e
->
u
.
öfo
;

866 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

867 
pc
 = 
NO_JUMP
;

871 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 0);

875 
	`luaK_c⁄ˇt
(
fs
, &
e
->
f
, 
pc
);

876 
	`luaK_∑tchtohîe
(
fs
, 
e
->
t
);

877 
e
->
t
 = 
NO_JUMP
;

878 
	}
}

884 
	$luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

885 
pc
;

886 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

887 
e
->
k
) {

888 
VJMP
: {

889 
pc
 = 
e
->
u
.
öfo
;

892 
VNIL
: 
VFALSE
: {

893 
pc
 = 
NO_JUMP
;

897 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 1);

901 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
, 
pc
);

902 
	`luaK_∑tchtohîe
(
fs
, 
e
->
f
);

903 
e
->
f
 = 
NO_JUMP
;

904 
	}
}

910 
	$codíŸ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

911 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

912 
e
->
k
) {

913 
VNIL
: 
VFALSE
: {

914 
e
->
k
 = 
VTRUE
;

917 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

918 
e
->
k
 = 
VFALSE
;

921 
VJMP
: {

922 
	`√g©ec⁄dôi⁄
(
fs
, 
e
);

925 
VRELOCABLE
:

926 
VNONRELOC
: {

927 
	`disch¨ge2™yªg
(
fs
, 
e
);

928 
	`‰ìexp
(
fs
, 
e
);

929 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_NOT
, 0,É->u.info, 0);

930 
e
->
k
 = 
VRELOCABLE
;

933 : 
	`lua_as£π
(0);

936 { 
ãmp
 = 
e
->
f
;É->‡e->
t
;É->t =Åemp; }

937 
	`ªmovevÆues
(
fs
, 
e
->
f
);

938 
	`ªmovevÆues
(
fs
, 
e
->
t
);

939 
	}
}

946 
	$luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
) {

947 
	`lua_as£π
(!
	`hasjumps
(
t
Ë&& (
	`vkisöªg
—->
k
Ë||Å->k =
VUPVAL
));

948 
t
->
u
.
öd
.àt->u.
öfo
;

949 
t
->
u
.
öd
.
idx
 = 
	`luaK_exp2RK
(
fs
, 
k
);

950 
t
->
u
.
öd
.
vt
 = (t->
k
 =
VUPVAL
Ë? VUPVAL : 
VLOCAL
;

951 
t
->
k
 = 
VINDEXED
;

952 
	}
}

960 
	$vÆid›
 (
›
, 
TVÆue
 *
v1
, TVÆuê*
v2
) {

961 
›
) {

962 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

963 
LUA_OPSHL
: 
LUA_OPSHR
: 
LUA_OPBNOT
: {

964 
lua_I¡egî
 
i
;

965  (
	`toöãgî
(
v1
, &
i
Ë&&Åoöãgî(
v2
, &i));

967 
LUA_OPDIV
: 
LUA_OPIDIV
: 
LUA_OPMOD
:

968  (
	`nvÆue
(
v2
) != 0);

971 
	}
}

978 
	$c⁄°fﬁdög
 (
FuncSèã
 *
fs
, 
›
, 
expdesc
 *
e1
,

979 c⁄° 
expdesc
 *
e2
) {

980 
TVÆue
 
v1
, 
v2
, 
ªs
;

981 i‡(!
	`t⁄umîÆ
(
e1
, &
v1
Ë|| !t⁄umîÆ(
e2
, &
v2
Ë|| !
	`vÆid›
(
›
, &v1, &v2))

983 
	`luaO_¨ôh
(
fs
->
ls
->
L
, 
›
, &
v1
, &
v2
, &
ªs
);

984 i‡(
	`âisöãgî
(&
ªs
)) {

985 
e1
->
k
 = 
VKINT
;

986 
e1
->
u
.
ivÆ
 = 
	`ivÆue
(&
ªs
);

989 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(&
ªs
);

990 i‡(
	`luai_numi¢™
(
n
) ||Ç == 0)

992 
e1
->
k
 = 
VKFLT
;

993 
e1
->
u
.
nvÆ
 = 
n
;

996 
	}
}

1004 
	$codeu√xpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
expdesc
 *
e
, 
löe
) {

1005 
r
 = 
	`luaK_exp2™yªg
(
fs
, 
e
);

1006 
	`‰ìexp
(
fs
, 
e
);

1007 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
r
, 0);

1008 
e
->
k
 = 
VRELOCABLE
;

1009 
	`luaK_fixlöe
(
fs
, 
löe
);

1010 
	}
}

1022 
	$codeböexpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
,

1023 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

1024 
rk2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

1025 
rk1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

1026 
	`‰ìexps
(
fs
, 
e1
, 
e2
);

1027 
e1
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
rk1
, 
rk2
);

1028 
e1
->
k
 = 
VRELOCABLE
;

1029 
	`luaK_fixlöe
(
fs
, 
löe
);

1030 
	}
}

1037 
	$codecomp
 (
FuncSèã
 *
fs
, 
BöO¥
 
›r
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

1038 
rk1
 = (
e1
->
k
 =
VK
Ë? 
	`RKASK
”1->
u
.
öfo
)

1039 : 
	`check_exp
(
e1
->
k
 =
VNONRELOC
,É1->
u
.
öfo
);

1040 
rk2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

1041 
	`‰ìexps
(
fs
, 
e1
, 
e2
);

1042 
›r
) {

1043 
OPR_NE
: {

1044 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
OP_EQ
, 0, 
rk1
, 
rk2
);

1047 
OPR_GT
: 
OPR_GE
: {

1049 
OpCode
 
›
 = 
	`ˇ°
(OpCode, (
›r
 - 
OPR_NE
Ë+ 
OP_EQ
);

1050 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 1, 
rk2
, 
rk1
);

1054 
OpCode
 
›
 = 
	`ˇ°
(OpCode, (
›r
 - 
OPR_EQ
Ë+ 
OP_EQ
);

1055 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 1, 
rk1
, 
rk2
);

1059 
e1
->
k
 = 
VJMP
;

1060 
	}
}

1066 
	$luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
e
, 
löe
) {

1067 c⁄° 
expdesc
 
ef
 = {
VKINT
, {0}, 
NO_JUMP
, NO_JUMP};

1068 
›
) {

1069 
OPR_MINUS
: 
OPR_BNOT
:

1070 i‡(
	`c⁄°fﬁdög
(
fs
, 
›
 + 
LUA_OPUNM
, 
e
, &
ef
))

1073 
OPR_LEN
:

1074 
	`codeu√xpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 + 
OP_UNM
), 
e
, 
löe
);

1076 
OPR_NOT
: 
	`codíŸ
(
fs
, 
e
); ;

1077 : 
	`lua_as£π
(0);

1079 
	}
}

1086 
	$luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
) {

1087 
›
) {

1088 
OPR_AND
: {

1089 
	`luaK_goi·rue
(
fs
, 
v
);

1092 
OPR_OR
: {

1093 
	`luaK_goifÁl£
(
fs
, 
v
);

1096 
OPR_CONCAT
: {

1097 
	`luaK_exp2√xåeg
(
fs
, 
v
);

1100 
OPR_ADD
: 
OPR_SUB
:

1101 
OPR_MUL
: 
OPR_DIV
: 
OPR_IDIV
:

1102 
OPR_MOD
: 
OPR_POW
:

1103 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

1104 
OPR_SHL
: 
OPR_SHR
: {

1105 i‡(!
	`t⁄umîÆ
(
v
, 
NULL
))

1106 
	`luaK_exp2RK
(
fs
, 
v
);

1111 
	`luaK_exp2RK
(
fs
, 
v
);

1115 
	}
}

1124 
	$luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
,

1125 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

1126 
›
) {

1127 
OPR_AND
: {

1128 
	`lua_as£π
(
e1
->
t
 =
NO_JUMP
);

1129 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

1130 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
f
, 
e1
->f);

1131 *
e1
 = *
e2
;

1134 
OPR_OR
: {

1135 
	`lua_as£π
(
e1
->
f
 =
NO_JUMP
);

1136 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

1137 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
t
, 
e1
->t);

1138 *
e1
 = *
e2
;

1141 
OPR_CONCAT
: {

1142 
	`luaK_exp2vÆ
(
fs
, 
e2
);

1143 i‡(
e2
->
k
 =
VRELOCABLE
 &&

1144 
	`GET_OPCODE
(
	`gëö°ru˘i⁄
(
fs
, 
e2
)Ë=
OP_CONCAT
) {

1145 
	`lua_as£π
(
e1
->
u
.
öfo
 =
	`GETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e2
))-1);

1146 
	`‰ìexp
(
fs
, 
e1
);

1147 
	`SETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e2
), 
e1
->
u
.
öfo
);

1148 
e1
->
k
 = 
VRELOCABLE
;É1->
u
.
öfo
 = 
e2
->u.info;

1151 
	`luaK_exp2√xåeg
(
fs
, 
e2
);

1152 
	`codeböexpvÆ
(
fs
, 
OP_CONCAT
, 
e1
, 
e2
, 
löe
);

1156 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

1157 
OPR_IDIV
: 
OPR_MOD
: 
OPR_POW
:

1158 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

1159 
OPR_SHL
: 
OPR_SHR
: {

1160 i‡(!
	`c⁄°fﬁdög
(
fs
, 
›
 + 
LUA_OPADD
, 
e1
, 
e2
))

1161 
	`codeböexpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 + 
OP_ADD
), 
e1
, 
e2
, 
löe
);

1164 
OPR_EQ
: 
OPR_LT
: 
OPR_LE
:

1165 
OPR_NE
: 
OPR_GT
: 
OPR_GE
: {

1166 
	`codecomp
(
fs
, 
›
, 
e1
, 
e2
);

1169 : 
	`lua_as£π
(0);

1171 
	}
}

1177 
	$luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
) {

1178 
fs
->
f
->
löeöfo
[fs->
pc
 - 1] = 
löe
;

1179 
	}
}

1189 
	$luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
) {

1190 
c
 = (
√Àms
 - 1)/
LFIELDS_PER_FLUSH
 + 1;

1191 
b
 = (
to°‹e
 =
LUA_MULTRET
) ? 0 :Åostore;

1192 
	`lua_as£π
(
to°‹e
 !0 &&Åo°‹ê<
LFIELDS_PER_FLUSH
);

1193 i‡(
c
 <
MAXARG_C
)

1194 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 
c
);

1195 i‡(
c
 <
MAXARG_Ax
) {

1196 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 0);

1197 
	`codìxåØrg
(
fs
, 
c
);

1200 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "constructorÅooÜong");

1201 
fs
->
‰ìªg
 = 
ba£
 + 1;

1202 
	}
}

	@lcode.h

7 #i‚de‡
lcode_h


8 
	#lcode_h


	)

10 
	~"Œex.h
"

11 
	~"lobje˘.h
"

12 
	~"l›codes.h
"

13 
	~"Õ¨£r.h
"

20 
	#NO_JUMP
 (-1)

	)

26 
	eBöO¥
 {

27 
	mOPR_ADD
, 
	mOPR_SUB
, 
	mOPR_MUL
, 
	mOPR_MOD
, 
	mOPR_POW
,

28 
	mOPR_DIV
,

29 
	mOPR_IDIV
,

30 
	mOPR_BAND
, 
	mOPR_BOR
, 
	mOPR_BXOR
,

31 
	mOPR_SHL
, 
	mOPR_SHR
,

32 
	mOPR_CONCAT
,

33 
	mOPR_EQ
, 
	mOPR_LT
, 
	mOPR_LE
,

34 
	mOPR_NE
, 
	mOPR_GT
, 
	mOPR_GE
,

35 
	mOPR_AND
, 
	mOPR_OR
,

36 
	mOPR_NOBINOPR


37 } 
	tBöO¥
;

40 
	eUnO¥
 { 
	mOPR_MINUS
, 
	mOPR_BNOT
, 
	mOPR_NOT
, 
	mOPR_LEN
, 
	mOPR_NOUNOPR
 } 
	tUnO¥
;

44 
	#gëö°ru˘i⁄
(
fs
,
e
Ë((fs)->
f
->
code
[”)->
u
.
öfo
])

	)

46 
	#luaK_codeAsBx
(
fs
,
o
,
A
,
sBx
Ë
	`luaK_codeABx
(fs,o,A,(sBx)+
MAXARG_sBx
)

	)

48 
	#luaK_£tmu…ªt
(
fs
,
e
Ë
	`luaK_£åëu∫s
(fs,É, 
LUA_MULTRET
)

	)

50 
	#luaK_jum±o
(
fs
,
t
Ë
	`luaK_∑tchli°
(fs, 
	`luaK_jump
(fs),Å)

	)

52 
LUAI_FUNC
 
luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
Bx
);

53 
LUAI_FUNC
 
luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
B
, 
C
);

54 
LUAI_FUNC
 
luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
);

55 
LUAI_FUNC
 
luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
);

56 
LUAI_FUNC
 
luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
);

57 
LUAI_FUNC
 
luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
);

58 
LUAI_FUNC
 
luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
);

59 
LUAI_FUNC
 
luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
);

60 
LUAI_FUNC
 
luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
);

61 
LUAI_FUNC
 
luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

62 
LUAI_FUNC
 
luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

63 
LUAI_FUNC
 
luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

64 
LUAI_FUNC
 
luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

65 
LUAI_FUNC
 
luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

66 
LUAI_FUNC
 
luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

67 
LUAI_FUNC
 
luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
);

68 
LUAI_FUNC
 
luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
);

69 
LUAI_FUNC
 
luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

70 
LUAI_FUNC
 
luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

71 
LUAI_FUNC
 
luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
e
);

72 
LUAI_FUNC
 
luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
);

73 
LUAI_FUNC
 
luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

74 
LUAI_FUNC
 
luaK_jump
 (
FuncSèã
 *
fs
);

75 
LUAI_FUNC
 
luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
);

76 
LUAI_FUNC
 
luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
);

77 
LUAI_FUNC
 
luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
);

78 
LUAI_FUNC
 
luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
);

79 
LUAI_FUNC
 
luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
);

80 
LUAI_FUNC
 
luaK_gëœbñ
 (
FuncSèã
 *
fs
);

81 
LUAI_FUNC
 
luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
v
, 
löe
);

82 
LUAI_FUNC
 
luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
);

83 
LUAI_FUNC
 
luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v1
,

84 
expdesc
 *
v2
, 
löe
);

85 
LUAI_FUNC
 
luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
);

	@lcorolib.c

7 
	#lc‹ﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

15 
	~"lua.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

21 
lua_Sèã
 *
	$gëco
 (
lua_Sèã
 *
L
) {

22 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

23 
	`luaL_¨gcheck
(
L
, 
co
, 1, "threadÉxpected");

24  
co
;

25 
	}
}

28 
	$auxªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
co
, 
«rg
) {

29 
°©us
;

30 i‡(!
	`lua_check°ack
(
co
, 
«rg
)) {

31 
	`lua_pushlôîÆ
(
L
, "too manyárgumentsÅoÑesume");

34 i‡(
	`lua_°©us
(
co
Ë=
LUA_OK
 && 
	`lua_gët›
(co) == 0) {

35 
	`lua_pushlôîÆ
(
L
, "cannotÑesume dead coroutine");

38 
	`lua_xmove
(
L
, 
co
, 
«rg
);

39 
°©us
 = 
	`lua_ªsume
(
co
, 
L
, 
«rg
);

40 i‡(
°©us
 =
LUA_OK
 || sètu†=
LUA_YIELD
) {

41 
ƒes
 = 
	`lua_gët›
(
co
);

42 i‡(!
	`lua_check°ack
(
L
, 
ƒes
 + 1)) {

43 
	`lua_p›
(
co
, 
ƒes
);

44 
	`lua_pushlôîÆ
(
L
, "too manyÑesultsÅoÑesume");

47 
	`lua_xmove
(
co
, 
L
, 
ƒes
);

48  
ƒes
;

51 
	`lua_xmove
(
co
, 
L
, 1);

54 
	}
}

57 
	$luaB_c‹esume
 (
lua_Sèã
 *
L
) {

58 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

59 
r
;

60 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L) - 1);

61 i‡(
r
 < 0) {

62 
	`lua_pushboﬁón
(
L
, 0);

63 
	`lua_ö£π
(
L
, -2);

67 
	`lua_pushboﬁón
(
L
, 1);

68 
	`lua_ö£π
(
L
, -(
r
 + 1));

69  
r
 + 1;

71 
	}
}

74 
	$luaB_auxwøp
 (
lua_Sèã
 *
L
) {

75 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 
	`lua_upvÆueödex
(1));

76 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L));

77 i‡(
r
 < 0) {

78 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
) {

79 
	`luaL_whîe
(
L
, 1);

80 
	`lua_ö£π
(
L
, -2);

81 
	`lua_c⁄ˇt
(
L
, 2);

83  
	`lua_îr‹
(
L
);

85  
r
;

86 
	}
}

89 
	$luaB_co¸óã
 (
lua_Sèã
 *
L
) {

90 
lua_Sèã
 *
NL
;

91 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

92 
NL
 = 
	`lua_√wthªad
(
L
);

93 
	`lua_pushvÆue
(
L
, 1);

94 
	`lua_xmove
(
L
, 
NL
, 1);

96 
	}
}

99 
	$luaB_cowøp
 (
lua_Sèã
 *
L
) {

100 
	`luaB_co¸óã
(
L
);

101 
	`lua_pushc˛osuª
(
L
, 
luaB_auxwøp
, 1);

103 
	}
}

106 
	$luaB_yõld
 (
lua_Sèã
 *
L
) {

107  
	`lua_yõld
(
L
, 
	`lua_gët›
(L));

108 
	}
}

111 
	$luaB_co°©us
 (
lua_Sèã
 *
L
) {

112 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

113 i‡(
L
 =
co
Ë
	`lua_pushlôîÆ
(L, "running");

115 
	`lua_°©us
(
co
)) {

116 
LUA_YIELD
:

117 
	`lua_pushlôîÆ
(
L
, "suspended");

119 
LUA_OK
: {

120 
lua_Debug
 
¨
;

121 i‡(
	`lua_gë°ack
(
co
, 0, &
¨
) > 0)

122 
	`lua_pushlôîÆ
(
L
, "normal");

123 i‡(
	`lua_gët›
(
co
) == 0)

124 
	`lua_pushlôîÆ
(
L
, "dead");

126 
	`lua_pushlôîÆ
(
L
, "suspended");

130 
	`lua_pushlôîÆ
(
L
, "dead");

135 
	}
}

138 
	$luaB_yõldabÀ
 (
lua_Sèã
 *
L
) {

139 
	`lua_pushboﬁón
(
L
, 
	`lua_isyõldabÀ
(L));

141 
	}
}

144 
	$luaB_c‹u¬ög
 (
lua_Sèã
 *
L
) {

145 
ismaö
 = 
	`lua_pushthªad
(
L
);

146 
	`lua_pushboﬁón
(
L
, 
ismaö
);

148 
	}
}

151 c⁄° 
luaL_Reg
 
	gco_funcs
[] = {

152 {"¸óã", 
luaB_co¸óã
},

153 {"ªsume", 
luaB_c‹esume
},

154 {"ru¬ög", 
luaB_c‹u¬ög
},

155 {"°©us", 
luaB_co°©us
},

156 {"wøp", 
luaB_cowøp
},

157 {"yõld", 
luaB_yõld
},

158 {"isyõldabÀ", 
luaB_yõldabÀ
},

159 {
NULL
, NULL}

164 
LUAMOD_API
 
	$lua›í_c‹outöe
 (
lua_Sèã
 *
L
) {

165 
	`luaL_√wlib
(
L
, 
co_funcs
);

167 
	}
}

	@lctype.c

7 
	#l˘y≥_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~"l˘y≥.h
"

15 #i‡!
LUA_USE_CTYPE


17 
	~<limôs.h
>

19 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2] = {

	@lctype.h

7 #i‚de‡
l˘y≥_h


8 
	#l˘y≥_h


	)

10 
	~"lua.h
"

19 #i‡!
deföed
(
LUA_USE_CTYPE
)

23 
	#LUA_USE_CTYPE
 0

	)

26 
	#LUA_USE_CTYPE
 1

	)

32 #i‡!
LUA_USE_CTYPE


34 
	~<limôs.h
>

36 
	~"Œimôs.h
"

39 
	#ALPHABIT
 0

	)

40 
	#DIGITBIT
 1

	)

41 
	#PRINTBIT
 2

	)

42 
	#SPACEBIT
 3

	)

43 
	#XDIGITBIT
 4

	)

46 
	#MASK
(
B
Ë(1 << (B))

	)

52 
	#ã°¥›
(
c
,
p
Ë(
luai_˘y≥_
[(c)+1] & (p))

	)

57 
	#li¶Æpha
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
ALPHABIT
))

	)

58 
	#li¶Ænum
(
c
Ë
	`ã°¥›
(c, (
	`MASK
(
ALPHABIT
Ë| MASK(
DIGITBIT
)))

	)

59 
	#lisdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
DIGITBIT
))

	)

60 
	#lis•a˚
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
SPACEBIT
))

	)

61 
	#li•röt
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
PRINTBIT
))

	)

62 
	#lisxdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
XDIGITBIT
))

	)

67 
	#…ﬁowî
(
c
Ë((cË| ('A' ^ 'a'))

	)

71 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2];

80 
	~<˘y≥.h
>

83 
	#li¶Æpha
(
c
Ë(
	`ißÕha
(cË|| (cË='_')

	)

84 
	#li¶Ænum
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

85 
	#lisdigô
(
c
Ë(
	`isdigô
(c))

	)

86 
	#lis•a˚
(
c
Ë(
	`is•a˚
(c))

	)

87 
	#li•röt
(
c
Ë(
	`i•röt
(c))

	)

88 
	#lisxdigô
(
c
Ë(
	`isxdigô
(c))

	)

90 
	#…ﬁowî
(
c
Ë(
	`tﬁowî
(c))

	)

	@ldblib.c

7 
	#ldblib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 c⁄° 
	gHOOKKEY
 = 0;

35 
	$check°ack
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, 
n
) {

36 i‡(
L
 !
L1
 && !
	`lua_check°ack
(L1, 
n
))

37 
	`luaL_îr‹
(
L
, "stack overflow");

38 
	}
}

41 
	$db_gëªgi°ry
 (
lua_Sèã
 *
L
) {

42 
	`lua_pushvÆue
(
L
, 
LUA_REGISTRYINDEX
);

44 
	}
}

47 
	$db_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

48 
	`luaL_check™y
(
L
, 1);

49 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

50 
	`lua_pushnû
(
L
);

53 
	}
}

56 
	$db_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

57 
t
 = 
	`lua_ty≥
(
L
, 2);

58 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

60 
	`lua_£â›
(
L
, 2);

61 
	`lua_£tmë©abÀ
(
L
, 1);

63 
	}
}

66 
	$db_gëu£rvÆue
 (
lua_Sèã
 *
L
) {

67 i‡(
	`lua_ty≥
(
L
, 1Ë!
LUA_TUSERDATA
)

68 
	`lua_pushnû
(
L
);

70 
	`lua_gëu£rvÆue
(
L
, 1);

72 
	}
}

75 
	$db_£tu£rvÆue
 (
lua_Sèã
 *
L
) {

76 
	`luaL_checkty≥
(
L
, 1, 
LUA_TUSERDATA
);

77 
	`luaL_check™y
(
L
, 2);

78 
	`lua_£â›
(
L
, 2);

79 
	`lua_£tu£rvÆue
(
L
, 1);

81 
	}
}

90 
lua_Sèã
 *
	$gëthªad
 (
lua_Sèã
 *
L
, *
¨g
) {

91 i‡(
	`lua_i°hªad
(
L
, 1)) {

92 *
¨g
 = 1;

93  
	`lua_tŸhªad
(
L
, 1);

96 *
¨g
 = 0;

97  
L
;

99 
	}
}

107 
	$£âabss
 (
lua_Sèã
 *
L
, c⁄° *
k
, c⁄° *
v
) {

108 
	`lua_push°rög
(
L
, 
v
);

109 
	`lua_£tfõld
(
L
, -2, 
k
);

110 
	}
}

112 
	$£âabsi
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

113 
	`lua_pushöãgî
(
L
, 
v
);

114 
	`lua_£tfõld
(
L
, -2, 
k
);

115 
	}
}

117 
	$£âabsb
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

118 
	`lua_pushboﬁón
(
L
, 
v
);

119 
	`lua_£tfõld
(
L
, -2, 
k
);

120 
	}
}

130 
	$åót°ack›ti⁄
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, c⁄° *
‚ame
) {

131 i‡(
L
 =
L1
)

132 
	`lua_rŸ©e
(
L
, -2, 1);

134 
	`lua_xmove
(
L1
, 
L
, 1);

135 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

136 
	}
}

145 
	$db_gëöfo
 (
lua_Sèã
 *
L
) {

146 
lua_Debug
 
¨
;

147 
¨g
;

148 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

149 c⁄° *
›ti⁄s
 = 
	`luaL_›t°rög
(
L
, 
¨g
+2, "flnStu");

150 
	`check°ack
(
L
, 
L1
, 3);

151 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

152 
›ti⁄s
 = 
	`lua_pushf°rög
(
L
, ">%s", options);

153 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

154 
	`lua_xmove
(
L
, 
L1
, 1);

157 i‡(!
	`lua_gë°ack
(
L1
, ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1), &
¨
)) {

158 
	`lua_pushnû
(
L
);

162 i‡(!
	`lua_gëöfo
(
L1
, 
›ti⁄s
, &
¨
))

163  
	`luaL_¨gîr‹
(
L
, 
¨g
+2, "invalid option");

164 
	`lua_√wèbÀ
(
L
);

165 i‡(
	`°rchr
(
›ti⁄s
, 'S')) {

166 
	`£âabss
(
L
, "sour˚", 
¨
.
sour˚
);

167 
	`£âabss
(
L
, "sh‹t_§c", 
¨
.
sh‹t_§c
);

168 
	`£âabsi
(
L
, "löedeföed", 
¨
.
löedeföed
);

169 
	`£âabsi
(
L
, "œ°löedeföed", 
¨
.
œ°löedeföed
);

170 
	`£âabss
(
L
, "wh©", 
¨
.
wh©
);

172 i‡(
	`°rchr
(
›ti⁄s
, 'l'))

173 
	`£âabsi
(
L
, "cuºíéöe", 
¨
.
cuºíéöe
);

174 i‡(
	`°rchr
(
›ti⁄s
, 'u')) {

175 
	`£âabsi
(
L
, "nups", 
¨
.
nups
);

176 
	`£âabsi
(
L
, "≈¨ams", 
¨
.
≈¨ams
);

177 
	`£âabsb
(
L
, "isv¨¨g", 
¨
.
isv¨¨g
);

179 i‡(
	`°rchr
(
›ti⁄s
, 'n')) {

180 
	`£âabss
(
L
, "«me", 
¨
.
«me
);

181 
	`£âabss
(
L
, "«mewh©", 
¨
.
«mewh©
);

183 i‡(
	`°rchr
(
›ti⁄s
, 't'))

184 
	`£âabsb
(
L
, "i°aûˇŒ", 
¨
.
i°aûˇŒ
);

185 i‡(
	`°rchr
(
›ti⁄s
, 'L'))

186 
	`åót°ack›ti⁄
(
L
, 
L1
, "activelines");

187 i‡(
	`°rchr
(
›ti⁄s
, 'f'))

188 
	`åót°ack›ti⁄
(
L
, 
L1
, "func");

190 
	}
}

193 
	$db_gëloˇl
 (
lua_Sèã
 *
L
) {

194 
¨g
;

195 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

196 
lua_Debug
 
¨
;

197 c⁄° *
«me
;

198 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

199 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

200 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

201 
	`lua_push°rög
(
L
, 
	`lua_gëloˇl
(L, 
NULL
, 
nv¨
));

205 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

206 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

207  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

208 
	`check°ack
(
L
, 
L1
, 1);

209 
«me
 = 
	`lua_gëloˇl
(
L1
, &
¨
, 
nv¨
);

210 i‡(
«me
) {

211 
	`lua_xmove
(
L1
, 
L
, 1);

212 
	`lua_push°rög
(
L
, 
«me
);

213 
	`lua_rŸ©e
(
L
, -2, 1);

217 
	`lua_pushnû
(
L
);

221 
	}
}

224 
	$db_£éoˇl
 (
lua_Sèã
 *
L
) {

225 
¨g
;

226 c⁄° *
«me
;

227 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

228 
lua_Debug
 
¨
;

229 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

230 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

231 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

232  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

233 
	`luaL_check™y
(
L
, 
¨g
+3);

234 
	`lua_£â›
(
L
, 
¨g
+3);

235 
	`check°ack
(
L
, 
L1
, 1);

236 
	`lua_xmove
(
L
, 
L1
, 1);

237 
«me
 = 
	`lua_£éoˇl
(
L1
, &
¨
, 
nv¨
);

238 i‡(
«me
 =
NULL
)

239 
	`lua_p›
(
L1
, 1);

240 
	`lua_push°rög
(
L
, 
«me
);

242 
	}
}

248 
	$auxupvÆue
 (
lua_Sèã
 *
L
, 
gë
) {

249 c⁄° *
«me
;

250 
n
 = ()
	`luaL_checköãgî
(
L
, 2);

251 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

252 
«me
 = 
gë
 ? 
	`lua_gëupvÆue
(
L
, 1, 
n
Ë: 
	`lua_£tupvÆue
(L, 1,Ç);

253 i‡(
«me
 =
NULL
)  0;

254 
	`lua_push°rög
(
L
, 
«me
);

255 
	`lua_ö£π
(
L
, -(
gë
+1));

256  
gë
 + 1;

257 
	}
}

260 
	$db_gëupvÆue
 (
lua_Sèã
 *
L
) {

261  
	`auxupvÆue
(
L
, 1);

262 
	}
}

265 
	$db_£tupvÆue
 (
lua_Sèã
 *
L
) {

266 
	`luaL_check™y
(
L
, 3);

267  
	`auxupvÆue
(
L
, 0);

268 
	}
}

275 
	$checkupvÆ
 (
lua_Sèã
 *
L
, 
¨gf
, 
¨gnup
) {

276 
nup
 = ()
	`luaL_checköãgî
(
L
, 
¨gnup
);

277 
	`luaL_checkty≥
(
L
, 
¨gf
, 
LUA_TFUNCTION
);

278 
	`luaL_¨gcheck
(
L
, (
	`lua_gëupvÆue
(L, 
¨gf
, 
nup
Ë!
NULL
), 
¨gnup
,

280  
nup
;

281 
	}
}

284 
	$db_upvÆueid
 (
lua_Sèã
 *
L
) {

285 
n
 = 
	`checkupvÆ
(
L
, 1, 2);

286 
	`lua_pushlightu£rd©a
(
L
, 
	`lua_upvÆueid
(L, 1, 
n
));

288 
	}
}

291 
	$db_upvÆuejoö
 (
lua_Sèã
 *
L
) {

292 
n1
 = 
	`checkupvÆ
(
L
, 1, 2);

293 
n2
 = 
	`checkupvÆ
(
L
, 3, 4);

294 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 1), 1, "Lua functionÉxpected");

295 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 3), 3, "Lua functionÉxpected");

296 
	`lua_upvÆuejoö
(
L
, 1, 
n1
, 3, 
n2
);

298 
	}
}

305 
	$hookf
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

306 c⁄° *c⁄° 
hook«mes
[] =

308 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

309 
	`lua_pushthªad
(
L
);

310 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TFUNCTION
) {

311 
	`lua_push°rög
(
L
, 
hook«mes
[()
¨
->
evít
]);

312 i‡(
¨
->
cuºíéöe
 >= 0)

313 
	`lua_pushöãgî
(
L
, 
¨
->
cuºíéöe
);

314 
	`lua_pushnû
(
L
);

315 
	`lua_as£π
(
	`lua_gëöfo
(
L
, "lS", 
¨
));

316 
	`lua_ˇŒ
(
L
, 2, 0);

318 
	}
}

324 
	$makemask
 (c⁄° *
smask
, 
cou¡
) {

325 
mask
 = 0;

326 i‡(
	`°rchr
(
smask
, 'c')Ë
mask
 |
LUA_MASKCALL
;

327 i‡(
	`°rchr
(
smask
, 'r')Ë
mask
 |
LUA_MASKRET
;

328 i‡(
	`°rchr
(
smask
, 'l')Ë
mask
 |
LUA_MASKLINE
;

329 i‡(
cou¡
 > 0Ë
mask
 |
LUA_MASKCOUNT
;

330  
mask
;

331 
	}
}

337 *
	$unmakemask
 (
mask
, *
smask
) {

338 
i
 = 0;

339 i‡(
mask
 & 
LUA_MASKCALL
Ë
smask
[
i
++] = 'c';

340 i‡(
mask
 & 
LUA_MASKRET
Ë
smask
[
i
++] = 'r';

341 i‡(
mask
 & 
LUA_MASKLINE
Ë
smask
[
i
++] = 'l';

342 
smask
[
i
] = '\0';

343  
smask
;

344 
	}
}

347 
	$db_£thook
 (
lua_Sèã
 *
L
) {

348 
¨g
, 
mask
, 
cou¡
;

349 
lua_Hook
 
func
;

350 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

351 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
+1)) {

352 
	`lua_£â›
(
L
, 
¨g
+1);

353 
func
 = 
NULL
; 
mask
 = 0; 
cou¡
 = 0;

356 c⁄° *
smask
 = 
	`luaL_check°rög
(
L
, 
¨g
+2);

357 
	`luaL_checkty≥
(
L
, 
¨g
+1, 
LUA_TFUNCTION
);

358 
cou¡
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 3, 0);

359 
func
 = 
hookf
; 
mask
 = 
	`makemask
(
smask
, 
cou¡
);

361 i‡(
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
Ë=
LUA_TNIL
) {

362 
	`lua_¸óãèbÀ
(
L
, 0, 2);

363 
	`lua_pushvÆue
(
L
, -1);

364 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

365 
	`lua_push°rög
(
L
, "k");

366 
	`lua_£tfõld
(
L
, -2, "__mode");

367 
	`lua_pushvÆue
(
L
, -1);

368 
	`lua_£tmë©abÀ
(
L
, -2);

370 
	`check°ack
(
L
, 
L1
, 1);

371 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

372 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

373 
	`lua_øw£t
(
L
, -3);

374 
	`lua_£thook
(
L1
, 
func
, 
mask
, 
cou¡
);

376 
	}
}

379 
	$db_gëhook
 (
lua_Sèã
 *
L
) {

380 
¨g
;

381 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

382 
buff
[5];

383 
mask
 = 
	`lua_gëhookmask
(
L1
);

384 
lua_Hook
 
hook
 = 
	`lua_gëhook
(
L1
);

385 i‡(
hook
 =
NULL
)

386 
	`lua_pushnû
(
L
);

387 i‡(
hook
 !
hookf
)

388 
	`lua_pushlôîÆ
(
L
, "external hook");

390 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

391 
	`check°ack
(
L
, 
L1
, 1);

392 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

393 
	`lua_øwgë
(
L
, -2);

394 
	`lua_ªmove
(
L
, -2);

396 
	`lua_push°rög
(
L
, 
	`unmakemask
(
mask
, 
buff
));

397 
	`lua_pushöãgî
(
L
, 
	`lua_gëhookcou¡
(
L1
));

399 
	}
}

402 
	$db_debug
 (
lua_Sèã
 *
L
) {

404 
buf„r
[250];

405 
	`lua_wrôe°rögîr‹
("%s", "lua_debug> ");

406 i‡(
	`fgës
(
buf„r
, (buf„r), 
°dö
) == 0 ||

407 
	`°rcmp
(
buf„r
, "cont\n") == 0)

409 i‡(
	`luaL_lﬂdbuf„r
(
L
, 
buf„r
, 
	`°æí
(buffer), "=(debug command)") ||

410 
	`lua_pˇŒ
(
L
, 0, 0, 0))

411 
	`lua_wrôe°rögîr‹
("%s\n", 
	`lua_to°rög
(
L
, -1));

412 
	`lua_£â›
(
L
, 0);

414 
	}
}

417 
	$db_åa˚back
 (
lua_Sèã
 *
L
) {

418 
¨g
;

419 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

420 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 
¨g
 + 1);

421 i‡(
msg
 =
NULL
 && !
	`lua_i¢⁄e‹nû
(
L
, 
¨g
 + 1))

422 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

424 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 2, (L =
L1
) ? 1 : 0);

425 
	`luaL_åa˚back
(
L
, 
L1
, 
msg
, 
Àvñ
);

428 
	}
}

431 c⁄° 
luaL_Reg
 
	gdblib
[] = {

432 {"debug", 
db_debug
},

433 {"gëu£rvÆue", 
db_gëu£rvÆue
},

434 {"gëhook", 
db_gëhook
},

435 {"gëöfo", 
db_gëöfo
},

436 {"gëloˇl", 
db_gëloˇl
},

437 {"gëªgi°ry", 
db_gëªgi°ry
},

438 {"gëmë©abÀ", 
db_gëmë©abÀ
},

439 {"gëupvÆue", 
db_gëupvÆue
},

440 {"upvÆuejoö", 
db_upvÆuejoö
},

441 {"upvÆueid", 
db_upvÆueid
},

442 {"£tu£rvÆue", 
db_£tu£rvÆue
},

443 {"£thook", 
db_£thook
},

444 {"£éoˇl", 
db_£éoˇl
},

445 {"£tmë©abÀ", 
db_£tmë©abÀ
},

446 {"£tupvÆue", 
db_£tupvÆue
},

447 {"åa˚back", 
db_åa˚back
},

448 {
NULL
, NULL}

452 
LUAMOD_API
 
	$lua›í_debug
 (
lua_Sèã
 *
L
) {

453 
	`luaL_√wlib
(
L
, 
dblib
);

455 
	}
}

	@ldebug.c

7 
	#ldebug_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"lcode.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"…m.h
"

30 
	~"lvm.h
"

34 
	#noLuaClosuª
(
f
Ë((fË=
NULL
 || (f)->
c
.
â
 =
LUA_TCCL
)

	)

38 
	#ci_func
(
ci
Ë(
	`˛LvÆue
((ci)->
func
))

	)

41 c⁄° *
fun˙ame‰omcode
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
,

42 c⁄° **
«me
);

45 
	$cuºíçc
 (
CÆlInfo
 *
ci
) {

46 
	`lua_as£π
(
	`isLua
(
ci
));

47  
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
	`ci_func
(ci)->
p
);

48 
	}
}

51 
	$cuºíéöe
 (
CÆlInfo
 *
ci
) {

52  
	`gëfun˛öe
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci));

53 
	}
}

62 
	$sw≠exåa
 (
lua_Sèã
 *
L
) {

63 i‡(
L
->
°©us
 =
LUA_YIELD
) {

64 
CÆlInfo
 *
ci
 = 
L
->ci;

65 
StkId
 
ãmp
 = 
ci
->
func
;

66 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

67 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
ãmp
);

69 
	}
}

81 
LUA_API
 
	$lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
) {

82 i‡(
func
 =
NULL
 || 
mask
 == 0) {

83 
mask
 = 0;

84 
func
 = 
NULL
;

86 i‡(
	`isLua
(
L
->
ci
))

87 
L
->
ﬁdpc
 = L->
ci
->
u
.
l
.
ßvedpc
;

88 
L
->
hook
 = 
func
;

89 
L
->
ba£hookcou¡
 = 
cou¡
;

90 
	`ª£thookcou¡
(
L
);

91 
L
->
hookmask
 = 
	`ˇ°_byã
(
mask
);

92 
	}
}

95 
LUA_API
 
lua_Hook
 
	$lua_gëhook
 (
lua_Sèã
 *
L
) {

96  
L
->
hook
;

97 
	}
}

100 
LUA_API
 
	$lua_gëhookmask
 (
lua_Sèã
 *
L
) {

101  
L
->
hookmask
;

102 
	}
}

105 
LUA_API
 
	$lua_gëhookcou¡
 (
lua_Sèã
 *
L
) {

106  
L
->
ba£hookcou¡
;

107 
	}
}

110 
LUA_API
 
	$lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
) {

111 
°©us
;

112 
CÆlInfo
 *
ci
;

113 i‡(
Àvñ
 < 0)  0;

114 
	`lua_lock
(
L
);

115 
ci
 = 
L
->ci; 
Àvñ
 > 0 && cò!&L->
ba£_ci
; còci->
¥evious
)

116 
Àvñ
--;

117 i‡(
Àvñ
 =0 && 
ci
 !&
L
->
ba£_ci
) {

118 
°©us
 = 1;

119 
¨
->
i_ci
 = 
ci
;

121 
°©us
 = 0;

122 
	`lua_u∆ock
(
L
);

123  
°©us
;

124 
	}
}

127 c⁄° *
	$upvÆ«me
 (
PrŸo
 *
p
, 
uv
) {

128 
TSåög
 *
s
 = 
	`check_exp
(
uv
 < 
p
->
sizeupvÆues
,Ö->
upvÆues
[uv].
«me
);

129 i‡(
s
 =
NULL
)  "?";

130  
	`gë°r
(
s
);

131 
	}
}

134 c⁄° *
	$födv¨¨g
 (
CÆlInfo
 *
ci
, 
n
, 
StkId
 *
pos
) {

135 
≈¨ams
 = 
	`˛LvÆue
(
ci
->
func
)->
p
->
num∑øms
;

136 i‡(
n
 >
	`ˇ°_öt
(
ci
->
u
.
l
.
ba£
 - ci->
func
Ë- 
≈¨ams
)

137  
NULL
;

139 *
pos
 = 
ci
->
func
 + 
≈¨ams
 + 
n
;

142 
	}
}

145 c⁄° *
	$födloˇl
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
n
,

146 
StkId
 *
pos
) {

147 c⁄° *
«me
 = 
NULL
;

148 
StkId
 
ba£
;

149 i‡(
	`isLua
(
ci
)) {

150 i‡(
n
 < 0)

151  
	`födv¨¨g
(
ci
, -
n
, 
pos
);

153 
ba£
 = 
ci
->
u
.
l
.base;

154 
«me
 = 
	`luaF_gëloˇ ame
(
	`ci_func
(
ci
)->
p
, 
n
, 
	`cuºíçc
(ci));

158 
ba£
 = 
ci
->
func
 + 1;

159 i‡(
«me
 =
NULL
) {

160 
StkId
 
limô
 = (
ci
 =
L
->ciË? L->
t›
 : ci->
√xt
->
func
;

161 i‡(
limô
 - 
ba£
 >
n
 &&Ç > 0)

162 
«me
 = "(*temporary)";

164  
NULL
;

166 *
pos
 = 
ba£
 + (
n
 - 1);

167  
«me
;

168 
	}
}

171 
LUA_API
 c⁄° *
	$lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

172 c⁄° *
«me
;

173 
	`lua_lock
(
L
);

174 
	`sw≠exåa
(
L
);

175 i‡(
¨
 =
NULL
) {

176 i‡(!
	`isLfun˘i⁄
(
L
->
t›
 - 1))

177 
«me
 = 
NULL
;

179 
«me
 = 
	`luaF_gëloˇ ame
(
	`˛LvÆue
(
L
->
t›
 - 1)->
p
, 
n
, 0);

182 
StkId
 
pos
 = 
NULL
;

183 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

184 i‡(
«me
) {

185 
	`£tobj2s
(
L
, L->
t›
, 
pos
);

186 
	`≠i_ö¸_t›
(
L
);

189 
	`sw≠exåa
(
L
);

190 
	`lua_u∆ock
(
L
);

191  
«me
;

192 
	}
}

195 
LUA_API
 c⁄° *
	$lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

196 
StkId
 
pos
 = 
NULL
;

197 c⁄° *
«me
;

198 
	`lua_lock
(
L
);

199 
	`sw≠exåa
(
L
);

200 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

201 i‡(
«me
) {

202 
	`£tobjs2s
(
L
, 
pos
, L->
t›
 - 1);

203 
L
->
t›
--;

205 
	`sw≠exåa
(
L
);

206 
	`lua_u∆ock
(
L
);

207  
«me
;

208 
	}
}

211 
	$funcöfo
 (
lua_Debug
 *
¨
, 
Closuª
 *
˛
) {

212 i‡(
	`noLuaClosuª
(
˛
)) {

213 
¨
->
sour˚
 = "=[C]";

214 
¨
->
löedeföed
 = -1;

215 
¨
->
œ°löedeföed
 = -1;

216 
¨
->
wh©
 = "C";

219 
PrŸo
 *
p
 = 
˛
->
l
.p;

220 
¨
->
sour˚
 = 
p
->sour˚ ? 
	`gë°r
(p->source) : "=?";

221 
¨
->
löedeföed
 = 
p
->linedefined;

222 
¨
->
œ°löedeföed
 = 
p
->lastlinedefined;

223 
¨
->
wh©
 = (¨->
löedeföed
 == 0) ? "main" : "Lua";

225 
	`luaO_chunkid
(
¨
->
sh‹t_§c
,ár->
sour˚
, 
LUA_IDSIZE
);

226 
	}
}

229 
	$cﬁÀ˘vÆidlöes
 (
lua_Sèã
 *
L
, 
Closuª
 *
f
) {

230 i‡(
	`noLuaClosuª
(
f
)) {

231 
	`£äûvÆue
(
L
->
t›
);

232 
	`≠i_ö¸_t›
(
L
);

235 
i
;

236 
TVÆue
 
v
;

237 *
löeöfo
 = 
f
->
l
.
p
->lineinfo;

238 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

239 
	`£thvÆue
(
L
, L->
t›
, 
t
);

240 
	`≠i_ö¸_t›
(
L
);

241 
	`£tbvÆue
(&
v
, 1);

242 
i
 = 0; i < 
f
->
l
.
p
->
sizñöeöfo
; i++)

243 
	`luaH_£töt
(
L
, 
t
, 
löeöfo
[
i
], &
v
);

245 
	}
}

248 c⁄° *
	$gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
) {

249 i‡(
ci
 =
NULL
)

250  
NULL
;

251 i‡(
ci
->
ˇŒ°©us
 & 
CIST_FIN
) {

252 *
«me
 = "__gc";

256 i‡(!(
ci
->
ˇŒ°©us
 & 
CIST_TAIL
Ë&& 
	`isLua
(ci->
¥evious
))

257  
	`fun˙ame‰omcode
(
L
, 
ci
->
¥evious
, 
«me
);

258  
NULL
;

259 
	}
}

262 
	$auxgëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
,

263 
Closuª
 *
f
, 
CÆlInfo
 *
ci
) {

264 
°©us
 = 1;

265 ; *
wh©
; what++) {

266 *
wh©
) {

268 
	`funcöfo
(
¨
, 
f
);

272 
¨
->
cuºíéöe
 = (
ci
 && 
	`isLua
(ci)Ë? 
	`cuºíéöe
(ci) : -1;

276 
¨
->
nups
 = (
f
 =
NULL
Ë? 0 : f->
c
.
nupvÆues
;

277 i‡(
	`noLuaClosuª
(
f
)) {

278 
¨
->
isv¨¨g
 = 1;

279 
¨
->
≈¨ams
 = 0;

282 
¨
->
isv¨¨g
 = 
f
->
l
.
p
->
is_v¨¨g
;

283 
¨
->
≈¨ams
 = 
f
->
l
.
p
->
num∑øms
;

288 
¨
->
i°aûˇŒ
 = (
ci
Ë? ci->
ˇŒ°©us
 & 
CIST_TAIL
 : 0;

292 
¨
->
«mewh©
 = 
	`gëfun˙ame
(
L
, 
ci
, &¨->
«me
);

293 i‡(
¨
->
«mewh©
 =
NULL
) {

294 
¨
->
«mewh©
 = "";

295 
¨
->
«me
 = 
NULL
;

302 : 
°©us
 = 0;

305  
°©us
;

306 
	}
}

309 
LUA_API
 
	$lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
) {

310 
°©us
;

311 
Closuª
 *
˛
;

312 
CÆlInfo
 *
ci
;

313 
StkId
 
func
;

314 
	`lua_lock
(
L
);

315 
	`sw≠exåa
(
L
);

316 i‡(*
wh©
 == '>') {

317 
ci
 = 
NULL
;

318 
func
 = 
L
->
t›
 - 1;

319 
	`≠i_check
(
L
, 
	`âisfun˘i⁄
(
func
), "functionÉxpected");

320 
wh©
++;

321 
L
->
t›
--;

324 
ci
 = 
¨
->
i_ci
;

325 
func
 = 
ci
->func;

326 
	`lua_as£π
(
	`âisfun˘i⁄
(
ci
->
func
));

328 
˛
 = 
	`âis˛osuª
(
func
Ë? 
	`˛vÆue
(funcË: 
NULL
;

329 
°©us
 = 
	`auxgëöfo
(
L
, 
wh©
, 
¨
, 
˛
, 
ci
);

330 i‡(
	`°rchr
(
wh©
, 'f')) {

331 
	`£tobjs2s
(
L
, L->
t›
, 
func
);

332 
	`≠i_ö¸_t›
(
L
);

334 
	`sw≠exåa
(
L
);

335 i‡(
	`°rchr
(
wh©
, 'L'))

336 
	`cﬁÀ˘vÆidlöes
(
L
, 
˛
);

337 
	`lua_u∆ock
(
L
);

338  
°©us
;

339 
	}
}

348 c⁄° *
gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

349 c⁄° **
«me
);

355 
	$k«me
 (
PrŸo
 *
p
, 
pc
, 
c
, c⁄° **
«me
) {

356 i‡(
	`ISK
(
c
)) {

357 
TVÆue
 *
kvÆue
 = &
p
->
k
[
	`INDEXK
(
c
)];

358 i‡(
	`âis°rög
(
kvÆue
)) {

359 *
«me
 = 
	`svÆue
(
kvÆue
);

365 c⁄° *
wh©
 = 
	`gëobj«me
(
p
, 
pc
, 
c
, 
«me
);

366 i‡(
wh©
 && *what == 'c') {

371 *
«me
 = "?";

372 
	}
}

375 
	$fûãΩc
 (
pc
, 
jm±¨gë
) {

376 i‡(
pc
 < 
jm±¨gë
)

378  
pc
;

379 
	}
}

385 
	$föd£åeg
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
) {

386 
pc
;

387 
£åeg
 = -1;

388 
jm±¨gë
 = 0;

389 
pc
 = 0;Ö¯< 
œ°pc
;Öc++) {

390 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

391 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

392 
a
 = 
	`GETARG_A
(
i
);

393 
›
) {

394 
OP_LOADNIL
: {

395 
b
 = 
	`GETARG_B
(
i
);

396 i‡(
a
 <
ªg
 &&Ñeg <®+ 
b
)

397 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

400 
OP_TFORCALL
: {

401 i‡(
ªg
 >
a
 + 2)

402 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

405 
OP_CALL
:

406 
OP_TAILCALL
: {

407 i‡(
ªg
 >
a
)

408 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

411 
OP_JMP
: {

412 
b
 = 
	`GETARG_sBx
(
i
);

413 
de°
 = 
pc
 + 1 + 
b
;

415 i‡(
pc
 < 
de°
 && de° <
œ°pc
) {

416 i‡(
de°
 > 
jm±¨gë
)

417 
jm±¨gë
 = 
de°
;

422 i‡(
	`ã°AMode
(
›
Ë&& 
ªg
 =
a
)

423 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

427  
£åeg
;

428 
	}
}

431 c⁄° *
	$gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

432 c⁄° **
«me
) {

433 
pc
;

434 *
«me
 = 
	`luaF_gëloˇ ame
(
p
, 
ªg
 + 1, 
œ°pc
);

435 i‡(*
«me
)

438 
pc
 = 
	`föd£åeg
(
p
, 
œ°pc
, 
ªg
);

439 i‡(
pc
 != -1) {

440 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

441 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

442 
›
) {

443 
OP_MOVE
: {

444 
b
 = 
	`GETARG_B
(
i
);

445 i‡(
b
 < 
	`GETARG_A
(
i
))

446  
	`gëobj«me
(
p
, 
pc
, 
b
, 
«me
);

449 
OP_GETTABUP
:

450 
OP_GETTABLE
: {

451 
k
 = 
	`GETARG_C
(
i
);

452 
t
 = 
	`GETARG_B
(
i
);

453 c⁄° *
vn
 = (
›
 =
OP_GETTABLE
)

454 ? 
	`luaF_gëloˇ ame
(
p
, 
t
 + 1, 
pc
)

455 : 
	`upvÆ«me
(
p
, 
t
);

456 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

457  (
vn
 && 
	`°rcmp
(vn, 
LUA_ENV
) == 0) ? "global" : "field";

459 
OP_GETUPVAL
: {

460 *
«me
 = 
	`upvÆ«me
(
p
, 
	`GETARG_B
(
i
));

463 
OP_LOADK
:

464 
OP_LOADKX
: {

465 
b
 = (
›
 =
OP_LOADK
Ë? 
	`GETARG_Bx
(
i
)

466 : 
	`GETARG_Ax
(
p
->
code
[
pc
 + 1]);

467 i‡(
	`âis°rög
(&
p
->
k
[
b
])) {

468 *
«me
 = 
	`svÆue
(&
p
->
k
[
b
]);

473 
OP_SELF
: {

474 
k
 = 
	`GETARG_C
(
i
);

475 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

481  
NULL
;

482 
	}
}

491 c⁄° *
	$fun˙ame‰omcode
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
,

492 c⁄° **
«me
) {

493 
TMS
 
tm
 = (TMS)0;

494 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

495 
pc
 = 
	`cuºíçc
(
ci
);

496 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

497 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
) {

498 *
«me
 = "?";

501 
	`GET_OPCODE
(
i
)) {

502 
OP_CALL
:

503 
OP_TAILCALL
:

504  
	`gëobj«me
(
p
, 
pc
, 
	`GETARG_A
(
i
), 
«me
);

505 
OP_TFORCALL
: {

506 *
«me
 = "for iterator";

510 
OP_SELF
: 
OP_GETTABUP
: 
OP_GETTABLE
:

511 
tm
 = 
TM_INDEX
;

513 
OP_SETTABUP
: 
OP_SETTABLE
:

514 
tm
 = 
TM_NEWINDEX
;

516 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_MOD
:

517 
OP_POW
: 
OP_DIV
: 
OP_IDIV
: 
OP_BAND
:

518 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
: {

519 
off£t
 = 
	`ˇ°_öt
(
	`GET_OPCODE
(
i
)Ë- ca°_öt(
OP_ADD
);

520 
tm
 = 
	`ˇ°
(
TMS
, 
off£t
 + 
	`ˇ°_öt
(
TM_ADD
));

523 
OP_UNM
: 
tm
 = 
TM_UNM
; ;

524 
OP_BNOT
: 
tm
 = 
TM_BNOT
; ;

525 
OP_LEN
: 
tm
 = 
TM_LEN
; ;

526 
OP_CONCAT
: 
tm
 = 
TM_CONCAT
; ;

527 
OP_EQ
: 
tm
 = 
TM_EQ
; ;

528 
OP_LT
: 
tm
 = 
TM_LT
; ;

529 
OP_LE
: 
tm
 = 
TM_LE
; ;

531  
NULL
;

533 *
«me
 = 
	`gë°r
(
	`G
(
L
)->
tm«me
[
tm
]);

535 
	}
}

546 
	$isö°ack
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
) {

547 
±rdiff_t
 
i
 = 
o
 - 
ci
->
u
.
l
.
ba£
;

548  (0 <
i
 && i < (
ci
->
t›
 - ci->
u
.
l
.
ba£
Ë&& ci->u.l.ba£ + i =
o
);

549 
	}
}

557 c⁄° *
	$gëupvÆ«me
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
,

558 c⁄° **
«me
) {

559 
LClosuª
 *
c
 = 
	`ci_func
(
ci
);

560 
i
;

561 
i
 = 0; i < 
c
->
nupvÆues
; i++) {

562 i‡(
c
->
upvÆs
[
i
]->
v
 =
o
) {

563 *
«me
 = 
	`upvÆ«me
(
c
->
p
, 
i
);

567  
NULL
;

568 
	}
}

571 c⁄° *
	$v¨öfo
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

572 c⁄° *
«me
 = 
NULL
;

573 
CÆlInfo
 *
ci
 = 
L
->ci;

574 c⁄° *
köd
 = 
NULL
;

575 i‡(
	`isLua
(
ci
)) {

576 
köd
 = 
	`gëupvÆ«me
(
ci
, 
o
, &
«me
);

577 i‡(!
köd
 && 
	`isö°ack
(
ci
, 
o
))

578 
köd
 = 
	`gëobj«me
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci),

579 
	`ˇ°_öt
(
o
 - 
ci
->
u
.
l
.
ba£
), &
«me
);

581  (
köd
Ë? 
	`luaO_pushf°rög
(
L
, " (%†'%s')", köd, 
«me
) : "";

582 
	}
}

585 
l_n‹ë
 
	$luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, c⁄° *
›
) {

586 c⁄° *
t
 = 
	`luaT_objty≥«me
(
L
, 
o
);

587 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†®%†vÆue%s", 
›
, 
t
, 
	`v¨öfo
(L, 
o
));

588 
	}
}

591 
l_n‹ë
 
	$luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

592 i‡(
	`âis°rög
(
p1
Ë|| 
	`cvt2°r
’1)Ëp1 = 
p2
;

593 
	`luaG_ty≥îr‹
(
L
, 
p1
, "concatenate");

594 
	}
}

597 
l_n‹ë
 
	$luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

598 c⁄° 
TVÆue
 *
p2
, c⁄° *
msg
) {

599 
lua_Numbî
 
ãmp
;

600 i‡(!
	`t⁄umbî
(
p1
, &
ãmp
))

601 
p2
 = 
p1
;

602 
	`luaG_ty≥îr‹
(
L
, 
p2
, 
msg
);

603 
	}
}

609 
l_n‹ë
 
	$luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

610 
lua_I¡egî
 
ãmp
;

611 i‡(!
	`toöãgî
(
p1
, &
ãmp
))

612 
p2
 = 
p1
;

613 
	`luaG_ru√º‹
(
L
, "numbî%†ha†nÿöãgîÑïª£¡©i⁄", 
	`v¨öfo
(L, 
p2
));

614 
	}
}

617 
l_n‹ë
 
	$luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

618 c⁄° *
t1
 = 
	`luaT_objty≥«me
(
L
, 
p1
);

619 c⁄° *
t2
 = 
	`luaT_objty≥«me
(
L
, 
p2
);

620 i‡(
	`°rcmp
(
t1
, 
t2
) == 0)

621 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ªÅwÿ%†vÆues", 
t1
);

623 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ª %†wôh %s", 
t1
, 
t2
);

624 
	}
}

628 c⁄° *
	$luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
TSåög
 *
§c
,

629 
löe
) {

630 
buff
[
LUA_IDSIZE
];

631 i‡(
§c
)

632 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
§c
), 
LUA_IDSIZE
);

634 
buff
[0] = '?'; buff[1] = '\0';

636  
	`luaO_pushf°rög
(
L
, "%s:%d: %s", 
buff
, 
löe
, 
msg
);

637 
	}
}

640 
l_n‹ë
 
	$luaG_îr‹msg
 (
lua_Sèã
 *
L
) {

641 i‡(
L
->
îrfunc
 != 0) {

642 
StkId
 
îrfunc
 = 
	`ª°‹e°ack
(
L
, L->errfunc);

643 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

644 
	`£tobjs2s
(
L
, L->
t›
 - 1, 
îrfunc
);

645 
L
->
t›
++;

646 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 1);

648 
	`luaD_throw
(
L
, 
LUA_ERRRUN
);

649 
	}
}

652 
l_n‹ë
 
	$luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

653 
CÆlInfo
 *
ci
 = 
L
->ci;

654 c⁄° *
msg
;

655 
va_li°
 
¨gp
;

656 
	`luaC_checkGC
(
L
);

657 
	`va_°¨t
(
¨gp
, 
fmt
);

658 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

659 
	`va_íd
(
¨gp
);

660 i‡(
	`isLua
(
ci
))

661 
	`luaG_addöfo
(
L
, 
msg
, 
	`ci_func
(
ci
)->
p
->
sour˚
, 
	`cuºíéöe
(ci));

662 
	`luaG_îr‹msg
(
L
);

663 
	}
}

666 
	$luaG_åa˚exec
 (
lua_Sèã
 *
L
) {

667 
CÆlInfo
 *
ci
 = 
L
->ci;

668 
lu_byã
 
mask
 = 
L
->
hookmask
;

669 
cou¡hook
 = (--
L
->
hookcou¡
 =0 && (
mask
 & 
LUA_MASKCOUNT
));

670 i‡(
cou¡hook
)

671 
	`ª£thookcou¡
(
L
);

672 i‡(!(
mask
 & 
LUA_MASKLINE
))

674 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKYIELD
) {

675 
ci
->
ˇŒ°©us
 &~
CIST_HOOKYIELD
;

678 i‡(
cou¡hook
)

679 
	`luaD_hook
(
L
, 
LUA_HOOKCOUNT
, -1);

680 i‡(
mask
 & 
LUA_MASKLINE
) {

681 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

682 
≈c
 = 
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
p
);

683 
√wlöe
 = 
	`gëfun˛öe
(
p
, 
≈c
);

684 i‡(
≈c
 == 0 ||

685 
ci
->
u
.
l
.
ßvedpc
 <
L
->
ﬁdpc
 ||

686 
√wlöe
 !
	`gëfun˛öe
(
p
, 
	`pcRñ
(
L
->
ﬁdpc
,Ö)))

687 
	`luaD_hook
(
L
, 
LUA_HOOKLINE
, 
√wlöe
);

689 
L
->
ﬁdpc
 = 
ci
->
u
.
l
.
ßvedpc
;

690 i‡(
L
->
°©us
 =
LUA_YIELD
) {

691 i‡(
cou¡hook
)

692 
L
->
hookcou¡
 = 1;

693 
ci
->
u
.
l
.
ßvedpc
--;

694 
ci
->
ˇŒ°©us
 |
CIST_HOOKYIELD
;

695 
ci
->
func
 = 
L
->
t›
 - 1;

696 
	`luaD_throw
(
L
, 
LUA_YIELD
);

698 
	}
}

	@ldebug.h

7 #i‚de‡
ldebug_h


8 
	#ldebug_h


	)

11 
	~"l°©e.h
"

14 
	#pcRñ
(
pc
, 
p
Ë(
	`ˇ°
(, (pcË- (p)->
code
Ë- 1)

	)

16 
	#gëfun˛öe
(
f
,
pc
Ë(((f)->
löeöfo
Ë? (f)->löeöfo[pc] : -1)

	)

18 
	#ª£thookcou¡
(
L
Ë(L->
hookcou¡
 = L->
ba£hookcou¡
)

	)

21 
LUAI_FUNC
 
l_n‹ë
 
luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
,

22 c⁄° *
›«me
);

23 
LUAI_FUNC
 
l_n‹ë
 
luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

24 c⁄° 
TVÆue
 *
p2
);

25 
LUAI_FUNC
 
l_n‹ë
 
luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

26 c⁄° 
TVÆue
 *
p2
,

27 c⁄° *
msg
);

28 
LUAI_FUNC
 
l_n‹ë
 
luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

29 c⁄° 
TVÆue
 *
p2
);

30 
LUAI_FUNC
 
l_n‹ë
 
luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

31 c⁄° 
TVÆue
 *
p2
);

32 
LUAI_FUNC
 
l_n‹ë
 
luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

33 
LUAI_FUNC
 c⁄° *
luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
,

34 
TSåög
 *
§c
, 
löe
);

35 
LUAI_FUNC
 
l_n‹ë
 
luaG_îr‹msg
 (
lua_Sèã
 *
L
);

36 
LUAI_FUNC
 
luaG_åa˚exec
 (
lua_Sèã
 *
L
);

	@ldo.c

7 
	#ldo_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<£tjmp.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"ldebug.h
"

21 
	~"ldo.h
"

22 
	~"lfunc.h
"

23 
	~"lgc.h
"

24 
	~"lmem.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"Õ¨£r.h
"

28 
	~"l°©e.h
"

29 
	~"l°rög.h
"

30 
	~"…abÀ.h
"

31 
	~"…m.h
"

32 
	~"lundump.h
"

33 
	~"lvm.h
"

34 
	~"lzio.h
"

38 
	#îr‹°©us
(
s
Ë((sË> 
LUA_YIELD
)

	)

53 #i‡!
deföed
(
LUAI_THROW
)

55 #i‡
deföed
(
__˝lu•lus
Ë&& !deföed(
LUA_USE_LONGJMP
)

58 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

59 
	#LUAI_TRY
(
L
,
c
,
a
) \

60 
åy
 { 
a
 } 
	`ˇtch
(...Ë{ i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

61 
	#luai_jmpbuf
 

	)

63 #ñi‡
deföed
(
LUA_USE_POSIX
)

66 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

67 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

68 
	#luai_jmpbuf
 
jmp_buf


	)

73 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

74 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

75 
	#luai_jmpbuf
 
jmp_buf


	)

84 
	slua_l⁄gjmp
 {

85 
lua_l⁄gjmp
 *
	m¥evious
;

86 
luai_jmpbuf
 
	mb
;

87 vﬁ©ûê
	m°©us
;

91 
	$£ãº‹obj
 (
lua_Sèã
 *
L
, 
îrcode
, 
StkId
 
ﬁdt›
) {

92 
îrcode
) {

93 
LUA_ERRMEM
: {

94 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`G
(L)->
memîrmsg
);

97 
LUA_ERRERR
: {

98 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`luaS_√wlôîÆ
(L, "error inÉrror handling"));

102 
	`£tobjs2s
(
L
, 
ﬁdt›
, L->
t›
 - 1);

106 
L
->
t›
 = 
ﬁdt›
 + 1;

107 
	}
}

110 
l_n‹ë
 
	$luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
) {

111 i‡(
L
->
îr‹Jmp
) {

112 
L
->
îr‹Jmp
->
°©us
 = 
îrcode
;

113 
	`LUAI_THROW
(
L
, L->
îr‹Jmp
);

116 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

117 
L
->
°©us
 = 
	`ˇ°_byã
(
îrcode
);

118 i‡(
g
->
maöthªad
->
îr‹Jmp
) {

119 
	`£tobjs2s
(
L
, 
g
->
maöthªad
->
t›
++, L->top - 1);

120 
	`luaD_throw
(
g
->
maöthªad
, 
îrcode
);

123 i‡(
g
->
∑nic
) {

124 
	`£ãº‹obj
(
L
, 
îrcode
, L->
t›
);

125 i‡(
L
->
ci
->
t›
 < L->top)

126 
L
->
ci
->
t›
 = L->top;

127 
	`lua_u∆ock
(
L
);

128 
g
->
	`∑nic
(
L
);

130 
	`ab‹t
();

133 
	}
}

136 
	$luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
) {

137 
ﬁdnCˇŒs
 = 
L
->
nCˇŒs
;

138 
lua_l⁄gjmp
 
lj
;

139 
lj
.
°©us
 = 
LUA_OK
;

140 
lj
.
¥evious
 = 
L
->
îr‹Jmp
;

141 
L
->
îr‹Jmp
 = &
lj
;

142 
	`LUAI_TRY
(
L
, &
lj
,

143 (*
f
)(
L
, 
ud
);

145 
L
->
îr‹Jmp
 = 
lj
.
¥evious
;

146 
L
->
nCˇŒs
 = 
ﬁdnCˇŒs
;

147  
lj
.
°©us
;

148 
	}
}

158 
	$c‹ª˘°ack
 (
lua_Sèã
 *
L
, 
TVÆue
 *
ﬁd°ack
) {

159 
CÆlInfo
 *
ci
;

160 
UpVÆ
 *
up
;

161 
L
->
t›
 = (L->t› - 
ﬁd°ack
Ë+ L->
°ack
;

162 
up
 = 
L
->
›íupvÆ
; u∞!
NULL
; u∞up->
u
.
›í
.
√xt
)

163 
up
->
v
 = (up->v - 
ﬁd°ack
Ë+ 
L
->
°ack
;

164 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

165 
ci
->
t›
 = (ci->t› - 
ﬁd°ack
Ë+ 
L
->
°ack
;

166 
ci
->
func
 = (ci->fun¯- 
ﬁd°ack
Ë+ 
L
->
°ack
;

167 i‡(
	`isLua
(
ci
))

168 
ci
->
u
.
l
.
ba£
 = (ci->u.l.ba£ - 
ﬁd°ack
Ë+ 
L
->
°ack
;

170 
	}
}

174 
	#ERRORSTACKSIZE
 (
LUAI_MAXSTACK
 + 200)

	)

177 
	$luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
) {

178 
TVÆue
 *
ﬁd°ack
 = 
L
->
°ack
;

179 
lim
 = 
L
->
°acksize
;

180 
	`lua_as£π
(
√wsize
 <
LUAI_MAXSTACK
 ||Çewsizê=
ERRORSTACKSIZE
);

181 
	`lua_as£π
(
L
->
°ack_œ°
 - L->
°ack
 =L->
°acksize
 - 
EXTRA_STACK
);

182 
	`luaM_ªÆlocve˘‹
(
L
, L->
°ack
, L->
°acksize
, 
√wsize
, 
TVÆue
);

183 ; 
lim
 < 
√wsize
;Üim++)

184 
	`£äûvÆue
(
L
->
°ack
 + 
lim
);

185 
L
->
°acksize
 = 
√wsize
;

186 
L
->
°ack_œ°
 = L->
°ack
 + 
√wsize
 - 
EXTRA_STACK
;

187 
	`c‹ª˘°ack
(
L
, 
ﬁd°ack
);

188 
	}
}

191 
	$luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
) {

192 
size
 = 
L
->
°acksize
;

193 i‡(
size
 > 
LUAI_MAXSTACK
)

194 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

196 
√eded
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
n
 + 
EXTRA_STACK
;

197 
√wsize
 = 2 * 
size
;

198 i‡(
√wsize
 > 
LUAI_MAXSTACK
)Çewsize = LUAI_MAXSTACK;

199 i‡(
√wsize
 < 
√eded
)Çewsize =Çeeded;

200 i‡(
√wsize
 > 
LUAI_MAXSTACK
) {

201 
	`luaD_ªÆloc°ack
(
L
, 
ERRORSTACKSIZE
);

202 
	`luaG_ru√º‹
(
L
, "stack overflow");

205 
	`luaD_ªÆloc°ack
(
L
, 
√wsize
);

207 
	}
}

210 
	$°acköu£
 (
lua_Sèã
 *
L
) {

211 
CÆlInfo
 *
ci
;

212 
StkId
 
lim
 = 
L
->
t›
;

213 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

214 i‡(
lim
 < 
ci
->
t›
)Üim = ci->top;

216 
	`lua_as£π
(
lim
 <
L
->
°ack_œ°
);

217  
	`ˇ°_öt
(
lim
 - 
L
->
°ack
) + 1;

218 
	}
}

221 
	$luaD_shrök°ack
 (
lua_Sèã
 *
L
) {

222 
öu£
 = 
	`°acköu£
(
L
);

223 
goodsize
 = 
öu£
 + (öu£ / 8Ë+ 2*
EXTRA_STACK
;

224 i‡(
goodsize
 > 
LUAI_MAXSTACK
)

225 
goodsize
 = 
LUAI_MAXSTACK
;

226 i‡(
L
->
°acksize
 > 
LUAI_MAXSTACK
)

227 
	`luaE_‰ìCI
(
L
);

229 
	`luaE_shrökCI
(
L
);

232 i‡(
öu£
 <(
LUAI_MAXSTACK
 - 
EXTRA_STACK
) &&

233 
goodsize
 < 
L
->
°acksize
)

234 
	`luaD_ªÆloc°ack
(
L
, 
goodsize
);

236 
	`c⁄dmove°ack
(
L
,{},{});

237 
	}
}

240 
	$luaD_ö˘›
 (
lua_Sèã
 *
L
) {

241 
	`luaD_check°ack
(
L
, 1);

242 
L
->
t›
++;

243 
	}
}

253 
	$luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
) {

254 
lua_Hook
 
hook
 = 
L
->hook;

255 i‡(
hook
 && 
L
->
Ælowhook
) {

256 
CÆlInfo
 *
ci
 = 
L
->ci;

257 
±rdiff_t
 
t›
 = 
	`ßve°ack
(
L
, L->top);

258 
±rdiff_t
 
ci_t›
 = 
	`ßve°ack
(
L
, 
ci
->
t›
);

259 
lua_Debug
 
¨
;

260 
¨
.
evít
 =Évent;

261 
¨
.
cuºíéöe
 = 
löe
;

262 
¨
.
i_ci
 = 
ci
;

263 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

264 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

265 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

266 
L
->
Ælowhook
 = 0;

267 
ci
->
ˇŒ°©us
 |
CIST_HOOKED
;

268 
	`lua_u∆ock
(
L
);

269 (*
hook
)(
L
, &
¨
);

270 
	`lua_lock
(
L
);

271 
	`lua_as£π
(!
L
->
Ælowhook
);

272 
L
->
Ælowhook
 = 1;

273 
ci
->
t›
 = 
	`ª°‹e°ack
(
L
, 
ci_t›
);

274 
L
->
t›
 = 
	`ª°‹e°ack
(L,Åop);

275 
ci
->
ˇŒ°©us
 &~
CIST_HOOKED
;

277 
	}
}

280 
	$ˇŒhook
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
) {

281 
hook
 = 
LUA_HOOKCALL
;

282 
ci
->
u
.
l
.
ßvedpc
++;

283 i‡(
	`isLua
(
ci
->
¥evious
) &&

284 
	`GET_OPCODE
(*(
ci
->
¥evious
->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_TAILCALL
) {

285 
ci
->
ˇŒ°©us
 |
CIST_TAIL
;

286 
hook
 = 
LUA_HOOKTAILCALL
;

288 
	`luaD_hook
(
L
, 
hook
, -1);

289 
ci
->
u
.
l
.
ßvedpc
--;

290 
	}
}

293 
StkId
 
	$adju°_v¨¨gs
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
a˘uÆ
) {

294 
i
;

295 
nfix¨gs
 = 
p
->
num∑øms
;

296 
StkId
 
ba£
, 
fixed
;

298 
fixed
 = 
L
->
t›
 - 
a˘uÆ
;

299 
ba£
 = 
L
->
t›
;

300 
i
 = 0; i < 
nfix¨gs
 && i < 
a˘uÆ
; i++) {

301 
	`£tobjs2s
(
L
, L->
t›
++, 
fixed
 + 
i
);

302 
	`£äûvÆue
(
fixed
 + 
i
);

304 ; 
i
 < 
nfix¨gs
; i++)

305 
	`£äûvÆue
(
L
->
t›
++);

306  
ba£
;

307 
	}
}

315 
	$åyfuncTM
 (
lua_Sèã
 *
L
, 
StkId
 
func
) {

316 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
func
, 
TM_CALL
);

317 
StkId
 
p
;

318 i‡(!
	`âisfun˘i⁄
(
tm
))

319 
	`luaG_ty≥îr‹
(
L
, 
func
, "call");

321 
p
 = 
L
->
t›
;Ö > 
func
;Ö--)

322 
	`£tobjs2s
(
L
, 
p
,Ö-1);

323 
L
->
t›
++;

324 
	`£tobj2s
(
L
, 
func
, 
tm
);

325 
	}
}

334 
	$movîesu…s
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
fú°Resu…
, 
StkId
 
ªs
,

335 
ƒes
, 
w™ãd
) {

336 
w™ãd
) {

339 i‡(
ƒes
 == 0)

340 
fú°Resu…
 = 
luaO_nûobje˘
;

341 
	`£tobjs2s
(
L
, 
ªs
, 
fú°Resu…
);

344 
LUA_MULTRET
: {

345 
i
;

346 
i
 = 0; i < 
ƒes
; i++)

347 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

348 
L
->
t›
 = 
ªs
 + 
ƒes
;

352 
i
;

353 i‡(
w™ãd
 <
ƒes
) {

354 
i
 = 0; i < 
w™ãd
; i++)

355 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

358 
i
 = 0; i < 
ƒes
; i++)

359 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

360 ; 
i
 < 
w™ãd
; i++)

361 
	`£äûvÆue
(
ªs
 + 
i
);

366 
L
->
t›
 = 
ªs
 + 
w™ãd
;

368 
	}
}

376 
	$luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
, 
ƒes
) {

377 
StkId
 
ªs
;

378 
w™ãd
 = 
ci
->
ƒesu…s
;

379 i‡(
L
->
hookmask
 & (
LUA_MASKRET
 | 
LUA_MASKLINE
)) {

380 i‡(
L
->
hookmask
 & 
LUA_MASKRET
) {

381 
±rdiff_t
 
‰
 = 
	`ßve°ack
(
L
, 
fú°Resu…
);

382 
	`luaD_hook
(
L
, 
LUA_HOOKRET
, -1);

383 
fú°Resu…
 = 
	`ª°‹e°ack
(
L
, 
‰
);

385 
L
->
ﬁdpc
 = 
ci
->
¥evious
->
u
.
l
.
ßvedpc
;

387 
ªs
 = 
ci
->
func
;

388 
L
->
ci
 = ci->
¥evious
;

390  
	`movîesu…s
(
L
, 
fú°Resu…
, 
ªs
, 
ƒes
, 
w™ãd
);

391 
	}
}

395 
	#√xt_ci
(
L
Ë(L->
ci
 = (L->ci->
√xt
 ? L->ci->√xà: 
	`luaE_exãndCI
(L)))

	)

399 
	#check°ackp
(
L
,
n
,
p
) \

400 
	`luaD_check°ackaux
(
L
, 
n
, \

401 
±rdiff_t
 
t__
 = 
	`ßve°ack
(
L
, 
p
); \

402 
	`luaC_checkGC
(
L
), \

403 
p
 = 
	`ª°‹e°ack
(
L
, 
t__
)Ë

	)

413 
	$luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
) {

414 
lua_CFun˘i⁄
 
f
;

415 
CÆlInfo
 *
ci
;

416 
	`ây≥
(
func
)) {

417 
LUA_TCCL
:

418 
f
 = 
	`˛CvÆue
(
func
)->f;

419 
Cfunc
;

420 
LUA_TLCF
:

421 
f
 = 
	`fvÆue
(
func
);

422 
Cfunc
: {

423 
n
;

424 
	`check°ackp
(
L
, 
LUA_MINSTACK
, 
func
);

425 
ci
 = 
	`√xt_ci
(
L
);

426 
ci
->
ƒesu…s
 =Çresults;

427 
ci
->
func
 = func;

428 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

429 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

430 
ci
->
ˇŒ°©us
 = 0;

431 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

432 
	`luaD_hook
(
L
, 
LUA_HOOKCALL
, -1);

433 
	`lua_u∆ock
(
L
);

434 
n
 = (*
f
)(
L
);

435 
	`lua_lock
(
L
);

436 
	`≠i_check√Àms
(
L
, 
n
);

437 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

440 
LUA_TLCL
: {

441 
StkId
 
ba£
;

442 
PrŸo
 *
p
 = 
	`˛LvÆue
(
func
)->p;

443 
n
 = 
	`ˇ°_öt
(
L
->
t›
 - 
func
) - 1;

444 
fsize
 = 
p
->
max°acksize
;

445 
	`check°ackp
(
L
, 
fsize
, 
func
);

446 i‡(
p
->
is_v¨¨g
)

447 
ba£
 = 
	`adju°_v¨¨gs
(
L
, 
p
, 
n
);

449 ; 
n
 < 
p
->
num∑øms
;Ç++)

450 
	`£äûvÆue
(
L
->
t›
++);

451 
ba£
 = 
func
 + 1;

453 
ci
 = 
	`√xt_ci
(
L
);

454 
ci
->
ƒesu…s
 =Çresults;

455 
ci
->
func
 = func;

456 
ci
->
u
.
l
.
ba£
 = base;

457 
L
->
t›
 = 
ci
->t› = 
ba£
 + 
fsize
;

458 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

459 
ci
->
u
.
l
.
ßvedpc
 = 
p
->
code
;

460 
ci
->
ˇŒ°©us
 = 
CIST_LUA
;

461 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

462 
	`ˇŒhook
(
L
, 
ci
);

466 
	`check°ackp
(
L
, 1, 
func
);

467 
	`åyfuncTM
(
L
, 
func
);

468  
	`luaD_¥eˇŒ
(
L
, 
func
, 
ƒesu…s
);

471 
	}
}

481 
	$°ackîr‹
 (
lua_Sèã
 *
L
) {

482 i‡(
L
->
nCˇŒs
 =
LUAI_MAXCCALLS
)

483 
	`luaG_ru√º‹
(
L
, "C stack overflow");

484 i‡(
L
->
nCˇŒs
 >(
LUAI_MAXCCALLS
 + (LUAI_MAXCCALLS>>3)))

485 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

486 
	}
}

495 
	$luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

496 i‡(++
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
)

497 
	`°ackîr‹
(
L
);

498 i‡(!
	`luaD_¥eˇŒ
(
L
, 
func
, 
nResu…s
))

499 
	`luaV_execuã
(
L
);

500 
L
->
nCˇŒs
--;

501 
	}
}

507 
	$luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

508 
L
->
¬y
++;

509 
	`luaD_ˇŒ
(
L
, 
func
, 
nResu…s
);

510 
L
->
¬y
--;

511 
	}
}

518 
	$föishCˇŒ
 (
lua_Sèã
 *
L
, 
°©us
) {

519 
CÆlInfo
 *
ci
 = 
L
->ci;

520 
n
;

522 
	`lua_as£π
(
ci
->
u
.
c
.
k
 !
NULL
 && 
L
->
¬y
 == 0);

524 
	`lua_as£π
((
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
Ë|| 
°©us
 =
LUA_YIELD
);

525 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
) {

526 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

527 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

531 
	`adju°ªsu…s
(
L
, 
ci
->
ƒesu…s
);

532 
	`lua_u∆ock
(
L
);

533 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
°©us
, ci->u.c.
˘x
);

534 
	`lua_lock
(
L
);

535 
	`≠i_check√Àms
(
L
, 
n
);

536 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

537 
	}
}

548 
	$uƒﬁl
 (
lua_Sèã
 *
L
, *
ud
) {

549 i‡(
ud
 !
NULL
)

550 
	`föishCˇŒ
(
L
, *(*)
ud
);

551 
L
->
ci
 !&L->
ba£_ci
) {

552 i‡(!
	`isLua
(
L
->
ci
))

553 
	`föishCˇŒ
(
L
, 
LUA_YIELD
);

555 
	`luaV_föishOp
(
L
);

556 
	`luaV_execuã
(
L
);

559 
	}
}

566 
CÆlInfo
 *
	$födpˇŒ
 (
lua_Sèã
 *
L
) {

567 
CÆlInfo
 *
ci
;

568 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

569 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
)

570  
ci
;

572  
NULL
;

573 
	}
}

581 
	$ªcovî
 (
lua_Sèã
 *
L
, 
°©us
) {

582 
StkId
 
ﬁdt›
;

583 
CÆlInfo
 *
ci
 = 
	`födpˇŒ
(
L
);

584 i‡(
ci
 =
NULL
)  0;

586 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ci
->
exåa
);

587 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

588 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

589 
L
->
ci
 = ci;

590 
L
->
Ælowhook
 = 
	`gëﬂh
(
ci
->
ˇŒ°©us
);

591 
L
->
¬y
 = 0;

592 
	`luaD_shrök°ack
(
L
);

593 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

595 
	}
}

603 
	$ªsume_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
«rg
) {

604 
L
->
t›
 -
«rg
;

605 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
msg
));

606 
	`≠i_ö¸_t›
(
L
);

607 
	`lua_u∆ock
(
L
);

608  
LUA_ERRRUN
;

609 
	}
}

619 
	$ªsume
 (
lua_Sèã
 *
L
, *
ud
) {

620 
n
 = *(
	`ˇ°
(*, 
ud
));

621 
StkId
 
fú°Arg
 = 
L
->
t›
 - 
n
;

622 
CÆlInfo
 *
ci
 = 
L
->ci;

623 i‡(
L
->
°©us
 =
LUA_OK
) {

624 i‡(!
	`luaD_¥eˇŒ
(
L
, 
fú°Arg
 - 1, 
LUA_MULTRET
))

625 
	`luaV_execuã
(
L
);

628 
	`lua_as£π
(
L
->
°©us
 =
LUA_YIELD
);

629 
L
->
°©us
 = 
LUA_OK
;

630 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

631 i‡(
	`isLua
(
ci
))

632 
	`luaV_execuã
(
L
);

634 i‡(
ci
->
u
.
c
.
k
 !
NULL
) {

635 
	`lua_u∆ock
(
L
);

636 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
LUA_YIELD
, ci->u.c.
˘x
);

637 
	`lua_lock
(
L
);

638 
	`≠i_check√Àms
(
L
, 
n
);

639 
fú°Arg
 = 
L
->
t›
 - 
n
;

641 
	`luaD_posˇŒ
(
L
, 
ci
, 
fú°Arg
, 
n
);

643 
	`uƒﬁl
(
L
, 
NULL
);

645 
	}
}

648 
LUA_API
 
	$lua_ªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rgs
) {

649 
°©us
;

650 
ﬁd¬y
 = 
L
->
¬y
;

651 
	`lua_lock
(
L
);

652 i‡(
L
->
°©us
 =
LUA_OK
) {

653 i‡(
L
->
ci
 !&L->
ba£_ci
)

654  
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumên⁄-su•íded c‹outöe", 
«rgs
);

656 i‡(
L
->
°©us
 !
LUA_YIELD
)

657  
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumêdód c‹outöe", 
«rgs
);

658 
L
->
nCˇŒs
 = (
‰om
) ? from->nCcalls + 1 : 1;

659 i‡(
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
)

660  
	`ªsume_îr‹
(
L
, "C sèck ovîÊow", 
«rgs
);

661 
	`luai_u£r°©îesume
(
L
, 
«rgs
);

662 
L
->
¬y
 = 0;

663 
	`≠i_check√Àms
(
L
, (L->
°©us
 =
LUA_OK
Ë? 
«rgs
 + 1 :Çargs);

664 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
ªsume
, &
«rgs
);

665 i‡(
°©us
 == -1)

666 
°©us
 = 
LUA_ERRRUN
;

668 
	`îr‹°©us
(
°©us
Ë&& 
	`ªcovî
(
L
, status)) {

670 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
uƒﬁl
, &status);

672 i‡(
	`îr‹°©us
(
°©us
)) {

673 
L
->
°©us
 = 
	`ˇ°_byã
(status);

674 
	`£ãº‹obj
(
L
, 
°©us
, L->
t›
);

675 
L
->
ci
->
t›
 = L->top;

677 
	`lua_as£π
(
°©us
 =
L
->status);

679 
L
->
¬y
 = 
ﬁd¬y
;

680 
L
->
nCˇŒs
--;

681 
	`lua_as£π
(
L
->
nCˇŒs
 =((
‰om
) ? from->nCcalls : 0));

682 
	`lua_u∆ock
(
L
);

683  
°©us
;

684 
	}
}

687 
LUA_API
 
	$lua_isyõldabÀ
 (
lua_Sèã
 *
L
) {

688  (
L
->
¬y
 == 0);

689 
	}
}

692 
LUA_API
 
	$lua_yõldk
 (
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

693 
lua_KFun˘i⁄
 
k
) {

694 
CÆlInfo
 *
ci
 = 
L
->ci;

695 
	`luai_u£r°©eyõld
(
L
, 
ƒesu…s
);

696 
	`lua_lock
(
L
);

697 
	`≠i_check√Àms
(
L
, 
ƒesu…s
);

698 i‡(
L
->
¬y
 > 0) {

699 i‡(
L
 !
	`G
(L)->
maöthªad
)

700 
	`luaG_ru√º‹
(
L
, "attemptÅo yieldácrossá C-call boundary");

702 
	`luaG_ru√º‹
(
L
, "attemptÅo yield from outsideá coroutine");

704 
L
->
°©us
 = 
LUA_YIELD
;

705 
ci
->
exåa
 = 
	`ßve°ack
(
L
, ci->
func
);

706 i‡(
	`isLua
(
ci
)) {

707 
	`≠i_check
(
L
, 
k
 =
NULL
, "hooks cannot continueáfter yielding");

710 i‡((
ci
->
u
.
c
.
k
 = kË!
NULL
)

711 
ci
->
u
.
c
.
˘x
 = ctx;

712 
ci
->
func
 = 
L
->
t›
 - 
ƒesu…s
 - 1;

713 
	`luaD_throw
(
L
, 
LUA_YIELD
);

715 
	`lua_as£π
(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
);

716 
	`lua_u∆ock
(
L
);

718 
	}
}

721 
	$luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

722 
±rdiff_t
 
ﬁd_t›
,Öådiff_à
ef
) {

723 
°©us
;

724 
CÆlInfo
 *
ﬁd_ci
 = 
L
->
ci
;

725 
lu_byã
 
ﬁd_Ælowhooks
 = 
L
->
Ælowhook
;

726 
ﬁd_¬y
 = 
L
->
¬y
;

727 
±rdiff_t
 
ﬁd_îrfunc
 = 
L
->
îrfunc
;

728 
L
->
îrfunc
 = 
ef
;

729 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
func
, 
u
);

730 i‡(
°©us
 !
LUA_OK
) {

731 
StkId
 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ﬁd_t›
);

732 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

733 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

734 
L
->
ci
 = 
ﬁd_ci
;

735 
L
->
Ælowhook
 = 
ﬁd_Ælowhooks
;

736 
L
->
¬y
 = 
ﬁd_¬y
;

737 
	`luaD_shrök°ack
(
L
);

739 
L
->
îrfunc
 = 
ﬁd_îrfunc
;

740  
°©us
;

741 
	}
}

748 
	sSP¨£r
 {

749 
ZIO
 *
	mz
;

750 
Mbuf„r
 
	mbuff
;

751 
Dynd©a
 
	mdyd
;

752 c⁄° *
	mmode
;

753 c⁄° *
	m«me
;

757 
	$checkmode
 (
lua_Sèã
 *
L
, c⁄° *
mode
, c⁄° *
x
) {

758 i‡(
mode
 && 
	`°rchr
(mode, 
x
[0]Ë=
NULL
) {

759 
	`luaO_pushf°rög
(
L
,

760 "©ãm±Åÿlﬂdá %†chunk (modêi†'%s')", 
x
, 
mode
);

761 
	`luaD_throw
(
L
, 
LUA_ERRSYNTAX
);

763 
	}
}

766 
	$f_∑r£r
 (
lua_Sèã
 *
L
, *
ud
) {

767 
LClosuª
 *
˛
;

768 
SP¨£r
 *
p
 = 
	`ˇ°
(SP¨£∏*, 
ud
);

769 
c
 = 
	`zgëc
(
p
->
z
);

770 i‡(
c
 =
LUA_SIGNATURE
[0]) {

771 
	`checkmode
(
L
, 
p
->
mode
, "binary");

772 
˛
 = 
	`luaU_undump
(
L
, 
p
->
z
,Ö->
«me
);

775 
	`checkmode
(
L
, 
p
->
mode
, "text");

776 
˛
 = 
	`luaY_∑r£r
(
L
, 
p
->
z
, &p->
buff
, &p->
dyd
,Ö->
«me
, 
c
);

778 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

779 
	`luaF_öôupvÆs
(
L
, 
˛
);

780 
	}
}

783 
	$luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

784 c⁄° *
mode
) {

785 
SP¨£r
 
p
;

786 
°©us
;

787 
L
->
¬y
++;

788 
p
.
z
 = z;Ö.
«me
 =Çame;Ö.
mode
 = mode;

789 
p
.
dyd
.
a˘v¨
.
¨r
 = 
NULL
;Ö.dyd.a˘v¨.
size
 = 0;

790 
p
.
dyd
.
gt
.
¨r
 = 
NULL
;Ö.dyd.gt.
size
 = 0;

791 
p
.
dyd
.
œbñ
.
¨r
 = 
NULL
;Ö.dyd.œbñ.
size
 = 0;

792 
	`luaZ_öôbuf„r
(
L
, &
p
.
buff
);

793 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_∑r£r
, &
p
, 
	`ßve°ack
(L, L->
t›
), L->
îrfunc
);

794 
	`luaZ_‰ìbuf„r
(
L
, &
p
.
buff
);

795 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
a˘v¨
.
¨r
,Ö.dyd.a˘v¨.
size
);

796 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
gt
.
¨r
,Ö.dyd.gt.
size
);

797 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
œbñ
.
¨r
,Ö.dyd.œbñ.
size
);

798 
L
->
¬y
--;

799  
°©us
;

800 
	}
}

	@ldo.h

7 #i‚de‡
ldo_h


8 
	#ldo_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

13 
	~"lzio.h
"

23 
	#luaD_check°ackaux
(
L
,
n
,
¥e
,
pos
) \

24 i‡(
L
->
°ack_œ°
 - L->
t›
 <(
n
)) \

25 { 
¥e
; 
	`luaD_grow°ack
(
L
, 
n
); 
pos
; } { 
	`c⁄dmove°ack
(L,¥e,pos); }

	)

28 
	#luaD_check°ack
(
L
,
n
Ë
	`luaD_check°ackaux
(L,n,()0,()0)

	)

32 
	#ßve°ack
(
L
,
p
Ë((*)’Ë- (*)L->
°ack
)

	)

33 
	#ª°‹e°ack
(
L
,
n
Ë((
TVÆue
 *)((*)L->
°ack
 + (n)))

	)

37 (*
	tPfunc
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
);

39 
LUAI_FUNC
 
	`luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

40 c⁄° *
mode
);

41 
LUAI_FUNC
 
	`luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
);

42 
LUAI_FUNC
 
	`luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
);

43 
LUAI_FUNC
 
	`luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

44 
LUAI_FUNC
 
	`luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

45 
LUAI_FUNC
 
	`luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

46 
±rdiff_t
 
ﬁdt›
,Öådiff_à
ef
);

47 
LUAI_FUNC
 
	`luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
,

48 
ƒes
);

49 
LUAI_FUNC
 
	`luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
);

50 
LUAI_FUNC
 
	`luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
);

51 
LUAI_FUNC
 
	`luaD_shrök°ack
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
	`luaD_ö˘›
 (
lua_Sèã
 *
L
);

54 
LUAI_FUNC
 
l_n‹ë
 
	`luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
);

55 
LUAI_FUNC
 
	`luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
);

	@ldump.c

7 
	#ldump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lobje˘.h
"

18 
	~"l°©e.h
"

19 
	~"lundump.h
"

23 
lua_Sèã
 *
	mL
;

24 
lua_Wrôî
 
	mwrôî
;

25 *
	md©a
;

26 
	m°rù
;

27 
	m°©us
;

28 } 
	tDumpSèã
;

35 
	#DumpVe˘‹
(
v
,
n
,
D
Ë
	`DumpBlock
(v,“)*((v)[0]),D)

	)

37 
	#DumpLôîÆ
(
s
,
D
Ë
	`DumpBlock
(s, (sË- (), D)

	)

40 
	$DumpBlock
 (c⁄° *
b
, 
size_t
 
size
, 
DumpSèã
 *
D
) {

41 i‡(
D
->
°©us
 =0 && 
size
 > 0) {

42 
	`lua_u∆ock
(
D
->
L
);

43 
D
->
°©us
 = (*D->
wrôî
)(D->
L
, 
b
, 
size
, D->
d©a
);

44 
	`lua_lock
(
D
->
L
);

46 
	}
}

49 
	#DumpV¨
(
x
,
D
Ë
	`DumpVe˘‹
(&x,1,D)

	)

52 
	$DumpByã
 (
y
, 
DumpSèã
 *
D
) {

53 
lu_byã
 
x
 = (lu_byã)
y
;

54 
	`DumpV¨
(
x
, 
D
);

55 
	}
}

58 
	$DumpI¡
 (
x
, 
DumpSèã
 *
D
) {

59 
	`DumpV¨
(
x
, 
D
);

60 
	}
}

63 
	$DumpNumbî
 (
lua_Numbî
 
x
, 
DumpSèã
 *
D
) {

64 
	`DumpV¨
(
x
, 
D
);

65 
	}
}

68 
	$DumpI¡egî
 (
lua_I¡egî
 
x
, 
DumpSèã
 *
D
) {

69 
	`DumpV¨
(
x
, 
D
);

70 
	}
}

73 
	$DumpSåög
 (c⁄° 
TSåög
 *
s
, 
DumpSèã
 *
D
) {

74 i‡(
s
 =
NULL
)

75 
	`DumpByã
(0, 
D
);

77 
size_t
 
size
 = 
	`ts¶í
(
s
) + 1;

78 c⁄° *
°r
 = 
	`gë°r
(
s
);

79 i‡(
size
 < 0xFF)

80 
	`DumpByã
(
	`ˇ°_öt
(
size
), 
D
);

82 
	`DumpByã
(0xFF, 
D
);

83 
	`DumpV¨
(
size
, 
D
);

85 
	`DumpVe˘‹
(
°r
, 
size
 - 1, 
D
);

87 
	}
}

90 
	$DumpCode
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

91 
	`DumpI¡
(
f
->
sizecode
, 
D
);

92 
	`DumpVe˘‹
(
f
->
code
, f->
sizecode
, 
D
);

93 
	}
}

96 
DumpFun˘i⁄
(c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
);

98 
	$DumpC⁄°™ts
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

99 
i
;

100 
n
 = 
f
->
sizek
;

101 
	`DumpI¡
(
n
, 
D
);

102 
i
 = 0; i < 
n
; i++) {

103 c⁄° 
TVÆue
 *
o
 = &
f
->
k
[
i
];

104 
	`DumpByã
(
	`ây≥
(
o
), 
D
);

105 
	`ây≥
(
o
)) {

106 
LUA_TNIL
:

108 
LUA_TBOOLEAN
:

109 
	`DumpByã
(
	`bvÆue
(
o
), 
D
);

111 
LUA_TNUMFLT
:

112 
	`DumpNumbî
(
	`ÊtvÆue
(
o
), 
D
);

114 
LUA_TNUMINT
:

115 
	`DumpI¡egî
(
	`ivÆue
(
o
), 
D
);

117 
LUA_TSHRSTR
:

118 
LUA_TLNGSTR
:

119 
	`DumpSåög
(
	`tsvÆue
(
o
), 
D
);

122 
	`lua_as£π
(0);

125 
	}
}

128 
	$DumpPrŸos
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

129 
i
;

130 
n
 = 
f
->
sizï
;

131 
	`DumpI¡
(
n
, 
D
);

132 
i
 = 0; i < 
n
; i++)

133 
	`DumpFun˘i⁄
(
f
->
p
[
i
], f->
sour˚
, 
D
);

134 
	}
}

137 
	$DumpUpvÆues
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

138 
i
, 
n
 = 
f
->
sizeupvÆues
;

139 
	`DumpI¡
(
n
, 
D
);

140 
i
 = 0; i < 
n
; i++) {

141 
	`DumpByã
(
f
->
upvÆues
[
i
].
ö°ack
, 
D
);

142 
	`DumpByã
(
f
->
upvÆues
[
i
].
idx
, 
D
);

144 
	}
}

147 
	$DumpDebug
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

148 
i
, 
n
;

149 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñöeöfo
;

150 
	`DumpI¡
(
n
, 
D
);

151 
	`DumpVe˘‹
(
f
->
löeöfo
, 
n
, 
D
);

152 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñocv¨s
;

153 
	`DumpI¡
(
n
, 
D
);

154 
i
 = 0; i < 
n
; i++) {

155 
	`DumpSåög
(
f
->
locv¨s
[
i
].
v¨«me
, 
D
);

156 
	`DumpI¡
(
f
->
locv¨s
[
i
].
°¨çc
, 
D
);

157 
	`DumpI¡
(
f
->
locv¨s
[
i
].
ídpc
, 
D
);

159 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizeupvÆues
;

160 
	`DumpI¡
(
n
, 
D
);

161 
i
 = 0; i < 
n
; i++)

162 
	`DumpSåög
(
f
->
upvÆues
[
i
].
«me
, 
D
);

163 
	}
}

166 
	$DumpFun˘i⁄
 (c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
) {

167 i‡(
D
->
°rù
 || 
f
->
sour˚
 =
psour˚
)

168 
	`DumpSåög
(
NULL
, 
D
);

170 
	`DumpSåög
(
f
->
sour˚
, 
D
);

171 
	`DumpI¡
(
f
->
löedeföed
, 
D
);

172 
	`DumpI¡
(
f
->
œ°löedeföed
, 
D
);

173 
	`DumpByã
(
f
->
num∑øms
, 
D
);

174 
	`DumpByã
(
f
->
is_v¨¨g
, 
D
);

175 
	`DumpByã
(
f
->
max°acksize
, 
D
);

176 
	`DumpCode
(
f
, 
D
);

177 
	`DumpC⁄°™ts
(
f
, 
D
);

178 
	`DumpUpvÆues
(
f
, 
D
);

179 
	`DumpPrŸos
(
f
, 
D
);

180 
	`DumpDebug
(
f
, 
D
);

181 
	}
}

184 
	$DumpHódî
 (
DumpSèã
 *
D
) {

185 
	`DumpLôîÆ
(
LUA_SIGNATURE
, 
D
);

186 
	`DumpByã
(
LUAC_VERSION
, 
D
);

187 
	`DumpByã
(
LUAC_FORMAT
, 
D
);

188 
	`DumpLôîÆ
(
LUAC_DATA
, 
D
);

189 
	`DumpByã
((), 
D
);

190 
	`DumpByã
((
size_t
), 
D
);

191 
	`DumpByã
((
In°ru˘i⁄
), 
D
);

192 
	`DumpByã
((
lua_I¡egî
), 
D
);

193 
	`DumpByã
((
lua_Numbî
), 
D
);

194 
	`DumpI¡egî
(
LUAC_INT
, 
D
);

195 
	`DumpNumbî
(
LUAC_NUM
, 
D
);

196 
	}
}

202 
	$luaU_dump
(
lua_Sèã
 *
L
, c⁄° 
PrŸo
 *
f
, 
lua_Wrôî
 
w
, *
d©a
,

203 
°rù
) {

204 
DumpSèã
 
D
;

205 
D
.
L
 = L;

206 
D
.
wrôî
 = 
w
;

207 
D
.
d©a
 = data;

208 
D
.
°rù
 = strip;

209 
D
.
°©us
 = 0;

210 
	`DumpHódî
(&
D
);

211 
	`DumpByã
(
f
->
sizeupvÆues
, &
D
);

212 
	`DumpFun˘i⁄
(
f
, 
NULL
, &
D
);

213  
D
.
°©us
;

214 
	}
}

	@lfunc.c

7 
	#lfunc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lfunc.h
"

18 
	~"lgc.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

25 
CClosuª
 *
	$luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

26 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TCCL
, 
	`sizeC˛osuª
(
n
));

27 
CClosuª
 *
c
 = 
	`gco2c˛
(
o
);

28 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

29  
c
;

30 
	}
}

33 
LClosuª
 *
	$luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

34 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TLCL
, 
	`sizeL˛osuª
(
n
));

35 
LClosuª
 *
c
 = 
	`gco2l˛
(
o
);

36 
c
->
p
 = 
NULL
;

37 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

38 
n
--Ë
c
->
upvÆs
[n] = 
NULL
;

39  
c
;

40 
	}
}

45 
	$luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

46 
i
;

47 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

48 
UpVÆ
 *
uv
 = 
	`luaM_√w
(
L
, UpVal);

49 
uv
->
ªfcou¡
 = 1;

50 
uv
->
v
 = &uv->
u
.
vÆue
;

51 
	`£äûvÆue
(
uv
->
v
);

52 
˛
->
upvÆs
[
i
] = 
uv
;

54 
	}
}

57 
UpVÆ
 *
	$luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

58 
UpVÆ
 **
µ
 = &
L
->
›íupvÆ
;

59 
UpVÆ
 *
p
;

60 
UpVÆ
 *
uv
;

61 
	`lua_as£π
(
	`isötwups
(
L
Ë|| L->
›íupvÆ
 =
NULL
);

62 *
µ
 !
NULL
 && (
p
 = *µ)->
v
 >
Àvñ
) {

63 
	`lua_as£π
(
	`upis›í
(
p
));

64 i‡(
p
->
v
 =
Àvñ
)

65  
p
;

66 
µ
 = &
p
->
u
.
›í
.
√xt
;

69 
uv
 = 
	`luaM_√w
(
L
, 
UpVÆ
);

70 
uv
->
ªfcou¡
 = 0;

71 
uv
->
u
.
›í
.
√xt
 = *
µ
;

72 
uv
->
u
.
›í
.
touched
 = 1;

73 *
µ
 = 
uv
;

74 
uv
->
v
 = 
Àvñ
;

75 i‡(!
	`isötwups
(
L
)) {

76 
L
->
twups
 = 
	`G
(L)->twups;

77 
	`G
(
L
)->
twups
 = L;

79  
uv
;

80 
	}
}

83 
	$luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

84 
UpVÆ
 *
uv
;

85 
L
->
›íupvÆ
 !
NULL
 && (
uv
 = L->›íupvÆ)->
v
 >
Àvñ
) {

86 
	`lua_as£π
(
	`upis›í
(
uv
));

87 
L
->
›íupvÆ
 = 
uv
->
u
.
›í
.
√xt
;

88 i‡(
uv
->
ªfcou¡
 == 0)

89 
	`luaM_‰ì
(
L
, 
uv
);

91 
	`£tobj
(
L
, &
uv
->
u
.
vÆue
, uv->
v
);

92 
uv
->
v
 = &uv->
u
.
vÆue
;

93 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

96 
	}
}

99 
PrŸo
 *
	$luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
) {

100 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TPROTO
, (
PrŸo
));

101 
PrŸo
 *
f
 = 
	`gco2p
(
o
);

102 
f
->
k
 = 
NULL
;

103 
f
->
sizek
 = 0;

104 
f
->
p
 = 
NULL
;

105 
f
->
sizï
 = 0;

106 
f
->
code
 = 
NULL
;

107 
f
->
ˇche
 = 
NULL
;

108 
f
->
sizecode
 = 0;

109 
f
->
löeöfo
 = 
NULL
;

110 
f
->
sizñöeöfo
 = 0;

111 
f
->
upvÆues
 = 
NULL
;

112 
f
->
sizeupvÆues
 = 0;

113 
f
->
num∑øms
 = 0;

114 
f
->
is_v¨¨g
 = 0;

115 
f
->
max°acksize
 = 0;

116 
f
->
locv¨s
 = 
NULL
;

117 
f
->
sizñocv¨s
 = 0;

118 
f
->
löedeföed
 = 0;

119 
f
->
œ°löedeföed
 = 0;

120 
f
->
sour˚
 = 
NULL
;

121  
f
;

122 
	}
}

125 
	$luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
) {

126 
	`luaM_‰ì¨øy
(
L
, 
f
->
code
, f->
sizecode
);

127 
	`luaM_‰ì¨øy
(
L
, 
f
->
p
, f->
sizï
);

128 
	`luaM_‰ì¨øy
(
L
, 
f
->
k
, f->
sizek
);

129 
	`luaM_‰ì¨øy
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
);

130 
	`luaM_‰ì¨øy
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
);

131 
	`luaM_‰ì¨øy
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
);

132 
	`luaM_‰ì
(
L
, 
f
);

133 
	}
}

140 c⁄° *
	$luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
f
, 
loˇl_numbî
, 
pc
) {

141 
i
;

142 
i
 = 0; i<
f
->
sizñocv¨s
 && f->
locv¨s
[i].
°¨çc
 <
pc
; i++) {

143 i‡(
pc
 < 
f
->
locv¨s
[
i
].
ídpc
) {

144 
loˇl_numbî
--;

145 i‡(
loˇl_numbî
 == 0)

146  
	`gë°r
(
f
->
locv¨s
[
i
].
v¨«me
);

149  
NULL
;

150 
	}
}

	@lfunc.h

7 #i‚de‡
lfunc_h


8 
	#lfunc_h


	)

11 
	~"lobje˘.h
"

14 
	#sizeC˛osuª
(
n
Ë(
	`ˇ°
(, (
CClosuª
)) + \

15 
	`ˇ°
(, (
TVÆue
)*((
n
)-1)))

	)

17 
	#sizeL˛osuª
(
n
Ë(
	`ˇ°
(, (
LClosuª
)) + \

18 
	`ˇ°
(, (
TVÆue
 *)*((
n
)-1)))

	)

22 
	#isötwups
(
L
Ë(L->
twups
 !L)

	)

29 
	#MAXUPVAL
 255

	)

35 
	sUpVÆ
 {

36 
TVÆue
 *
	mv
;

37 
lu_mem
 
	mªfcou¡
;

40 
UpVÆ
 *
	m√xt
;

41 
	mtouched
;

42 } 
	m›í
;

43 
TVÆue
 
	mvÆue
;

44 } 
	mu
;

47 
	#upis›í
(
up
Ë((up)->
v
 !&(up)->
u
.
vÆue
)

	)

50 
LUAI_FUNC
 
PrŸo
 *
luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
);

51 
LUAI_FUNC
 
CClosuª
 *
luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

52 
LUAI_FUNC
 
LClosuª
 *
luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

53 
LUAI_FUNC
 
luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
);

54 
LUAI_FUNC
 
UpVÆ
 *
luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

55 
LUAI_FUNC
 
luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

56 
LUAI_FUNC
 
luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
);

57 
LUAI_FUNC
 c⁄° *
luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
func
, 
loˇl_numbî
,

58 
pc
);

	@lgc.c

7 
	#lgc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lgc.h
"

21 
	~"lmem.h
"

22 
	~"lobje˘.h
"

23 
	~"l°©e.h
"

24 
	~"l°rög.h
"

25 
	~"…abÀ.h
"

26 
	~"…m.h
"

33 
	#GCSösidótomic
 (
GCS∑u£
 + 1)

	)

39 
	#GCSWEEPCOST
 (((
TSåög
Ë+ 4Ë/ 4)

	)

42 
	#GCSWEEPMAX
 (
	`ˇ°_öt
((
GCSTEPSIZE
 / 
GCSWEEPCOST
Ë/ 4))

	)

45 
	#GCFINALIZECOST
 
GCSWEEPCOST


	)

52 
	#STEPMULADJ
 200

	)

59 
	#PAUSEADJ
 100

	)

66 
	#maskcﬁ‹s
 (~(
	`bômask
(
BLACKBIT
Ë| 
WHITEBITS
))

	)

67 
	#makewhôe
(
g
,
x
) \

68 (
x
->
m¨ked
 = 
	`ˇ°_byã
((x->m¨ked & 
maskcﬁ‹s
Ë| 
	`luaC_whôe
(
g
)))

	)

70 
	#whôe2gøy
(
x
Ë
	`ª£tbôs
(x->
m¨ked
, 
WHITEBITS
)

	)

71 
	#bœck2gøy
(
x
Ë
	`ª£tbô
(x->
m¨ked
, 
BLACKBIT
)

	)

74 
	#vÆiswhôe
(
x
Ë(
	`iscﬁÀ˘abÀ
(xË&& 
	`iswhôe
(
	`gcvÆue
(x)))

	)

76 
	#checkdódkey
(
n
Ë
	`lua_as£π
(!
	`âisdódkey
(
	`gkey
“)Ë|| 
	`âi¢û
(
	`gvÆ
“)))

	)

79 
	#checkc⁄si°ícy
(
obj
) \

80 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
Ë|| 
	`righât
(obj))

	)

83 
	#m¨kvÆue
(
g
,
o
Ë{ 
	`checkc⁄si°ícy
(o); \

84 i‡(
	`vÆiswhôe
(
o
)Ë
	`ªÆlym¨kobje˘
(
g
,
	`gcvÆue
(o)); }

	)

86 
	#m¨kobje˘
(
g
,
t
Ë{ i‡(
	`iswhôe
—)Ë
	`ªÆlym¨kobje˘
(g, 
	`obj2gco
—)); }

	)

92 
	#m¨kobje˘N
(
g
,
t
Ë{ i‡—Ë
	`m¨kobje˘
(g,t); }

	)

94 
ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
);

107 
	#gnodña°
(
h
Ë
	`gnode
(h, 
	`ˇ°
(
size_t
, 
	`sizíode
(h)))

	)

113 
	#lökg˛i°
(
o
,
p
Ë((o)->
g˛i°
 = (p), (pË
	`obj2gco
(o))

	)

125 
	$ªmovì¡ry
 (
Node
 *
n
) {

126 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
n
)));

127 i‡(
	`vÆiswhôe
(
	`gkey
(
n
)))

128 
	`£tdódvÆue
(
	`wgkey
(
n
));

129 
	}
}

139 
	$is˛óªd
 (
globÆ_Sèã
 *
g
, c⁄° 
TVÆue
 *
o
) {

140 i‡(!
	`iscﬁÀ˘abÀ
(
o
))  0;

141 i‡(
	`âis°rög
(
o
)) {

142 
	`m¨kobje˘
(
g
, 
	`tsvÆue
(
o
));

145  
	`iswhôe
(
	`gcvÆue
(
o
));

146 
	}
}

155 
	$luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
) {

156 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

157 
	`lua_as£π
(
	`isbœck
(
o
Ë&& 
	`iswhôe
(
v
Ë&& !
	`isdód
(
g
, v) && !isdead(g, o));

158 i‡(
	`kìpöv¨ü¡
(
g
))

159 
	`ªÆlym¨kobje˘
(
g
, 
v
);

161 
	`lua_as£π
(
	`isswìµha£
(
g
));

162 
	`makewhôe
(
g
, 
o
);

164 
	}
}

171 
	$luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

172 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

173 
	`lua_as£π
(
	`isbœck
(
t
Ë&& !
	`isdód
(
g
,Å));

174 
	`bœck2gøy
(
t
);

175 
	`lökg˛i°
(
t
, 
g
->
gøyagaö
);

176 
	}
}

185 
	$luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

186 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

187 
GCObje˘
 *
o
 = 
	`gcvÆue
(
uv
->
v
);

188 
	`lua_as£π
(!
	`upis›í
(
uv
));

189 i‡(
	`kìpöv¨ü¡
(
g
))

190 
	`m¨kobje˘
(
g
, 
o
);

191 
	}
}

194 
	$luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

195 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

196 
	`lua_as£π
(
g
->
Ælgc
 =
o
);

197 
	`whôe2gøy
(
o
);

198 
g
->
Ælgc
 = 
o
->
√xt
;

199 
o
->
√xt
 = 
g
->
fixedgc
;

200 
g
->
fixedgc
 = 
o
;

201 
	}
}

208 
GCObje˘
 *
	$luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
) {

209 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

210 
GCObje˘
 *
o
 = 
	`ˇ°
(GCObje˘ *, 
	`luaM_√wobje˘
(
L
, 
	`nov¨ü¡
(
â
), 
sz
));

211 
o
->
m¨ked
 = 
	`luaC_whôe
(
g
);

212 
o
->
â
 =Åt;

213 
o
->
√xt
 = 
g
->
Ælgc
;

214 
g
->
Ælgc
 = 
o
;

215  
o
;

216 
	}
}

235 
	$ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
) {

236 
ªíåy
:

237 
	`whôe2gøy
(
o
);

238 
o
->
â
) {

239 
LUA_TSHRSTR
: {

240 
	`gøy2bœck
(
o
);

241 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
shæí
);

244 
LUA_TLNGSTR
: {

245 
	`gøy2bœck
(
o
);

246 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
u
.
 gÀn
);

249 
LUA_TUSERDATA
: {

250 
TVÆue
 
uvÆue
;

251 
	`m¨kobje˘N
(
g
, 
	`gco2u
(
o
)->
më©abÀ
);

252 
	`gøy2bœck
(
o
);

253 
g
->
GCmemåav
 +
	`sizeud©a
(
	`gco2u
(
o
));

254 
	`gëu£rvÆue
(
g
->
maöthªad
, 
	`gco2u
(
o
), &
uvÆue
);

255 i‡(
	`vÆiswhôe
(&
uvÆue
)) {

256 
o
 = 
	`gcvÆue
(&
uvÆue
);

257 
ªíåy
;

261 
LUA_TLCL
: {

262 
	`lökg˛i°
(
	`gco2l˛
(
o
), 
g
->
gøy
);

265 
LUA_TCCL
: {

266 
	`lökg˛i°
(
	`gco2c˛
(
o
), 
g
->
gøy
);

269 
LUA_TTABLE
: {

270 
	`lökg˛i°
(
	`gco2t
(
o
), 
g
->
gøy
);

273 
LUA_TTHREAD
: {

274 
	`lökg˛i°
(
	`gco2th
(
o
), 
g
->
gøy
);

277 
LUA_TPROTO
: {

278 
	`lökg˛i°
(
	`gco2p
(
o
), 
g
->
gøy
);

281 : 
	`lua_as£π
(0); ;

283 
	}
}

289 
	$m¨kmt
 (
globÆ_Sèã
 *
g
) {

290 
i
;

291 
i
=0; i < 
LUA_NUMTAGS
; i++)

292 
	`m¨kobje˘N
(
g
, g->
mt
[
i
]);

293 
	}
}

299 
	$m¨kbeög‚z
 (
globÆ_Sèã
 *
g
) {

300 
GCObje˘
 *
o
;

301 
o
 = 
g
->
tobe‚z
; o !
NULL
; o = o->
√xt
)

302 
	`m¨kobje˘
(
g
, 
o
);

303 
	}
}

312 
	$ªm¨kupvÆs
 (
globÆ_Sèã
 *
g
) {

313 
lua_Sèã
 *
thªad
;

314 
lua_Sèã
 **
p
 = &
g
->
twups
;

315 (
thªad
 = *
p
Ë!
NULL
) {

316 
	`lua_as£π
(!
	`isbœck
(
thªad
));

317 i‡(
	`isgøy
(
thªad
Ë&&Åhªad->
›íupvÆ
 !
NULL
)

318 
p
 = &
thªad
->
twups
;

320 
UpVÆ
 *
uv
;

321 *
p
 = 
thªad
->
twups
;

322 
thªad
->
twups
 =Åhread;

323 
uv
 = 
thªad
->
›íupvÆ
; uv !
NULL
; uv = uv->
u
.
›í
.
√xt
) {

324 i‡(
uv
->
u
.
›í
.
touched
) {

325 
	`m¨kvÆue
(
g
, 
uv
->
v
);

326 
uv
->
u
.
›í
.
touched
 = 0;

331 
	}
}

337 
	$ª°¨tcﬁÀ˘i⁄
 (
globÆ_Sèã
 *
g
) {

338 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

339 
g
->
wók
 = g->
Ælwók
 = g->
ïhemî⁄
 = 
NULL
;

340 
	`m¨kobje˘
(
g
, g->
maöthªad
);

341 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

342 
	`m¨kmt
(
g
);

343 
	`m¨kbeög‚z
(
g
);

344 
	}
}

361 
	$åavî£wókvÆue
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

362 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

365 
has˛órs
 = (
h
->
sizóºay
 > 0);

366 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

367 
	`checkdódkey
(
n
);

368 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

369 
	`ªmovì¡ry
(
n
);

371 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

372 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

373 i‡(!
has˛órs
 && 
	`is˛óªd
(
g
, 
	`gvÆ
(
n
)))

374 
has˛órs
 = 1;

377 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

378 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

379 i‡(
has˛órs
)

380 
	`lökg˛i°
(
h
, 
g
->
wók
);

381 
	}
}

394 
	$åavî£ïhemî⁄
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

395 
m¨ked
 = 0;

396 
has˛órs
 = 0;

397 
hasww
 = 0;

398 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

399 
i
;

401 
i
 = 0; i < 
h
->
sizóºay
; i++) {

402 i‡(
	`vÆiswhôe
(&
h
->
¨øy
[
i
])) {

403 
m¨ked
 = 1;

404 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(&
h
->
¨øy
[
i
]));

408 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

409 
	`checkdódkey
(
n
);

410 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

411 
	`ªmovì¡ry
(
n
);

412 i‡(
	`is˛óªd
(
g
, 
	`gkey
(
n
))) {

413 
has˛órs
 = 1;

414 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
)))

415 
hasww
 = 1;

417 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
))) {

418 
m¨ked
 = 1;

419 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(
	`gvÆ
(
n
)));

423 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

424 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

425 i‡(
hasww
)

426 
	`lökg˛i°
(
h
, 
g
->
ïhemî⁄
);

427 i‡(
has˛órs
)

428 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

429  
m¨ked
;

430 
	}
}

433 
	$åavî£°r⁄gèbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

434 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

435 
i
;

436 
i
 = 0; i < 
h
->
sizóºay
; i++)

437 
	`m¨kvÆue
(
g
, &
h
->
¨øy
[
i
]);

438 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

439 
	`checkdódkey
(
n
);

440 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

441 
	`ªmovì¡ry
(
n
);

443 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

444 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

445 
	`m¨kvÆue
(
g
, 
	`gvÆ
(
n
));

448 
	}
}

451 
lu_mem
 
	$åavî£èbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

452 c⁄° *
wókkey
, *
wókvÆue
;

453 c⁄° 
TVÆue
 *
mode
 = 
	`gÁ°tm
(
g
, 
h
->
më©abÀ
, 
TM_MODE
);

454 
	`m¨kobje˘N
(
g
, 
h
->
më©abÀ
);

455 i‡(
mode
 && 
	`âis°rög
(mode) &&

456 ((
wókkey
 = 
	`°rchr
(
	`svÆue
(
mode
), 'k')),

457 (
wókvÆue
 = 
	`°rchr
(
	`svÆue
(
mode
), 'v')),

458 (
wókkey
 || 
wókvÆue
))) {

459 
	`bœck2gøy
(
h
);

460 i‡(!
wókkey
)

461 
	`åavî£wókvÆue
(
g
, 
h
);

462 i‡(!
wókvÆue
)

463 
	`åavî£ïhemî⁄
(
g
, 
h
);

465 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

468 
	`åavî£°r⁄gèbÀ
(
g
, 
h
);

469  (
TabÀ
Ë+ (
TVÆue
Ë* 
h
->
sizóºay
 +

470 (
Node
Ë* 
	`ˇ°
(
size_t
, 
	`Ælocsizíode
(
h
));

471 
	}
}

479 
	$åavî£¥Ÿo
 (
globÆ_Sèã
 *
g
, 
PrŸo
 *
f
) {

480 
i
;

481 i‡(
f
->
ˇche
 && 
	`iswhôe
(f->cache))

482 
f
->
ˇche
 = 
NULL
;

483 
	`m¨kobje˘N
(
g
, 
f
->
sour˚
);

484 
i
 = 0; i < 
f
->
sizek
; i++)

485 
	`m¨kvÆue
(
g
, &
f
->
k
[
i
]);

486 
i
 = 0; i < 
f
->
sizeupvÆues
; i++)

487 
	`m¨kobje˘N
(
g
, 
f
->
upvÆues
[
i
].
«me
);

488 
i
 = 0; i < 
f
->
sizï
; i++)

489 
	`m¨kobje˘N
(
g
, 
f
->
p
[
i
]);

490 
i
 = 0; i < 
f
->
sizñocv¨s
; i++)

491 
	`m¨kobje˘N
(
g
, 
f
->
locv¨s
[
i
].
v¨«me
);

492  (
PrŸo
Ë+ (
In°ru˘i⁄
Ë* 
f
->
sizecode
 +

493 (
PrŸo
 *Ë* 
f
->
sizï
 +

494 (
TVÆue
Ë* 
f
->
sizek
 +

495 (Ë* 
f
->
sizñöeöfo
 +

496 (
LocV¨
Ë* 
f
->
sizñocv¨s
 +

497 (
UpvÆdesc
Ë* 
f
->
sizeupvÆues
;

498 
	}
}

501 
lu_mem
 
	$åavî£C˛osuª
 (
globÆ_Sèã
 *
g
, 
CClosuª
 *
˛
) {

502 
i
;

503 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

504 
	`m¨kvÆue
(
g
, &
˛
->
upvÆue
[
i
]);

505  
	`sizeC˛osuª
(
˛
->
nupvÆues
);

506 
	}
}

514 
lu_mem
 
	$åavî£L˛osuª
 (
globÆ_Sèã
 *
g
, 
LClosuª
 *
˛
) {

515 
i
;

516 
	`m¨kobje˘N
(
g
, 
˛
->
p
);

517 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

518 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

519 i‡(
uv
 !
NULL
) {

520 i‡(
	`upis›í
(
uv
Ë&& 
g
->
gc°©e
 !
GCSösidótomic
)

521 
uv
->
u
.
›í
.
touched
 = 1;

523 
	`m¨kvÆue
(
g
, 
uv
->
v
);

526  
	`sizeL˛osuª
(
˛
->
nupvÆues
);

527 
	}
}

530 
lu_mem
 
	$åavî£thªad
 (
globÆ_Sèã
 *
g
, 
lua_Sèã
 *
th
) {

531 
StkId
 
o
 = 
th
->
°ack
;

532 i‡(
o
 =
NULL
)

534 
	`lua_as£π
(
g
->
gc°©e
 =
GCSösidótomic
 ||

535 
th
->
›íupvÆ
 =
NULL
 || 
	`isötwups
(th));

536 ; 
o
 < 
th
->
t›
; o++)

537 
	`m¨kvÆue
(
g
, 
o
);

538 i‡(
g
->
gc°©e
 =
GCSösidótomic
) {

539 
StkId
 
lim
 = 
th
->
°ack
 +Åh->
°acksize
;

540 ; 
o
 < 
lim
; o++)

541 
	`£äûvÆue
(
o
);

543 i‡(!
	`isötwups
(
th
Ë&&Åh->
›íupvÆ
 !
NULL
) {

544 
th
->
twups
 = 
g
->twups;

545 
g
->
twups
 = 
th
;

548 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
)

549 
	`luaD_shrök°ack
(
th
);

550  ((
lua_Sèã
Ë+ (
TVÆue
Ë* 
th
->
°acksize
 +

551 (
CÆlInfo
Ë* 
th
->
nci
);

552 
	}
}

559 
	$¥›ag©em¨k
 (
globÆ_Sèã
 *
g
) {

560 
lu_mem
 
size
;

561 
GCObje˘
 *
o
 = 
g
->
gøy
;

562 
	`lua_as£π
(
	`isgøy
(
o
));

563 
	`gøy2bœck
(
o
);

564 
o
->
â
) {

565 
LUA_TTABLE
: {

566 
TabÀ
 *
h
 = 
	`gco2t
(
o
);

567 
g
->
gøy
 = 
h
->
g˛i°
;

568 
size
 = 
	`åavî£èbÀ
(
g
, 
h
);

571 
LUA_TLCL
: {

572 
LClosuª
 *
˛
 = 
	`gco2l˛
(
o
);

573 
g
->
gøy
 = 
˛
->
g˛i°
;

574 
size
 = 
	`åavî£L˛osuª
(
g
, 
˛
);

577 
LUA_TCCL
: {

578 
CClosuª
 *
˛
 = 
	`gco2c˛
(
o
);

579 
g
->
gøy
 = 
˛
->
g˛i°
;

580 
size
 = 
	`åavî£C˛osuª
(
g
, 
˛
);

583 
LUA_TTHREAD
: {

584 
lua_Sèã
 *
th
 = 
	`gco2th
(
o
);

585 
g
->
gøy
 = 
th
->
g˛i°
;

586 
	`lökg˛i°
(
th
, 
g
->
gøyagaö
);

587 
	`bœck2gøy
(
o
);

588 
size
 = 
	`åavî£thªad
(
g
, 
th
);

591 
LUA_TPROTO
: {

592 
PrŸo
 *
p
 = 
	`gco2p
(
o
);

593 
g
->
gøy
 = 
p
->
g˛i°
;

594 
size
 = 
	`åavî£¥Ÿo
(
g
, 
p
);

597 : 
	`lua_as£π
(0); ;

599 
g
->
GCmemåav
 +
size
;

600 
	}
}

603 
	$¥›ag©óŒ
 (
globÆ_Sèã
 *
g
) {

604 
g
->
gøy
Ë
	`¥›ag©em¨k
(g);

605 
	}
}

608 
	$c⁄vîgìphemî⁄s
 (
globÆ_Sèã
 *
g
) {

609 
ch™ged
;

611 
GCObje˘
 *
w
;

612 
GCObje˘
 *
√xt
 = 
g
->
ïhemî⁄
;

613 
g
->
ïhemî⁄
 = 
NULL
;

614 
ch™ged
 = 0;

615 (
w
 = 
√xt
Ë!
NULL
) {

616 
√xt
 = 
	`gco2t
(
w
)->
g˛i°
;

617 i‡(
	`åavî£ïhemî⁄
(
g
, 
	`gco2t
(
w
))) {

618 
	`¥›ag©óŒ
(
g
);

619 
ch™ged
 = 1;

622 } 
ch™ged
);

623 
	}
}

639 
	$˛órkeys
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

640 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

641 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

642 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

643 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

644 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& (
	`is˛óªd
(
g
, 
	`gkey
(n)))) {

645 
	`£äûvÆue
(
	`gvÆ
(
n
));

647 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

648 
	`ªmovì¡ry
(
n
);

651 
	}
}

658 
	$˛órvÆues
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

659 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

660 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

661 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

662 
i
;

663 
i
 = 0; i < 
h
->
sizóºay
; i++) {

664 
TVÆue
 *
o
 = &
h
->
¨øy
[
i
];

665 i‡(
	`is˛óªd
(
g
, 
o
))

666 
	`£äûvÆue
(
o
);

668 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

669 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& 
	`is˛óªd
(
g
, gval(n))) {

670 
	`£äûvÆue
(
	`gvÆ
(
n
));

671 
	`ªmovì¡ry
(
n
);

675 
	}
}

678 
	$luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

679 
	`lua_as£π
(
uv
->
ªfcou¡
 > 0);

680 
uv
->
ªfcou¡
--;

681 i‡(
uv
->
ªfcou¡
 =0 && !
	`upis›í
(uv))

682 
	`luaM_‰ì
(
L
, 
uv
);

683 
	}
}

686 
	$‰ìL˛osuª
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

687 
i
;

688 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

689 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

690 i‡(
uv
)

691 
	`luaC_upvdeccou¡
(
L
, 
uv
);

693 
	`luaM_‰ìmem
(
L
, 
˛
, 
	`sizeL˛osuª
(˛->
nupvÆues
));

694 
	}
}

697 
	$‰ìobj
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

698 
o
->
â
) {

699 
LUA_TPROTO
: 
	`luaF_‰ì¥Ÿo
(
L
, 
	`gco2p
(
o
)); ;

700 
LUA_TLCL
: {

701 
	`‰ìL˛osuª
(
L
, 
	`gco2l˛
(
o
));

704 
LUA_TCCL
: {

705 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeC˛osuª
(
	`gco2c˛
(o)->
nupvÆues
));

708 
LUA_TTABLE
: 
	`luaH_‰ì
(
L
, 
	`gco2t
(
o
)); ;

709 
LUA_TTHREAD
: 
	`luaE_‰ìthªad
(
L
, 
	`gco2th
(
o
)); ;

710 
LUA_TUSERDATA
: 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeud©a
(
	`gco2u
(o))); ;

711 
LUA_TSHRSTR
:

712 
	`luaS_ªmove
(
L
, 
	`gco2ts
(
o
));

713 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
shæí
));

715 
LUA_TLNGSTR
: {

716 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
u
.
 gÀn
));

719 : 
	`lua_as£π
(0);

721 
	}
}

724 
	#swìpwhﬁñi°
(
L
,
p
Ë
	`swì∂i°
(L,p,
MAX_LUMEM
)

	)

725 
GCObje˘
 **
swì∂i°
 (
lua_Sèã
 *
L
, GCObje˘ **
p
, 
lu_mem
 
cou¡
);

735 
GCObje˘
 **
	$swì∂i°
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, 
lu_mem
 
cou¡
) {

736 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

737 
ow
 = 
	`Ÿhîwhôe
(
g
);

738 
whôe
 = 
	`luaC_whôe
(
g
);

739 *
p
 !
NULL
 && 
cou¡
-- > 0) {

740 
GCObje˘
 *
cuº
 = *
p
;

741 
m¨ked
 = 
cuº
->marked;

742 i‡(
	`isdódm
(
ow
, 
m¨ked
)) {

743 *
p
 = 
cuº
->
√xt
;

744 
	`‰ìobj
(
L
, 
cuº
);

747 
cuº
->
m¨ked
 = 
	`ˇ°_byã
((m¨ked & 
maskcﬁ‹s
Ë| 
whôe
);

748 
p
 = &
cuº
->
√xt
;

751  (*
p
 =
NULL
) ? NULL :Ö;

752 
	}
}

758 
GCObje˘
 **
	$swì±ﬁive
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
) {

759 
GCObje˘
 **
ﬁd
 = 
p
;

761 
p
 = 
	`swì∂i°
(
L
,Ö, 1);

762 } 
p
 =
ﬁd
);

763  
p
;

764 
	}
}

778 
	$checkSizes
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

779 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
) {

780 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

781 i‡(
g
->
°π
.
nu£
 < g->°π.
size
 / 4)

782 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 / 2);

783 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

785 
	}
}

788 
GCObje˘
 *
	$ud©a2föÆize
 (
globÆ_Sèã
 *
g
) {

789 
GCObje˘
 *
o
 = 
g
->
tobe‚z
;

790 
	`lua_as£π
(
	`toföÆize
(
o
));

791 
g
->
tobe‚z
 = 
o
->
√xt
;

792 
o
->
√xt
 = 
g
->
Ælgc
;

793 
g
->
Ælgc
 = 
o
;

794 
	`ª£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

795 i‡(
	`isswìµha£
(
g
))

796 
	`makewhôe
(
g
, 
o
);

797  
o
;

798 
	}
}

801 
	$dŸheˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

802 
	`UNUSED
(
ud
);

803 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 0);

804 
	}
}

807 
	$GCTM
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

808 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

809 c⁄° 
TVÆue
 *
tm
;

810 
TVÆue
 
v
;

811 
	`£tgcovÆue
(
L
, &
v
, 
	`ud©a2föÆize
(
g
));

812 
tm
 = 
	`luaT_gëtmbyobj
(
L
, &
v
, 
TM_GC
);

813 i‡(
tm
 !
NULL
 && 
	`âisfun˘i⁄
(tm)) {

814 
°©us
;

815 
lu_byã
 
ﬁdah
 = 
L
->
Ælowhook
;

816 
ru¬ög
 = 
g
->
g¸u¬ög
;

817 
L
->
Ælowhook
 = 0;

818 
g
->
g¸u¬ög
 = 0;

819 
	`£tobj2s
(
L
, L->
t›
, 
tm
);

820 
	`£tobj2s
(
L
, L->
t›
 + 1, &
v
);

821 
L
->
t›
 += 2;

822 
L
->
ci
->
ˇŒ°©us
 |
CIST_FIN
;

823 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
dŸheˇŒ
, 
NULL
, 
	`ßve°ack
(L, L->
t›
 - 2), 0);

824 
L
->
ci
->
ˇŒ°©us
 &~
CIST_FIN
;

825 
L
->
Ælowhook
 = 
ﬁdah
;

826 
g
->
g¸u¬ög
 = 
ru¬ög
;

827 i‡(
°©us
 !
LUA_OK
 && 
¥›ag©ìº‹s
) {

828 i‡(
°©us
 =
LUA_ERRRUN
) {

829 c⁄° *
msg
 = (
	`âis°rög
(
L
->
t›
 - 1))

830 ? 
	`svÆue
(
L
->
t›
 - 1)

832 
	`luaO_pushf°rög
(
L
, "îr‹ i¿__g¯mëamëhod (%s)", 
msg
);

833 
°©us
 = 
LUA_ERRGCMM
;

835 
	`luaD_throw
(
L
, 
°©us
);

838 
	}
}

844 
	$ru«„wföÆizîs
 (
lua_Sèã
 *
L
) {

845 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

846 
i
;

847 
	`lua_as£π
(!
g
->
tobe‚z
 || g->
gcfönum
 > 0);

848 
i
 = 0; 
g
->
tobe‚z
 && i < g->
gcfönum
; i++)

849 
	`GCTM
(
L
, 1);

850 
g
->
gcfönum
 = (!g->
tobe‚z
) ? 0

851 : 
g
->
gcfönum
 * 2;

852  
i
;

853 
	}
}

859 
	$ˇŒÆÕídögföÆizîs
 (
lua_Sèã
 *
L
) {

860 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

861 
g
->
tobe‚z
)

862 
	`GCTM
(
L
, 0);

863 
	}
}

869 
GCObje˘
 **
	$födœ°
 (
GCObje˘
 **
p
) {

870 *
p
 !
NULL
)

871 
p
 = &(*p)->
√xt
;

872  
p
;

873 
	}
}

880 
	$£∑øãtobe‚z
 (
globÆ_Sèã
 *
g
, 
Æl
) {

881 
GCObje˘
 *
cuº
;

882 
GCObje˘
 **
p
 = &
g
->
föobj
;

883 
GCObje˘
 **
œ°√xt
 = 
	`födœ°
(&
g
->
tobe‚z
);

884 (
cuº
 = *
p
Ë!
NULL
) {

885 
	`lua_as£π
(
	`toföÆize
(
cuº
));

886 i‡(!(
	`iswhôe
(
cuº
Ë|| 
Æl
))

887 
p
 = &
cuº
->
√xt
;

889 *
p
 = 
cuº
->
√xt
;

890 
cuº
->
√xt
 = *
œ°√xt
;

891 *
œ°√xt
 = 
cuº
;

892 
œ°√xt
 = &
cuº
->
√xt
;

895 
	}
}

902 
	$luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
) {

903 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

904 i‡(
	`toföÆize
(
o
) ||

905 
	`gÁ°tm
(
g
, 
mt
, 
TM_GC
Ë=
NULL
)

908 
GCObje˘
 **
p
;

909 i‡(
	`isswìµha£
(
g
)) {

910 
	`makewhôe
(
g
, 
o
);

911 i‡(
g
->
swìpgc
 =&
o
->
√xt
)

912 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, g->sweepgc);

915 
p
 = &
g
->
Ælgc
; *∞!
o
;Ö = &(*p)->
√xt
) { }

916 *
p
 = 
o
->
√xt
;

917 
o
->
√xt
 = 
g
->
föobj
;

918 
g
->
föobj
 = 
o
;

919 
	`l_£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

921 
	}
}

940 
	$£çau£
 (
globÆ_Sèã
 *
g
) {

941 
l_mem
 
thªshﬁd
, 
debt
;

942 
l_mem
 
e°im©e
 = 
g
->
GCe°im©e
 / 
PAUSEADJ
;

943 
	`lua_as£π
(
e°im©e
 > 0);

944 
thªshﬁd
 = (
g
->
g˝au£
 < 
MAX_LMEM
 / 
e°im©e
)

945 ? 
e°im©e
 * 
g
->
g˝au£


946 : 
MAX_LMEM
;

947 
debt
 = 
	`gëtŸÆbyãs
(
g
Ë- 
thªshﬁd
;

948 
	`luaE_£tdebt
(
g
, 
debt
);

949 
	}
}

959 
	$íãrswìp
 (
lua_Sèã
 *
L
) {

960 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

961 
g
->
gc°©e
 = 
GCSsw∑Œgc
;

962 
	`lua_as£π
(
g
->
swìpgc
 =
NULL
);

963 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, &g->
Ælgc
, 1);

964 
	}
}

967 
	$luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
) {

968 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

969 
	`£∑øãtobe‚z
(
g
, 1);

970 
	`lua_as£π
(
g
->
föobj
 =
NULL
);

971 
	`ˇŒÆÕídögföÆizîs
(
L
);

972 
	`lua_as£π
(
g
->
tobe‚z
 =
NULL
);

973 
g
->
cuºítwhôe
 = 
WHITEBITS
;

974 
g
->
gcköd
 = 
KGC_NORMAL
;

975 
	`swìpwhﬁñi°
(
L
, &
g
->
föobj
);

976 
	`swìpwhﬁñi°
(
L
, &
g
->
Ælgc
);

977 
	`swìpwhﬁñi°
(
L
, &
g
->
fixedgc
);

978 
	`lua_as£π
(
g
->
°π
.
nu£
 == 0);

979 
	}
}

982 
l_mem
 
	$©omic
 (
lua_Sèã
 *
L
) {

983 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

984 
l_mem
 
w‹k
;

985 
GCObje˘
 *
‹igwók
, *
‹igÆl
;

986 
GCObje˘
 *
gøyagaö
 = 
g
->grayagain;

987 
	`lua_as£π
(
g
->
ïhemî⁄
 =
NULL
 && g->
wók
 == NULL);

988 
	`lua_as£π
(!
	`iswhôe
(
g
->
maöthªad
));

989 
g
->
gc°©e
 = 
GCSösidótomic
;

990 
g
->
GCmemåav
 = 0;

991 
	`m¨kobje˘
(
g
, 
L
);

993 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

994 
	`m¨kmt
(
g
);

996 
	`ªm¨kupvÆs
(
g
);

997 
	`¥›ag©óŒ
(
g
);

998 
w‹k
 = 
g
->
GCmemåav
;

999 
g
->
gøy
 = 
gøyagaö
;

1000 
	`¥›ag©óŒ
(
g
);

1001 
g
->
GCmemåav
 = 0;

1002 
	`c⁄vîgìphemî⁄s
(
g
);

1005 
	`˛órvÆues
(
g
, g->
wók
, 
NULL
);

1006 
	`˛órvÆues
(
g
, g->
Ælwók
, 
NULL
);

1007 
‹igwók
 = 
g
->
wók
; 
‹igÆl
 = g->
Ælwók
;

1008 
w‹k
 +
g
->
GCmemåav
;

1009 
	`£∑øãtobe‚z
(
g
, 0);

1010 
g
->
gcfönum
 = 1;

1011 
	`m¨kbeög‚z
(
g
);

1012 
	`¥›ag©óŒ
(
g
);

1013 
g
->
GCmemåav
 = 0;

1014 
	`c⁄vîgìphemî⁄s
(
g
);

1017 
	`˛órkeys
(
g
, g->
ïhemî⁄
, 
NULL
);

1018 
	`˛órkeys
(
g
, g->
Ælwók
, 
NULL
);

1020 
	`˛órvÆues
(
g
, g->
wók
, 
‹igwók
);

1021 
	`˛órvÆues
(
g
, g->
Ælwók
, 
‹igÆl
);

1022 
	`luaS_˛órˇche
(
g
);

1023 
g
->
cuºítwhôe
 = 
	`ˇ°_byã
(
	`Ÿhîwhôe
(g));

1024 
w‹k
 +
g
->
GCmemåav
;

1025  
w‹k
;

1026 
	}
}

1029 
lu_mem
 
	$swìp°ï
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
,

1030 
√xt°©e
, 
GCObje˘
 **
√xéi°
) {

1031 i‡(
g
->
swìpgc
) {

1032 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

1033 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, g->swìpgc, 
GCSWEEPMAX
);

1034 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

1035 i‡(
g
->
swìpgc
)

1036  (
GCSWEEPMAX
 * 
GCSWEEPCOST
);

1039 
g
->
gc°©e
 = 
√xt°©e
;

1040 
g
->
swìpgc
 = 
√xéi°
;

1042 
	}
}

1045 
lu_mem
 
	$sögÀ°ï
 (
lua_Sèã
 *
L
) {

1046 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1047 
g
->
gc°©e
) {

1048 
GCS∑u£
: {

1049 
g
->
GCmemåav
 = g->
°π
.
size
 * (
GCObje˘
*);

1050 
	`ª°¨tcﬁÀ˘i⁄
(
g
);

1051 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1052  
g
->
GCmemåav
;

1054 
GCS¥›ag©e
: {

1055 
g
->
GCmemåav
 = 0;

1056 
	`lua_as£π
(
g
->
gøy
);

1057 
	`¥›ag©em¨k
(
g
);

1058 i‡(
g
->
gøy
 =
NULL
)

1059 
g
->
gc°©e
 = 
GCS©omic
;

1060  
g
->
GCmemåav
;

1062 
GCS©omic
: {

1063 
lu_mem
 
w‹k
;

1064 
	`¥›ag©óŒ
(
g
);

1065 
w‹k
 = 
	`©omic
(
L
);

1066 
	`íãrswìp
(
L
);

1067 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g); ;

1068  
w‹k
;

1070 
GCSsw∑Œgc
: {

1071  
	`swìp°ï
(
L
, 
g
, 
GCSswpföobj
, &g->
föobj
);

1073 
GCSswpföobj
: {

1074  
	`swìp°ï
(
L
, 
g
, 
GCSsw±obe‚z
, &g->
tobe‚z
);

1076 
GCSsw±obe‚z
: {

1077  
	`swìp°ï
(
L
, 
g
, 
GCSsw≥nd
, 
NULL
);

1079 
GCSsw≥nd
: {

1080 
	`makewhôe
(
g
, g->
maöthªad
);

1081 
	`checkSizes
(
L
, 
g
);

1082 
g
->
gc°©e
 = 
GCSˇŒfö
;

1085 
GCSˇŒfö
: {

1086 i‡(
g
->
tobe‚z
 && g->
gcköd
 !
KGC_EMERGENCY
) {

1087 
n
 = 
	`ru«„wföÆizîs
(
L
);

1088  (
n
 * 
GCFINALIZECOST
);

1091 
g
->
gc°©e
 = 
GCS∑u£
;

1095 : 
	`lua_as£π
(0);  0;

1097 
	}
}

1104 
	$luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
) {

1105 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1106 !
	`ã°bô
(
°©esmask
, 
g
->
gc°©e
))

1107 
	`sögÀ°ï
(
L
);

1108 
	}
}

1115 
l_mem
 
	$gëdebt
 (
globÆ_Sèã
 *
g
) {

1116 
l_mem
 
debt
 = 
g
->
GCdebt
;

1117 
°ïmul
 = 
g
->
gc°ïmul
;

1118 i‡(
debt
 <= 0)  0;

1120 
debt
 = (debà/ 
STEPMULADJ
) + 1;

1121 
debt
 = (debà< 
MAX_LMEM
 / 
°ïmul
) ? debt * stepmul : MAX_LMEM;

1122  
debt
;

1124 
	}
}

1129 
	$luaC_°ï
 (
lua_Sèã
 *
L
) {

1130 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1131 
l_mem
 
debt
 = 
	`gëdebt
(
g
);

1132 i‡(!
g
->
g¸u¬ög
) {

1133 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
 * 10);

1137 
lu_mem
 
w‹k
 = 
	`sögÀ°ï
(
L
);

1138 
debt
 -
w‹k
;

1139 } 
debt
 > -
GCSTEPSIZE
 && 
g
->
gc°©e
 !
GCS∑u£
);

1140 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1141 
	`£çau£
(
g
);

1143 
debt
 = (debà/ 
g
->
gc°ïmul
Ë* 
STEPMULADJ
;

1144 
	`luaE_£tdebt
(
g
, 
debt
);

1145 
	`ru«„wföÆizîs
(
L
);

1147 
	}
}

1159 
	$luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
) {

1160 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1161 
	`lua_as£π
(
g
->
gcköd
 =
KGC_NORMAL
);

1162 i‡(
i£mîgícy
Ë
g
->
gcköd
 = 
KGC_EMERGENCY
;

1163 i‡(
	`kìpöv¨ü¡
(
g
)) {

1164 
	`íãrswìp
(
L
);

1167 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1168 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCS∑u£
));

1169 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCSˇŒfö
));

1171 
	`lua_as£π
(
g
->
GCe°im©e
 =
	`gëtŸÆbyãs
(g));

1172 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1173 
g
->
gcköd
 = 
KGC_NORMAL
;

1174 
	`£çau£
(
g
);

1175 
	}
}

	@lgc.h

7 #i‚de‡
lgc_h


8 
	#lgc_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

30 #i‡!
deföed
(
GCSTEPSIZE
)

32 
	#GCSTEPSIZE
 (
	`ˇ°_öt
(100 * (
TSåög
)))

	)

39 
	#GCS¥›ag©e
 0

	)

40 
	#GCS©omic
 1

	)

41 
	#GCSsw∑Œgc
 2

	)

42 
	#GCSswpföobj
 3

	)

43 
	#GCSsw±obe‚z
 4

	)

44 
	#GCSsw≥nd
 5

	)

45 
	#GCSˇŒfö
 6

	)

46 
	#GCS∑u£
 7

	)

49 
	#isswìµha£
(
g
) \

50 (
GCSsw∑Œgc
 <(
g
)->
gc°©e
 && (g)->gc°©ê<
GCSsw≥nd
)

	)

61 
	#kìpöv¨ü¡
(
g
Ë((g)->
gc°©e
 <
GCS©omic
)

	)

67 
	#ª£tbôs
(
x
,
m
Ë((xË&
	`ˇ°
(
lu_byã
, ~(m)))

	)

68 
	#£tbôs
(
x
,
m
Ë((xË|(m))

	)

69 
	#ã°bôs
(
x
,
m
Ë((xË& (m))

	)

70 
	#bômask
(
b
Ë(1<<(b))

	)

71 
	#bô2mask
(
b1
,
b2
Ë(
	`bômask
(b1Ë| bômask(b2))

	)

72 
	#l_£tbô
(
x
,
b
Ë
	`£tbôs
(x, 
	`bômask
(b))

	)

73 
	#ª£tbô
(
x
,
b
Ë
	`ª£tbôs
(x, 
	`bômask
(b))

	)

74 
	#ã°bô
(
x
,
b
Ë
	`ã°bôs
(x, 
	`bômask
(b))

	)

78 
	#WHITE0BIT
 0

	)

79 
	#WHITE1BIT
 1

	)

80 
	#BLACKBIT
 2

	)

81 
	#FINALIZEDBIT
 3

	)

84 
	#WHITEBITS
 
	`bô2mask
(
WHITE0BIT
, 
WHITE1BIT
)

	)

87 
	#iswhôe
(
x
Ë
	`ã°bôs
((x)->
m¨ked
, 
WHITEBITS
)

	)

88 
	#isbœck
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
BLACKBIT
)

	)

89 
	#isgøy
(
x
) \

90 (!
	`ã°bôs
((
x
)->
m¨ked
, 
WHITEBITS
 | 
	`bômask
(
BLACKBIT
)))

	)

92 
	#toföÆize
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
FINALIZEDBIT
)

	)

94 
	#Ÿhîwhôe
(
g
Ë((g)->
cuºítwhôe
 ^ 
WHITEBITS
)

	)

95 
	#isdódm
(
ow
,
m
Ë(!(((mË^ 
WHITEBITS
Ë& (ow)))

	)

96 
	#isdód
(
g
,
v
Ë
	`isdódm
(
	`Ÿhîwhôe
(g), (v)->
m¨ked
)

	)

98 
	#ch™gewhôe
(
x
Ë((x)->
m¨ked
 ^
WHITEBITS
)

	)

99 
	#gøy2bœck
(
x
Ë
	`l_£tbô
((x)->
m¨ked
, 
BLACKBIT
)

	)

101 
	#luaC_whôe
(
g
Ë
	`ˇ°
(
lu_byã
, (g)->
cuºítwhôe
 & 
WHITEBITS
)

	)

110 
	#luaC_c⁄dGC
(
L
,
¥e
,
pos
) \

111 { i‡(
	`G
(
L
)->
GCdebt
 > 0Ë{ 
¥e
; 
	`luaC_°ï
(L); 
pos
;}; \

112 
	`c⁄dch™gemem
(
L
,
¥e
,
pos
); }

	)

115 
	#luaC_checkGC
(
L
Ë
	`luaC_c⁄dGC
(L,()0,()0)

	)

118 
	#luaC_b¨rõr
(
L
,
p
,
v
) ( \

119 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

120 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),
	`gcvÆue
(
v
)Ë: 
	`ˇ°_void
(0))

	)

122 
	#luaC_b¨rõrback
(
L
,
p
,
v
) ( \

123 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

124 
	`luaC_b¨rõrback_
(
L
,
p
Ë: 
	`ˇ°_void
(0))

	)

126 
	#luaC_objb¨rõr
(
L
,
p
,
o
) ( \

127 (
	`isbœck
(
p
Ë&& 
	`iswhôe
(
o
)) ? \

128 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),obj2gco(
o
)Ë: 
	`ˇ°_void
(0))

	)

130 
	#luaC_upvÆb¨rõr
(
L
,
uv
) ( \

131 (
	`iscﬁÀ˘abÀ
((
uv
)->
v
Ë&& !
	`upis›í
(uv)) ? \

132 
	`luaC_upvÆb¨rõr_
(
L
,
uv
Ë: 
	`ˇ°_void
(0))

	)

134 
LUAI_FUNC
 
luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
);

135 
LUAI_FUNC
 
luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
);

136 
LUAI_FUNC
 
luaC_°ï
 (
lua_Sèã
 *
L
);

137 
LUAI_FUNC
 
luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
);

138 
LUAI_FUNC
 
luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
);

139 
LUAI_FUNC
 
GCObje˘
 *
luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
);

140 
LUAI_FUNC
 
luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
);

141 
LUAI_FUNC
 
luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
o
);

142 
LUAI_FUNC
 
luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

143 
LUAI_FUNC
 
luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
);

144 
LUAI_FUNC
 
luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

	@linit.c

8 
	#löô_c


	)

9 
	#LUA_LIB


	)

27 
	~"Õªfix.h
"

30 
	~<°ddef.h
>

32 
	~"lua.h
"

34 
	~"luÆib.h
"

35 
	~"œuxlib.h
"

42 c⁄° 
luaL_Reg
 
	glﬂdedlibs
[] = {

43 {"_G", 
lua›í_ba£
},

44 {
LUA_LOADLIBNAME
, 
lua›í_∑ckage
},

45 {
LUA_COLIBNAME
, 
lua›í_c‹outöe
},

46 {
LUA_TABLIBNAME
, 
lua›í_èbÀ
},

47 {
LUA_IOLIBNAME
, 
lua›í_io
},

48 {
LUA_OSLIBNAME
, 
lua›í_os
},

49 {
LUA_STRLIBNAME
, 
lua›í_°rög
},

50 {
LUA_MATHLIBNAME
, 
lua›í_m©h
},

51 {
LUA_UTF8LIBNAME
, 
lua›í_utf8
},

52 {
LUA_DBLIBNAME
, 
lua›í_debug
},

53 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

54 {
LUA_BITLIBNAME
, 
lua›í_bô32
},

56 {
NULL
, NULL}

60 
LUALIB_API
 
	$luaL_›ílibs
 (
lua_Sèã
 *
L
) {

61 c⁄° 
luaL_Reg
 *
lib
;

63 
lib
 = 
lﬂdedlibs
;Üib->
func
;Üib++) {

64 
	`luaL_ªquúef
(
L
, 
lib
->
«me
,Üib->
func
, 1);

65 
	`lua_p›
(
L
, 1);

67 
	}
}

	@liolib.c

7 
	#liﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<loˇÀ.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

32 #i‡!
deföed
(
l_checkmode
)

35 #i‡!
deföed
(
L_MODEEXT
)

36 
	#L_MODEEXT
 "b"

	)

40 
	$l_checkmode
 (c⁄° *
mode
) {

41  (*
mode
 !'\0' && 
	`°rchr
("rwa", *(mode++)Ë!
NULL
 &&

42 (*
mode
 != '+' || (++mode, 1)) &&

43 (
	`°r•n
(
mode
, 
L_MODEEXT
Ë=
	`°æí
(mode)));

44 
	}
}

55 #i‡!
deföed
(
l_p›í
)

57 #i‡
deföed
(
LUA_USE_POSIX
)

59 
	#l_p›í
(
L
,
c
,
m
Ë(
	`fÊush
(
NULL
), 
	`p›í
(c,m))

	)

60 
	#l_p˛o£
(
L
,
fûe
Ë(
	`p˛o£
(fûe))

	)

62 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

64 
	#l_p›í
(
L
,
c
,
m
Ë(
	`_p›í
(c,m))

	)

65 
	#l_p˛o£
(
L
,
fûe
Ë(
	`_p˛o£
(fûe))

	)

70 
	#l_p›í
(
L
,
c
,
m
) \

71 (()(()
c
, 
m
), \

72 
	`luaL_îr‹
(
L
, "'popen'Çot supported"), \

73 (
FILE
*)0)

	)

74 
	#l_p˛o£
(
L
,
fûe
Ë(()L, ()fûe, -1)

	)

83 #i‡!
deföed
(
l_gëc
)

85 #i‡
deföed
(
LUA_USE_POSIX
)

86 
	#l_gëc
(
f
Ë
	`gëc_u∆ocked
(f)

	)

87 
	#l_lockfûe
(
f
Ë
	`Êockfûe
(f)

	)

88 
	#l_u∆ockfûe
(
f
Ë
	`fu∆ockfûe
(f)

	)

90 
	#l_gëc
(
f
Ë
	`gëc
(f)

	)

91 
	#l_lockfûe
(
f
Ë(()0)

	)

92 
	#l_u∆ockfûe
(
f
Ë(()0)

	)

104 #i‡!
deföed
(
l_f£ek
)

106 #i‡
deföed
(
LUA_USE_POSIX
)

108 
	~<sys/ty≥s.h
>

110 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£eko
(f,o,w)

	)

111 
	#l_·ñl
(
f
Ë
	`·ñlo
(f)

	)

112 
	#l_£eknum
 
off_t


	)

114 #ñi‡
deföed
(
LUA_USE_WINDOWS
Ë&& !deföed(
_CRTIMP_TYPEINFO
) \

115 && 
deföed
(
_MSC_VER
Ë&& (
	g_MSC_VER
 >= 1400)

118 
	#l_f£ek
(
f
,
o
,
w
Ë
	`_f£eki64
(f,o,w)

	)

119 
	#l_·ñl
(
f
Ë
	`_·ñli64
(f)

	)

120 
	#l_£eknum
 
__öt64


	)

125 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£ek
(f,o,w)

	)

126 
	#l_·ñl
(
f
Ë
	`·ñl
(f)

	)

127 
	#l_£eknum
 

	)

136 
	#IO_PREFIX
 "_IO_"

	)

137 
	#IOPREF_LEN
 ((
IO_PREFIX
)/(Ë- 1)

	)

138 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

139 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

142 
luaL_Såóm
 
	tLSåóm
;

145 
	#tﬁ°ªam
(
L
Ë((
LSåóm
 *)
	`luaL_checkud©a
(L, 1, 
LUA_FILEHANDLE
))

	)

147 
	#is˛o£d
(
p
Ë(’)->
˛o£f
 =
NULL
)

	)

150 
	$io_ty≥
 (
lua_Sèã
 *
L
) {

151 
LSåóm
 *
p
;

152 
	`luaL_check™y
(
L
, 1);

153 
p
 = (
LSåóm
 *)
	`luaL_ã°ud©a
(
L
, 1, 
LUA_FILEHANDLE
);

154 i‡(
p
 =
NULL
)

155 
	`lua_pushnû
(
L
);

156 i‡(
	`is˛o£d
(
p
))

157 
	`lua_pushlôîÆ
(
L
, "closed file");

159 
	`lua_pushlôîÆ
(
L
, "file");

161 
	}
}

164 
	$f_to°rög
 (
lua_Sèã
 *
L
) {

165 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

166 i‡(
	`is˛o£d
(
p
))

167 
	`lua_pushlôîÆ
(
L
, "file (closed)");

169 
	`lua_pushf°rög
(
L
, "fûê(%p)", 
p
->
f
);

171 
	}
}

174 
FILE
 *
	$tofûe
 (
lua_Sèã
 *
L
) {

175 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

176 i‡(
	`is˛o£d
(
p
))

177 
	`luaL_îr‹
(
L
, "attemptÅo useá closed file");

178 
	`lua_as£π
(
p
->
f
);

179  
p
->
f
;

180 
	}
}

188 
LSåóm
 *
	$√w¥efûe
 (
lua_Sèã
 *
L
) {

189 
LSåóm
 *
p
 = (LSåóm *)
	`lua_√wu£rd©a
(
L
, (LStream));

190 
p
->
˛o£f
 = 
NULL
;

191 
	`luaL_£tmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

192  
p
;

193 
	}
}

201 
	$aux_˛o£
 (
lua_Sèã
 *
L
) {

202 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

203 vﬁ©ûê
lua_CFun˘i⁄
 
cf
 = 
p
->
˛o£f
;

204 
p
->
˛o£f
 = 
NULL
;

205  (*
cf
)(
L
);

206 
	}
}

209 
	$f_˛o£
 (
lua_Sèã
 *
L
) {

210 
	`tofûe
(
L
);

211  
	`aux_˛o£
(
L
);

212 
	}
}

215 
	$io_˛o£
 (
lua_Sèã
 *
L
) {

216 i‡(
	`lua_i¢⁄e
(
L
, 1))

217 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_OUTPUT
);

218  
	`f_˛o£
(
L
);

219 
	}
}

222 
	$f_gc
 (
lua_Sèã
 *
L
) {

223 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

224 i‡(!
	`is˛o£d
(
p
Ë&&Ö->
f
 !
NULL
)

225 
	`aux_˛o£
(
L
);

227 
	}
}

233 
	$io_f˛o£
 (
lua_Sèã
 *
L
) {

234 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

235 
ªs
 = 
	`f˛o£
(
p
->
f
);

236  
	`luaL_fûîesu…
(
L
, (
ªs
 =0), 
NULL
);

237 
	}
}

240 
LSåóm
 *
	$√wfûe
 (
lua_Sèã
 *
L
) {

241 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

242 
p
->
f
 = 
NULL
;

243 
p
->
˛o£f
 = &
io_f˛o£
;

244  
p
;

245 
	}
}

248 
	$›ícheck
 (
lua_Sèã
 *
L
, c⁄° *
‚ame
, c⁄° *
mode
) {

249 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

250 
p
->
f
 = 
	`f›í
(
‚ame
, 
mode
);

251 i‡(
p
->
f
 =
NULL
)

252 
	`luaL_îr‹
(
L
, "ˇ¬Ÿ o≥¿fûê'%s' (%s)", 
‚ame
, 
	`°ªº‹
(
î∫o
));

253 
	}
}

256 
	$io_›í
 (
lua_Sèã
 *
L
) {

257 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

258 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

259 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

260 c⁄° *
md
 = 
mode
;

261 
	`luaL_¨gcheck
(
L
, 
	`l_checkmode
(
md
), 2, "invalid mode");

262 
p
->
f
 = 
	`f›í
(
fûíame
, 
mode
);

263  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

264 
	}
}

270 
	$io_p˛o£
 (
lua_Sèã
 *
L
) {

271 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

272  
	`luaL_exe¸esu…
(
L
, 
	`l_p˛o£
(L, 
p
->
f
));

273 
	}
}

276 
	$io_p›í
 (
lua_Sèã
 *
L
) {

277 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

278 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

279 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

280 
p
->
f
 = 
	`l_p›í
(
L
, 
fûíame
, 
mode
);

281 
p
->
˛o£f
 = &
io_p˛o£
;

282  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

283 
	}
}

286 
	$io_tmpfûe
 (
lua_Sèã
 *
L
) {

287 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

288 
p
->
f
 = 
	`tmpfûe
();

289  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, NULL) : 1;

290 
	}
}

293 
FILE
 *
	$gëiofûe
 (
lua_Sèã
 *
L
, c⁄° *
födex
) {

294 
LSåóm
 *
p
;

295 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
födex
);

296 
p
 = (
LSåóm
 *)
	`lua_tou£rd©a
(
L
, -1);

297 i‡(
	`is˛o£d
(
p
))

298 
	`luaL_îr‹
(
L
, "°™d¨d %†fûêi†˛o£d", 
födex
 + 
IOPREF_LEN
);

299  
p
->
f
;

300 
	}
}

303 
	$g_iofûe
 (
lua_Sèã
 *
L
, c⁄° *
f
, c⁄° *
mode
) {

304 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

305 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 1);

306 i‡(
fûíame
)

307 
	`›ícheck
(
L
, 
fûíame
, 
mode
);

309 
	`tofûe
(
L
);

310 
	`lua_pushvÆue
(
L
, 1);

312 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

315 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

317 
	}
}

320 
	$io_öput
 (
lua_Sèã
 *
L
) {

321  
	`g_iofûe
(
L
, 
IO_INPUT
, "r");

322 
	}
}

325 
	$io_ouçut
 (
lua_Sèã
 *
L
) {

326  
	`g_iofûe
(
L
, 
IO_OUTPUT
, "w");

327 
	}
}

330 
io_ªadlöe
 (
lua_Sèã
 *
L
);

337 
	#MAXARGLINE
 250

	)

339 
	$aux_löes
 (
lua_Sèã
 *
L
, 
to˛o£
) {

340 
n
 = 
	`lua_gët›
(
L
) - 1;

341 
	`luaL_¨gcheck
(
L
, 
n
 <
MAXARGLINE
, MAXARGLINE + 2, "too manyárguments");

342 
	`lua_pushöãgî
(
L
, 
n
);

343 
	`lua_pushboﬁón
(
L
, 
to˛o£
);

344 
	`lua_rŸ©e
(
L
, 2, 2);

345 
	`lua_pushc˛osuª
(
L
, 
io_ªadlöe
, 3 + 
n
);

346 
	}
}

349 
	$f_löes
 (
lua_Sèã
 *
L
) {

350 
	`tofûe
(
L
);

351 
	`aux_löes
(
L
, 0);

353 
	}
}

356 
	$io_löes
 (
lua_Sèã
 *
L
) {

357 
to˛o£
;

358 i‡(
	`lua_i¢⁄e
(
L
, 1)Ë
	`lua_pushnû
(L);

359 i‡(
	`lua_i¢û
(
L
, 1)) {

360 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_INPUT
);

361 
	`lua_ª∂a˚
(
L
, 1);

362 
	`tofûe
(
L
);

363 
to˛o£
 = 0;

366 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

367 
	`›ícheck
(
L
, 
fûíame
, "r");

368 
	`lua_ª∂a˚
(
L
, 1);

369 
to˛o£
 = 1;

371 
	`aux_löes
(
L
, 
to˛o£
);

373 
	}
}

384 #i‡!
deföed
 (
L_MAXLENNUM
)

385 
	#L_MAXLENNUM
 200

	)

391 
FILE
 *
	mf
;

392 
	mc
;

393 
	mn
;

394 
	mbuff
[
L_MAXLENNUM
 + 1];

395 } 
	tRN
;

401 
	$√xtc
 (
RN
 *
∫
) {

402 i‡(
∫
->
n
 >
L_MAXLENNUM
) {

403 
∫
->
buff
[0] = '\0';

407 
∫
->
buff
[∫->
n
++] =Ñn->
c
;

408 
∫
->
c
 = 
	`l_gëc
‘n->
f
);

411 
	}
}

417 
	$ã°2
 (
RN
 *
∫
, c⁄° *
£t
) {

418 i‡(
∫
->
c
 =
£t
[0] ||Ñn->c == set[1])

419  
	`√xtc
(
∫
);

421 
	}
}

427 
	$ªaddigôs
 (
RN
 *
∫
, 
hex
) {

428 
cou¡
 = 0;

429 (
hex
 ? 
	`isxdigô
(
∫
->
c
Ë: 
	`isdigô
‘n->c)Ë&& 
	`√xtc
(rn))

430 
cou¡
++;

431  
cou¡
;

432 
	}
}

440 
	$ªad_numbî
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

441 
RN
 
∫
;

442 
cou¡
 = 0;

443 
hex
 = 0;

444 
de˝
[2];

445 
∫
.
f
 = f;Ñn.
n
 = 0;

446 
de˝
[0] = 
	`lua_gëloˇÀde˝oöt
();

447 
de˝
[1] = '.';

448 
	`l_lockfûe
(
∫
.
f
);

449 dÿ{ 
∫
.
c
 = 
	`l_gëc
‘n.
f
); } 
	`is•a˚
(rn.c));

450 
	`ã°2
(&
∫
, "-+");

451 i‡(
	`ã°2
(&
∫
, "00")) {

452 i‡(
	`ã°2
(&
∫
, "xX")Ë
hex
 = 1;

453 
cou¡
 = 1;

455 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

456 i‡(
	`ã°2
(&
∫
, 
de˝
))

457 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

458 i‡(
cou¡
 > 0 && 
	`ã°2
(&
∫
, (
hex
 ? "pP" : "eE"))) {

459 
	`ã°2
(&
∫
, "-+");

460 
	`ªaddigôs
(&
∫
, 0);

462 
	`ungëc
(
∫
.
c
,Ñn.
f
);

463 
	`l_u∆ockfûe
(
∫
.
f
);

464 
∫
.
buff
[∫.
n
] = '\0';

465 i‡(
	`lua_°rögt⁄umbî
(
L
, 
∫
.
buff
))

468 
	`lua_pushnû
(
L
);

471 
	}
}

474 
	$ã°_eof
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

475 
c
 = 
	`gëc
(
f
);

476 
	`ungëc
(
c
, 
f
);

477 
	`lua_pushlôîÆ
(
L
, "");

478  (
c
 !
EOF
);

479 
	}
}

482 
	$ªad_löe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
ch›
) {

483 
luaL_Buf„r
 
b
;

484 
c
 = '\0';

485 
	`luaL_bufföô
(
L
, &
b
);

486 
c
 !
EOF
 && c != '\n') {

487 *
buff
 = 
	`luaL_¥ïbuf„r
(&
b
);

488 
i
 = 0;

489 
	`l_lockfûe
(
f
);

490 
i
 < 
LUAL_BUFFERSIZE
 && (
c
 = 
	`l_gëc
(
f
)Ë!
EOF
 && c != '\n')

491 
buff
[
i
++] = 
c
;

492 
	`l_u∆ockfûe
(
f
);

493 
	`luaL_addsize
(&
b
, 
i
);

495 i‡(!
ch›
 && 
c
 == '\n')

496 
	`luaL_addch¨
(&
b
, 
c
);

497 
	`luaL_pushªsu…
(&
b
);

499  (
c
 ='\n' || 
	`lua_øwÀn
(
L
, -1) > 0);

500 
	}
}

503 
	$ªad_Æl
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

504 
size_t
 
ƒ
;

505 
luaL_Buf„r
 
b
;

506 
	`luaL_bufföô
(
L
, &
b
);

508 *
p
 = 
	`luaL_¥ïbuf„r
(&
b
);

509 
ƒ
 = 
	`‰ód
(
p
, (), 
LUAL_BUFFERSIZE
, 
f
);

510 
	`luaL_addsize
(&
b
, 
ƒ
);

511 } 
ƒ
 =
LUAL_BUFFERSIZE
);

512 
	`luaL_pushªsu…
(&
b
);

513 
	}
}

516 
	$ªad_ch¨s
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
size_t
 
n
) {

517 
size_t
 
ƒ
;

518 *
p
;

519 
luaL_Buf„r
 
b
;

520 
	`luaL_bufföô
(
L
, &
b
);

521 
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
n
);

522 
ƒ
 = 
	`‰ód
(
p
, (), 
n
, 
f
);

523 
	`luaL_addsize
(&
b
, 
ƒ
);

524 
	`luaL_pushªsu…
(&
b
);

525  (
ƒ
 > 0);

526 
	}
}

529 
	$g_ªad
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
fú°
) {

530 
«rgs
 = 
	`lua_gët›
(
L
) - 1;

531 
suc˚ss
;

532 
n
;

533 
	`˛óªº
(
f
);

534 i‡(
«rgs
 == 0) {

535 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

536 
n
 = 
fú°
+1;

539 
	`luaL_check°ack
(
L
, 
«rgs
+
LUA_MINSTACK
, "too manyárguments");

540 
suc˚ss
 = 1;

541 
n
 = 
fú°
; 
«rgs
-- && 
suc˚ss
;Ç++) {

542 i‡(
	`lua_ty≥
(
L
, 
n
Ë=
LUA_TNUMBER
) {

543 
size_t
 
l
 = (size_t)
	`luaL_checköãgî
(
L
, 
n
);

544 
suc˚ss
 = (
l
 =0Ë? 
	`ã°_eof
(
L
, 
f
Ë: 
	`ªad_ch¨s
(L, f,Ü);

547 c⁄° *
p
 = 
	`luaL_check°rög
(
L
, 
n
);

548 i‡(*
p
 == '*')Ö++;

549 *
p
) {

551 
suc˚ss
 = 
	`ªad_numbî
(
L
, 
f
);

554 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

557 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 0);

560 
	`ªad_Æl
(
L
, 
f
);

561 
suc˚ss
 = 1;

564  
	`luaL_¨gîr‹
(
L
, 
n
, "invalid format");

569 i‡(
	`„º‹
(
f
))

570  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

571 i‡(!
suc˚ss
) {

572 
	`lua_p›
(
L
, 1);

573 
	`lua_pushnû
(
L
);

575  
n
 - 
fú°
;

576 
	}
}

579 
	$io_ªad
 (
lua_Sèã
 *
L
) {

580  
	`g_ªad
(
L
, 
	`gëiofûe
(L, 
IO_INPUT
), 1);

581 
	}
}

584 
	$f_ªad
 (
lua_Sèã
 *
L
) {

585  
	`g_ªad
(
L
, 
	`tofûe
(L), 2);

586 
	}
}

589 
	$io_ªadlöe
 (
lua_Sèã
 *
L
) {

590 
LSåóm
 *
p
 = (LSåóm *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(1));

591 
i
;

592 
n
 = ()
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(2));

593 i‡(
	`is˛o£d
(
p
))

594  
	`luaL_îr‹
(
L
, "file isálready closed");

595 
	`lua_£â›
(
L
 , 1);

596 
	`luaL_check°ack
(
L
, 
n
, "too manyárguments");

597 
i
 = 1; i <
n
; i++)

598 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(3 + 
i
));

599 
n
 = 
	`g_ªad
(
L
, 
p
->
f
, 2);

600 
	`lua_as£π
(
n
 > 0);

601 i‡(
	`lua_toboﬁón
(
L
, -
n
))

602  
n
;

604 i‡(
n
 > 1) {

606  
	`luaL_îr‹
(
L
, "%s", 
	`lua_to°rög
(L, -
n
 + 1));

608 i‡(
	`lua_toboﬁón
(
L
, 
	`lua_upvÆueödex
(3))) {

609 
	`lua_£â›
(
L
, 0);

610 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(1));

611 
	`aux_˛o£
(
L
);

615 
	}
}

620 
	$g_wrôe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

621 
«rgs
 = 
	`lua_gët›
(
L
Ë- 
¨g
;

622 
°©us
 = 1;

623 ; 
«rgs
--; 
¨g
++) {

624 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNUMBER
) {

626 
Àn
 = 
	`lua_isöãgî
(
L
, 
¨g
)

627 ? 
	`Ârötf
(
f
, 
LUA_INTEGER_FMT
,

628 (
LUAI_UACINT
)
	`lua_toöãgî
(
L
, 
¨g
))

629 : 
	`Ârötf
(
f
, 
LUA_NUMBER_FMT
,

630 (
LUAI_UACNUMBER
)
	`lua_t⁄umbî
(
L
, 
¨g
));

631 
°©us
 = sètu†&& (
Àn
 > 0);

634 
size_t
 
l
;

635 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

636 
°©us
 = sètu†&& (
	`fwrôe
(
s
, (), 
l
, 
f
) ==Ü);

639 i‡(
°©us
)  1;

640  
	`luaL_fûîesu…
(
L
, 
°©us
, 
NULL
);

641 
	}
}

644 
	$io_wrôe
 (
lua_Sèã
 *
L
) {

645  
	`g_wrôe
(
L
, 
	`gëiofûe
(L, 
IO_OUTPUT
), 1);

646 
	}
}

649 
	$f_wrôe
 (
lua_Sèã
 *
L
) {

650 
FILE
 *
f
 = 
	`tofûe
(
L
);

651 
	`lua_pushvÆue
(
L
, 1);

652  
	`g_wrôe
(
L
, 
f
, 2);

653 
	}
}

656 
	$f_£ek
 (
lua_Sèã
 *
L
) {

657 c⁄° 
mode
[] = {
SEEK_SET
, 
SEEK_CUR
, 
SEEK_END
};

658 c⁄° *c⁄° 
modíames
[] = {"£t", "cur", "íd", 
NULL
};

659 
FILE
 *
f
 = 
	`tofûe
(
L
);

660 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "cur", 
modíames
);

661 
lua_I¡egî
 
p3
 = 
	`luaL_›töãgî
(
L
, 3, 0);

662 
l_£eknum
 
off£t
 = (l_£eknum)
p3
;

663 
	`luaL_¨gcheck
(
L
, (
lua_I¡egî
)
off£t
 =
p3
, 3,

665 
›
 = 
	`l_f£ek
(
f
, 
off£t
, 
mode
[op]);

666 i‡(
›
)

667  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

669 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
	`l_·ñl
(
f
));

672 
	}
}

675 
	$f_£tvbuf
 (
lua_Sèã
 *
L
) {

676 c⁄° 
mode
[] = {
_IONBF
, 
_IOFBF
, 
_IOLBF
};

677 c⁄° *c⁄° 
modíames
[] = {"no", "fuŒ", "löe", 
NULL
};

678 
FILE
 *
f
 = 
	`tofûe
(
L
);

679 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, 
NULL
, 
modíames
);

680 
lua_I¡egî
 
sz
 = 
	`luaL_›töãgî
(
L
, 3, 
LUAL_BUFFERSIZE
);

681 
ªs
 = 
	`£tvbuf
(
f
, 
NULL
, 
mode
[
›
], (
size_t
)
sz
);

682  
	`luaL_fûîesu…
(
L
, 
ªs
 =0, 
NULL
);

683 
	}
}

687 
	$io_Êush
 (
lua_Sèã
 *
L
) {

688  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`gëiofûe
(L, 
IO_OUTPUT
)Ë=0, 
NULL
);

689 
	}
}

692 
	$f_Êush
 (
lua_Sèã
 *
L
) {

693  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`tofûe
(L)Ë=0, 
NULL
);

694 
	}
}

700 c⁄° 
luaL_Reg
 
	giﬁib
[] = {

701 {"˛o£", 
io_˛o£
},

702 {"Êush", 
io_Êush
},

703 {"öput", 
io_öput
},

704 {"löes", 
io_löes
},

705 {"›í", 
io_›í
},

706 {"ouçut", 
io_ouçut
},

707 {"p›í", 
io_p›í
},

708 {"ªad", 
io_ªad
},

709 {"tmpfûe", 
io_tmpfûe
},

710 {"ty≥", 
io_ty≥
},

711 {"wrôe", 
io_wrôe
},

712 {
NULL
, NULL}

719 c⁄° 
luaL_Reg
 
	gÊib
[] = {

720 {"˛o£", 
f_˛o£
},

721 {"Êush", 
f_Êush
},

722 {"löes", 
f_löes
},

723 {"ªad", 
f_ªad
},

724 {"£ek", 
f_£ek
},

725 {"£tvbuf", 
f_£tvbuf
},

726 {"wrôe", 
f_wrôe
},

727 {"__gc", 
f_gc
},

728 {"__to°rög", 
f_to°rög
},

729 {
NULL
, NULL}

733 
	$¸óãmëa
 (
lua_Sèã
 *
L
) {

734 
	`luaL_√wmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

735 
	`lua_pushvÆue
(
L
, -1);

736 
	`lua_£tfõld
(
L
, -2, "__index");

737 
	`luaL_£tfuncs
(
L
, 
Êib
, 0);

738 
	`lua_p›
(
L
, 1);

739 
	}
}

745 
	$io_no˛o£
 (
lua_Sèã
 *
L
) {

746 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

747 
p
->
˛o£f
 = &
io_no˛o£
;

748 
	`lua_pushnû
(
L
);

749 
	`lua_pushlôîÆ
(
L
, "cannot close standard file");

751 
	}
}

754 
	$¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

755 c⁄° *
‚ame
) {

756 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

757 
p
->
f
 = f;

758 
p
->
˛o£f
 = &
io_no˛o£
;

759 i‡(
k
 !
NULL
) {

760 
	`lua_pushvÆue
(
L
, -1);

761 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
k
);

763 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

764 
	}
}

767 
LUAMOD_API
 
	$lua›í_io
 (
lua_Sèã
 *
L
) {

768 
	`luaL_√wlib
(
L
, 
iﬁib
);

769 
	`¸óãmëa
(
L
);

771 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

772 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

773 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

775 
	}
}

	@llex.c

7 
	#Œex_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"l˘y≥.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lobje˘.h
"

24 
	~"Õ¨£r.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"lzio.h
"

32 
	#√xt
(
ls
Ë÷s->
cuºít
 = 
	`zgëc
÷s->
z
))

	)

36 
	#cuºIsNewlöe
(
ls
Ë÷s->
cuºít
 ='\n' ||Üs->cuºíà='\r')

	)

40 c⁄° *c⁄° 
	gluaX_tokís
 [] = {

51 
	#ßve_™d_√xt
(
ls
Ë(
	`ßve
÷s,Üs->
cuºít
), 
	`√xt
÷s))

	)

54 
l_n‹ë
 
Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
);

57 
	$ßve
 (
LexSèã
 *
ls
, 
c
) {

58 
Mbuf„r
 *
b
 = 
ls
->
buff
;

59 i‡(
	`luaZ_bufÊí
(
b
Ë+ 1 > 
	`luaZ_sizebuf„r
(b)) {

60 
size_t
 
√wsize
;

61 i‡(
	`luaZ_sizebuf„r
(
b
Ë>
MAX_SIZE
/2)

62 
	`Àxîr‹
(
ls
, "lexicalÉlementÅooÜong", 0);

63 
√wsize
 = 
	`luaZ_sizebuf„r
(
b
) * 2;

64 
	`luaZ_ªsizebuf„r
(
ls
->
L
, 
b
, 
√wsize
);

66 
b
->
buf„r
[
	`luaZ_bufÊí
(b)++] = 
	`ˇ°
(, 
c
);

67 
	}
}

70 
	$luaX_öô
 (
lua_Sèã
 *
L
) {

71 
i
;

72 
TSåög
 *
e
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

73 
	`luaC_fix
(
L
, 
	`obj2gco
(
e
));

74 
i
=0; i<
NUM_RESERVED
; i++) {

75 
TSåög
 *
ts
 = 
	`luaS_√w
(
L
, 
luaX_tokís
[
i
]);

76 
	`luaC_fix
(
L
, 
	`obj2gco
(
ts
));

77 
ts
->
exåa
 = 
	`ˇ°_byã
(
i
+1);

79 
	}
}

82 c⁄° *
	$luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
) {

83 i‡(
tokí
 < 
FIRST_RESERVED
) {

84 
	`lua_as£π
(
tokí
 =
	`ˇ°_uch¨
(token));

85  
	`luaO_pushf°rög
(
ls
->
L
, "'%c'", 
tokí
);

88 c⁄° *
s
 = 
luaX_tokís
[
tokí
 - 
FIRST_RESERVED
];

89 i‡(
tokí
 < 
TK_EOS
)

90  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
s
);

92  
s
;

94 
	}
}

97 c⁄° *
	$txtTokí
 (
LexSèã
 *
ls
, 
tokí
) {

98 
tokí
) {

99 
TK_NAME
: 
TK_STRING
:

100 
TK_FLT
: 
TK_INT
:

101 
	`ßve
(
ls
, '\0');

102  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
	`luaZ_buf„r
÷s->
buff
));

104  
	`luaX_tokí2°r
(
ls
, 
tokí
);

106 
	}
}

109 
l_n‹ë
 
	$Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
) {

110 
msg
 = 
	`luaG_addöfo
(
ls
->
L
, msg,Üs->
sour˚
,Üs->
löíumbî
);

111 i‡(
tokí
)

112 
	`luaO_pushf°rög
(
ls
->
L
, "%†√¨ %s", 
msg
, 
	`txtTokí
÷s, 
tokí
));

113 
	`luaD_throw
(
ls
->
L
, 
LUA_ERRSYNTAX
);

114 
	}
}

117 
l_n‹ë
 
	$luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

118 
	`Àxîr‹
(
ls
, 
msg
,Üs->
t
.
tokí
);

119 
	}
}

127 
TSåög
 *
	$luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
) {

128 
lua_Sèã
 *
L
 = 
ls
->L;

129 
TVÆue
 *
o
;

130 
TSåög
 *
ts
 = 
	`luaS_√wl°r
(
L
, 
°r
, 
l
);

131 
	`£tsvÆue2s
(
L
, L->
t›
++, 
ts
);

132 
o
 = 
	`luaH_£t
(
L
, 
ls
->
h
, L->
t›
 - 1);

133 i‡(
	`âi¢û
(
o
)) {

136 
	`£tbvÆue
(
o
, 1);

137 
	`luaC_checkGC
(
L
);

140 
ts
 = 
	`tsvÆue
(
	`key‰omvÆ
(
o
));

142 
L
->
t›
--;

143  
ts
;

144 
	}
}

151 
	$ö˛öíumbî
 (
LexSèã
 *
ls
) {

152 
ﬁd
 = 
ls
->
cuºít
;

153 
	`lua_as£π
(
	`cuºIsNewlöe
(
ls
));

154 
	`√xt
(
ls
);

155 i‡(
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
ﬁd
)

156 
	`√xt
(
ls
);

157 i‡(++
ls
->
löíumbî
 >
MAX_INT
)

158 
	`Àxîr‹
(
ls
, "chunk hasÅoo manyÜines", 0);

159 
	}
}

162 
	$luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
, 
TSåög
 *
sour˚
,

163 
fú°ch¨
) {

164 
ls
->
t
.
tokí
 = 0;

165 
ls
->
L
 = L;

166 
ls
->
cuºít
 = 
fú°ch¨
;

167 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

168 
ls
->
z
 = z;

169 
ls
->
fs
 = 
NULL
;

170 
ls
->
löíumbî
 = 1;

171 
ls
->
œ°löe
 = 1;

172 
ls
->
sour˚
 = source;

173 
ls
->
ívn
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

174 
	`luaZ_ªsizebuf„r
(
ls
->
L
,Üs->
buff
, 
LUA_MINBUFFER
);

175 
	}
}

186 
	$check_√xt1
 (
LexSèã
 *
ls
, 
c
) {

187 i‡(
ls
->
cuºít
 =
c
) {

188 
	`√xt
(
ls
);

192 
	}
}

199 
	$check_√xt2
 (
LexSèã
 *
ls
, c⁄° *
£t
) {

200 
	`lua_as£π
(
£t
[2] == '\0');

201 i‡(
ls
->
cuºít
 =
£t
[0] ||Üs->current == set[1]) {

202 
	`ßve_™d_√xt
(
ls
);

206 
	}
}

214 
	$ªad_numîÆ
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

215 
TVÆue
 
obj
;

216 c⁄° *
expo
 = "Ee";

217 
fú°
 = 
ls
->
cuºít
;

218 
	`lua_as£π
(
	`lisdigô
(
ls
->
cuºít
));

219 
	`ßve_™d_√xt
(
ls
);

220 i‡(
fú°
 ='0' && 
	`check_√xt2
(
ls
, "xX"))

221 
expo
 = "Pp";

223 i‡(
	`check_√xt2
(
ls
, 
expo
))

224 
	`check_√xt2
(
ls
, "-+");

225 i‡(
	`lisxdigô
(
ls
->
cuºít
))

226 
	`ßve_™d_√xt
(
ls
);

227 i‡(
ls
->
cuºít
 == '.')

228 
	`ßve_™d_√xt
(
ls
);

231 
	`ßve
(
ls
, '\0');

232 i‡(
	`luaO_°r2num
(
	`luaZ_buf„r
(
ls
->
buff
), &
obj
) == 0)

233 
	`Àxîr‹
(
ls
, "mÆf‹medÇumbî", 
TK_FLT
);

234 i‡(
	`âisöãgî
(&
obj
)) {

235 
£möfo
->
i
 = 
	`ivÆue
(&
obj
);

236  
TK_INT
;

239 
	`lua_as£π
(
	`âisÊﬂt
(&
obj
));

240 
£möfo
->
r
 = 
	`ÊtvÆue
(&
obj
);

241  
TK_FLT
;

243 
	}
}

251 
	$skù_£p
 (
LexSèã
 *
ls
) {

252 
cou¡
 = 0;

253 
s
 = 
ls
->
cuºít
;

254 
	`lua_as£π
(
s
 == '[' || s == ']');

255 
	`ßve_™d_√xt
(
ls
);

256 
ls
->
cuºít
 == '=') {

257 
	`ßve_™d_√xt
(
ls
);

258 
cou¡
++;

260  (
ls
->
cuºít
 =
s
Ë? 
cou¡
 : (-count) - 1;

261 
	}
}

264 
	$ªad_l⁄g_°rög
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
, 
£p
) {

265 
löe
 = 
ls
->
löíumbî
;

266 
	`ßve_™d_√xt
(
ls
);

267 i‡(
	`cuºIsNewlöe
(
ls
))

268 
	`ö˛öíumbî
(
ls
);

270 
ls
->
cuºít
) {

271 
EOZ
: {

272 c⁄° *
wh©
 = (
£möfo
 ? "string" : "comment");

273 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

274 "unföishedÜ⁄g %†(°¨tögáàlöê%d)", 
wh©
, 
löe
);

275 
	`Àxîr‹
(
ls
, 
msg
, 
TK_EOS
);

279 i‡(
	`skù_£p
(
ls
Ë=
£p
) {

280 
	`ßve_™d_√xt
(
ls
);

281 
ídlo›
;

286 
	`ßve
(
ls
, '\n');

287 
	`ö˛öíumbî
(
ls
);

288 i‡(!
£möfo
Ë
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

292 i‡(
£möfo
Ë
	`ßve_™d_√xt
(
ls
);

293 
	`√xt
(
ls
);

296 } 
ídlo›
:

297 i‡(
£möfo
)

298 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
Ë+ (2 + 
£p
),

299 
	`luaZ_bufÊí
(
ls
->
buff
Ë- 2*(2 + 
£p
));

300 
	}
}

303 
	$esccheck
 (
LexSèã
 *
ls
, 
c
, c⁄° *
msg
) {

304 i‡(!
c
) {

305 i‡(
ls
->
cuºít
 !
EOZ
)

306 
	`ßve_™d_√xt
(
ls
);

307 
	`Àxîr‹
(
ls
, 
msg
, 
TK_STRING
);

309 
	}
}

312 
	$gëhexa
 (
LexSèã
 *
ls
) {

313 
	`ßve_™d_√xt
(
ls
);

314 
	`esccheck
 (
ls
, 
	`lisxdigô
÷s->
cuºít
), "hexadecimal digitÉxpected");

315  
	`luaO_hexavÆue
(
ls
->
cuºít
);

316 
	}
}

319 
	$ªadhex´sc
 (
LexSèã
 *
ls
) {

320 
r
 = 
	`gëhexa
(
ls
);

321 
r
 = (∏<< 4Ë+ 
	`gëhexa
(
ls
);

322 
	`luaZ_buf‰emove
(
ls
->
buff
, 2);

323  
r
;

324 
	}
}

327 
	$ªadutf8esc
 (
LexSèã
 *
ls
) {

328 
r
;

329 
i
 = 4;

330 
	`ßve_™d_√xt
(
ls
);

331 
	`esccheck
(
ls
,Üs->
cuºít
 == '{', "missing '{'");

332 
r
 = 
	`gëhexa
(
ls
);

333 (
	`ßve_™d_√xt
(
ls
), 
	`lisxdigô
÷s->
cuºít
))) {

334 
i
++;

335 
r
 = (∏<< 4Ë+ 
	`luaO_hexavÆue
(
ls
->
cuºít
);

336 
	`esccheck
(
ls
, 
r
 <= 0x10FFFF, "UTF-8 valueÅooÜarge");

338 
	`esccheck
(
ls
,Üs->
cuºít
 == '}', "missing '}'");

339 
	`√xt
(
ls
);

340 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

341  
r
;

342 
	}
}

345 
	$utf8esc
 (
LexSèã
 *
ls
) {

346 
buff
[
UTF8BUFFSZ
];

347 
n
 = 
	`luaO_utf8esc
(
buff
, 
	`ªadutf8esc
(
ls
));

348 ; 
n
 > 0;Ç--)

349 
	`ßve
(
ls
, 
buff
[
UTF8BUFFSZ
 - 
n
]);

350 
	}
}

353 
	$ªadde˚sc
 (
LexSèã
 *
ls
) {

354 
i
;

355 
r
 = 0;

356 
i
 = 0; i < 3 && 
	`lisdigô
(
ls
->
cuºít
); i++) {

357 
r
 = 10*∏+ 
ls
->
cuºít
 - '0';

358 
	`ßve_™d_√xt
(
ls
);

360 
	`esccheck
(
ls
, 
r
 <
UCHAR_MAX
, "decimalÉscapeÅooÜarge");

361 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

362  
r
;

363 
	}
}

366 
	$ªad_°rög
 (
LexSèã
 *
ls
, 
dñ
, 
SemInfo
 *
£möfo
) {

367 
	`ßve_™d_√xt
(
ls
);

368 
ls
->
cuºít
 !
dñ
) {

369 
ls
->
cuºít
) {

370 
EOZ
:

371 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_EOS
);

375 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_STRING
);

378 
c
;

379 
	`ßve_™d_√xt
(
ls
);

380 
ls
->
cuºít
) {

381 'a': 
c
 = '\a'; 
ªad_ßve
;

382 'b': 
c
 = '\b'; 
ªad_ßve
;

383 'f': 
c
 = '\f'; 
ªad_ßve
;

384 'n': 
c
 = '\n'; 
ªad_ßve
;

385 'r': 
c
 = '\r'; 
ªad_ßve
;

386 't': 
c
 = '\t'; 
ªad_ßve
;

387 'v': 
c
 = '\v'; 
ªad_ßve
;

388 'x': 
c
 = 
	`ªadhex´sc
(
ls
); 
ªad_ßve
;

389 'u': 
	`utf8esc
(
ls
); 
no_ßve
;

391 
	`ö˛öíumbî
(
ls
); 
c
 = '\n'; 
⁄ly_ßve
;

393 
c
 = 
ls
->
cuºít
; 
ªad_ßve
;

394 
EOZ
: 
no_ßve
;

396 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

397 
	`√xt
(
ls
);

398 
	`lis•a˚
(
ls
->
cuºít
)) {

399 i‡(
	`cuºIsNewlöe
(
ls
)Ë
	`ö˛öíumbî
(ls);

400 
	`√xt
(
ls
);

402 
no_ßve
;

405 
	`esccheck
(
ls
, 
	`lisdigô
÷s->
cuºít
), "invalidÉscape sequence");

406 
c
 = 
	`ªadde˚sc
(
ls
);

407 
⁄ly_ßve
;

410 
ªad_ßve
:

411 
	`√xt
(
ls
);

413 
⁄ly_ßve
:

414 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

415 
	`ßve
(
ls
, 
c
);

417 
no_ßve
: ;

420 
	`ßve_™d_√xt
(
ls
);

423 
	`ßve_™d_√xt
(
ls
);

424 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
) + 1,

425 
	`luaZ_bufÊí
(
ls
->
buff
) - 2);

426 
	}
}

429 
	$Œex
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

430 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

432 
ls
->
cuºít
) {

434 
	`ö˛öíumbî
(
ls
);

438 
	`√xt
(
ls
);

442 
	`√xt
(
ls
);

443 i‡(
ls
->
cuºít
 != '-')  '-';

445 
	`√xt
(
ls
);

446 i‡(
ls
->
cuºít
 == '[') {

447 
£p
 = 
	`skù_£p
(
ls
);

448 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

449 i‡(
£p
 >= 0) {

450 
	`ªad_l⁄g_°rög
(
ls
, 
NULL
, 
£p
);

451 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

456 !
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
EOZ
)

457 
	`√xt
(
ls
);

461 
£p
 = 
	`skù_£p
(
ls
);

462 i‡(
£p
 >= 0) {

463 
	`ªad_l⁄g_°rög
(
ls
, 
£möfo
, 
£p
);

464  
TK_STRING
;

466 i‡(
£p
 != -1)

467 
	`Àxîr‹
(
ls
, "övÆidÜ⁄g såög dñimôî", 
TK_STRING
);

471 
	`√xt
(
ls
);

472 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_EQ
;

476 
	`√xt
(
ls
);

477 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_LE
;

478 i‡(
	`check_√xt1
(
ls
, '<')Ë 
TK_SHL
;

482 
	`√xt
(
ls
);

483 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_GE
;

484 i‡(
	`check_√xt1
(
ls
, '>')Ë 
TK_SHR
;

488 
	`√xt
(
ls
);

489 i‡(
	`check_√xt1
(
ls
, '/')Ë 
TK_IDIV
;

493 
	`√xt
(
ls
);

494 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_NE
;

498 
	`√xt
(
ls
);

499 i‡(
	`check_√xt1
(
ls
, ':')Ë 
TK_DBCOLON
;

503 
	`ªad_°rög
(
ls
,Üs->
cuºít
, 
£möfo
);

504  
TK_STRING
;

507 
	`ßve_™d_√xt
(
ls
);

508 i‡(
	`check_√xt1
(
ls
, '.')) {

509 i‡(
	`check_√xt1
(
ls
, '.'))

510  
TK_DOTS
;

511  
TK_CONCAT
;

513 i‡(!
	`lisdigô
(
ls
->
cuºít
))  '.';

514  
	`ªad_numîÆ
(
ls
, 
£möfo
);

518  
	`ªad_numîÆ
(
ls
, 
£möfo
);

520 
EOZ
: {

521  
TK_EOS
;

524 i‡(
	`li¶Æpha
(
ls
->
cuºít
)) {

525 
TSåög
 *
ts
;

527 
	`ßve_™d_√xt
(
ls
);

528 } 
	`li¶Ænum
(
ls
->
cuºít
));

529 
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
),

530 
	`luaZ_bufÊí
(
ls
->
buff
));

531 
£möfo
->
ts
 =Ås;

532 i‡(
	`i§e£rved
(
ts
))

533  
ts
->
exåa
 - 1 + 
FIRST_RESERVED
;

535  
TK_NAME
;

539 
c
 = 
ls
->
cuºít
;

540 
	`√xt
(
ls
);

541  
c
;

546 
	}
}

549 
	$luaX_√xt
 (
LexSèã
 *
ls
) {

550 
ls
->
œ°löe
 =Üs->
löíumbî
;

551 i‡(
ls
->
lookahód
.
tokí
 !
TK_EOS
) {

552 
ls
->
t
 =Üs->
lookahód
;

553 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

556 
ls
->
t
.
tokí
 = 
	`Œex
÷s, &ls->t.
£möfo
);

557 
	}
}

560 
	$luaX_lookahód
 (
LexSèã
 *
ls
) {

561 
	`lua_as£π
(
ls
->
lookahód
.
tokí
 =
TK_EOS
);

562 
ls
->
lookahód
.
tokí
 = 
	`Œex
÷s, &ls->lookahód.
£möfo
);

563  
ls
->
lookahód
.
tokí
;

564 
	}
}

	@llex.h

7 #i‚de‡
Œex_h


8 
	#Œex_h


	)

10 
	~"lobje˘.h
"

11 
	~"lzio.h
"

14 
	#FIRST_RESERVED
 257

	)

17 #i‡!
deföed
(
LUA_ENV
)

18 
	#LUA_ENV
 "_ENV"

	)

26 
	eRESERVED
 {

28 
	mTK_AND
 = 
FIRST_RESERVED
, 
	mTK_BREAK
,

29 
	mTK_DO
, 
	mTK_ELSE
, 
	mTK_ELSEIF
, 
	mTK_END
, 
	mTK_FALSE
, 
	mTK_FOR
, 
	mTK_FUNCTION
,

30 
	mTK_GOTO
, 
	mTK_IF
, 
	mTK_IN
, 
	mTK_LOCAL
, 
	mTK_NIL
, 
	mTK_NOT
, 
	mTK_OR
, 
	mTK_REPEAT
,

31 
	mTK_RETURN
, 
	mTK_THEN
, 
	mTK_TRUE
, 
	mTK_UNTIL
, 
	mTK_WHILE
,

33 
	mTK_IDIV
, 
	mTK_CONCAT
, 
	mTK_DOTS
, 
	mTK_EQ
, 
	mTK_GE
, 
	mTK_LE
, 
	mTK_NE
,

34 
	mTK_SHL
, 
	mTK_SHR
,

35 
	mTK_DBCOLON
, 
	mTK_EOS
,

36 
	mTK_FLT
, 
	mTK_INT
, 
	mTK_NAME
, 
	mTK_STRING


40 
	#NUM_RESERVED
 (
	`ˇ°
(, 
TK_WHILE
-
FIRST_RESERVED
+1))

	)

44 
lua_Numbî
 
	mr
;

45 
lua_I¡egî
 
	mi
;

46 
TSåög
 *
	mts
;

47 } 
	tSemInfo
;

50 
	sTokí
 {

51 
	mtokí
;

52 
SemInfo
 
	m£möfo
;

53 } 
	tTokí
;

58 
	sLexSèã
 {

59 
	mcuºít
;

60 
	mlöíumbî
;

61 
	mœ°löe
;

62 
Tokí
 
	mt
;

63 
Tokí
 
	mlookahód
;

64 
FuncSèã
 *
	mfs
;

65 
lua_Sèã
 *
	mL
;

66 
ZIO
 *
	mz
;

67 
Mbuf„r
 *
	mbuff
;

68 
TabÀ
 *
	mh
;

69 
Dynd©a
 *
	mdyd
;

70 
TSåög
 *
	msour˚
;

71 
TSåög
 *
	mívn
;

72 } 
	tLexSèã
;

75 
LUAI_FUNC
 
luaX_öô
 (
lua_Sèã
 *
L
);

76 
LUAI_FUNC
 
luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
,

77 
TSåög
 *
sour˚
, 
fú°ch¨
);

78 
LUAI_FUNC
 
TSåög
 *
luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
);

79 
LUAI_FUNC
 
luaX_√xt
 (
LexSèã
 *
ls
);

80 
LUAI_FUNC
 
luaX_lookahód
 (
LexSèã
 *
ls
);

81 
LUAI_FUNC
 
l_n‹ë
 
luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
s
);

82 
LUAI_FUNC
 c⁄° *
luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
);

	@llimits.h

7 #i‚de‡
Œimôs_h


8 
	#Œimôs_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

15 
	~"lua.h
"

22 #i‡
deföed
(
LUAI_MEM
)

23 
LUAI_UMEM
 
	tlu_mem
;

24 
LUAI_MEM
 
	tl_mem
;

25 #ñi‡
LUAI_BITSINT
 >= 32

26 
size_t
 
	tlu_mem
;

27 
±rdiff_t
 
	tl_mem
;

29 
	tlu_mem
;

30 
	tl_mem
;

35 
	tlu_byã
;

39 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

42 
	#MAX_SIZE
 ((
size_t
Ë< (
lua_I¡egî
Ë? 
MAX_SIZET
 \

43 : (
size_t
)(
LUA_MAXINTEGER
))

	)

46 
	#MAX_LUMEM
 ((
lu_mem
)(~÷u_mem)0))

	)

48 
	#MAX_LMEM
 ((
l_mem
)(
MAX_LUMEM
 >> 1))

	)

51 
	#MAX_INT
 
INT_MAX


	)

59 
	#poöt2uöt
(
p
Ë(()((
size_t
)’Ë& 
UINT_MAX
))

	)

64 #i‡
deföed
(
LUAI_USER_ALIGNMENT_T
)

65 
LUAI_USER_ALIGNMENT_T
 
	tL_UmaxÆign
;

68 
lua_Numbî
 
	mn
;

69 
	mu
;

70 *
	ms
;

71 
lua_I¡egî
 
	mi
;

72 
	ml
;

73 } 
	tL_UmaxÆign
;

79 
LUAI_UACNUMBER
 
	tl_uacNumbî
;

80 
LUAI_UACINT
 
	tl_uacI¡
;

84 #i‡
deföed
(
lua_as£π
)

85 
	#check_exp
(
c
,
e
Ë(
	`lua_as£π
(c), (e))

	)

87 
	#lua_l⁄gas£π
(
c
Ë((cË? ()0 : 
	`lua_as£π
(0))

	)

89 
	#lua_as£π
(
c
Ë(()0)

	)

90 
	#check_exp
(
c
,
e
Ë”)

	)

91 
	#lua_l⁄gas£π
(
c
Ë(()0)

	)

97 #i‡!
deföed
(
luai_≠icheck
)

98 
	#luai_≠icheck
(
l
,
e
Ë
	`lua_as£π
”)

	)

101 
	#≠i_check
(
l
,
e
,
msg
Ë
	`luai_≠icheck
÷,”Ë&& msg)

	)

105 #i‡!
deföed
(
UNUSED
)

106 
	#UNUSED
(
x
Ë(()(x))

	)

111 
	#ˇ°
(
t
, 
exp
Ë(—)”xp))

	)

113 
	#ˇ°_void
(
i
Ë
	`ˇ°
(, (i))

	)

114 
	#ˇ°_byã
(
i
Ë
	`ˇ°
(
lu_byã
, (i))

	)

115 
	#ˇ°_num
(
i
Ë
	`ˇ°
(
lua_Numbî
, (i))

	)

116 
	#ˇ°_öt
(
i
Ë
	`ˇ°
(, (i))

	)

117 
	#ˇ°_uch¨
(
i
Ë
	`ˇ°
(, (i))

	)

121 #i‡!
deföed
(
l_ˇ°S2U
)

122 
	#l_ˇ°S2U
(
i
Ë((
lua_Unsig√d
)(i))

	)

130 #i‡!
deföed
(
l_ˇ°U2S
)

131 
	#l_ˇ°U2S
(
i
Ë((
lua_I¡egî
)(i))

	)

138 #i‡
deföed
(
__GNUC__
)

139 
	#l_n‹ë
 
	`__©åibuã__
((
n‹ëu∫
))

	)

140 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1200

141 
	#l_n‹ë
 
	`__de˛•ec
(
n‹ëu∫
)

	)

143 
	#l_n‹ë
 

	)

152 #i‡!
deföed
(
LUAI_MAXCCALLS
)

153 
	#LUAI_MAXCCALLS
 200

	)

162 #i‡
LUAI_BITSINT
 >= 32

163 
	tIn°ru˘i⁄
;

165 
	tIn°ru˘i⁄
;

176 #i‡!
deföed
(
LUAI_MAXSHORTLEN
)

177 
	#LUAI_MAXSHORTLEN
 40

	)

187 #i‡!
deföed
(
MINSTRTABSIZE
)

188 
	#MINSTRTABSIZE
 128

	)

197 #i‡!
deföed
(
STRCACHE_N
)

198 
	#STRCACHE_N
 53

	)

199 
	#STRCACHE_M
 2

	)

204 #i‡!
deföed
(
LUA_MINBUFFER
)

205 
	#LUA_MINBUFFER
 32

	)

213 #i‡!
deföed
(
lua_lock
)

214 
	#lua_lock
(
L
Ë((Ë0)

	)

215 
	#lua_u∆ock
(
L
Ë((Ë0)

	)

222 #i‡!
deföed
(
luai_thªadyõld
)

223 
	#luai_thªadyõld
(
L
Ë{
	`lua_u∆ock
(L); 
	`lua_lock
(L);}

	)

232 #i‡!
deföed
(
luai_u£r°©e›í
)

233 
	#luai_u£r°©e›í
(
L
Ë(()L)

	)

236 #i‡!
deföed
(
luai_u£r°©e˛o£
)

237 
	#luai_u£r°©e˛o£
(
L
Ë(()L)

	)

240 #i‡!
deföed
(
luai_u£r°©ëhªad
)

241 
	#luai_u£r°©ëhªad
(
L
,
L1
Ë(()L)

	)

244 #i‡!
deföed
(
luai_u£r°©e‰ì
)

245 
	#luai_u£r°©e‰ì
(
L
,
L1
Ë(()L)

	)

248 #i‡!
deföed
(
luai_u£r°©îesume
)

249 
	#luai_u£r°©îesume
(
L
,
n
Ë(()L)

	)

252 #i‡!
deföed
(
luai_u£r°©eyõld
)

253 
	#luai_u£r°©eyõld
(
L
,
n
Ë(()L)

	)

263 #i‡!
deföed
(
luai_numidiv
)

264 
	#luai_numidiv
(
L
,
a
,
b
Ë(()L, 
	`l_Êo‹
(
	`luai_numdiv
(L,a,b)))

	)

268 #i‡!
deföed
(
luai_numdiv
)

269 
	#luai_numdiv
(
L
,
a
,
b
Ë(◊)/(b))

	)

279 #i‡!
deföed
(
luai_nummod
)

280 
	#luai_nummod
(
L
,
a
,
b
,
m
) \

281 { (
m
Ë
	`l_m©h›
(
fmod
)(
a
,
b
); i‡((m)*(bË< 0Ë(mË+(b); }

	)

285 #i‡!
deföed
(
luai_numpow
)

286 
	#luai_numpow
(
L
,
a
,
b
Ë(()L, 
	`l_m©h›
(
pow
)◊,b))

	)

290 #i‡!
deföed
(
luai_numadd
)

291 
	#luai_numadd
(
L
,
a
,
b
Ë(◊)+(b))

	)

292 
	#luai_numsub
(
L
,
a
,
b
Ë(◊)-(b))

	)

293 
	#luai_nummul
(
L
,
a
,
b
Ë(◊)*(b))

	)

294 
	#luai_numunm
(
L
,
a
Ë(-◊))

	)

295 
	#luai_numeq
(
a
,
b
Ë(◊)==(b))

	)

296 
	#luai_num…
(
a
,
b
Ë(◊)<(b))

	)

297 
	#luai_numÀ
(
a
,
b
Ë(◊)<=(b))

	)

298 
	#luai_numi¢™
(
a
Ë(!
	`luai_numeq
(◊), (a)))

	)

308 #i‡!
deföed
(
HARDSTACKTESTS
)

309 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
Ë(()0)

	)

312 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
) \

313 { 
sz_
 = (
L
)->
°acksize
; 
¥e
; 
	`luaD_ªÆloc°ack
((L), sz_); 
pos
; }

	)

316 #i‡!
deföed
(
HARDMEMTESTS
)

317 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
Ë(()0)

	)

319 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
) \

320 { i‡(
	`G
(
L
)->
g¸u¬ög
Ë{ 
¥e
; 
	`luaC_fuŒgc
(L, 0); 
pos
; } }

	)

	@lmathlib.c

7 
	#lm©hlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

14 
	~<m©h.h
>

16 
	~"lua.h
"

18 
	~"œuxlib.h
"

19 
	~"luÆib.h
"

22 #unde‡
PI


23 
	#PI
 (
	`l_m©h›
(3.141592653589793238462643383279502884))

	)

26 #i‡!
deföed
(
l_ønd
)

27 #i‡
deföed
(
LUA_USE_POSIX
)

28 
	#l_ønd
(Ë
	`øndom
()

	)

29 
	#l_§™d
(
x
Ë
	`§™dom
(x)

	)

30 
	#L_RANDMAX
 2147483647

	)

32 
	#l_ønd
(Ë
	`ønd
()

	)

33 
	#l_§™d
(
x
Ë
	`§™d
(x)

	)

34 
	#L_RANDMAX
 
RAND_MAX


	)

39 
	$m©h_abs
 (
lua_Sèã
 *
L
) {

40 i‡(
	`lua_isöãgî
(
L
, 1)) {

41 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 1);

42 i‡(
n
 < 0Ë¿(
lua_I¡egî
)(0u - (
lua_Unsig√d
)n);

43 
	`lua_pushöãgî
(
L
, 
n
);

46 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Ábs
)(
	`luaL_checknumbî
(L, 1)));

48 
	}
}

50 
	$m©h_sö
 (
lua_Sèã
 *
L
) {

51 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sö
)(
	`luaL_checknumbî
(L, 1)));

53 
	}
}

55 
	$m©h_cos
 (
lua_Sèã
 *
L
) {

56 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cos
)(
	`luaL_checknumbî
(L, 1)));

58 
	}
}

60 
	$m©h_èn
 (
lua_Sèã
 *
L
) {

61 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
èn
)(
	`luaL_checknumbî
(L, 1)));

63 
	}
}

65 
	$m©h_asö
 (
lua_Sèã
 *
L
) {

66 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
asö
)(
	`luaL_checknumbî
(L, 1)));

68 
	}
}

70 
	$m©h_acos
 (
lua_Sèã
 *
L
) {

71 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
acos
)(
	`luaL_checknumbî
(L, 1)));

73 
	}
}

75 
	$m©h_©™
 (
lua_Sèã
 *
L
) {

76 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 1);

77 
lua_Numbî
 
x
 = 
	`luaL_›äumbî
(
L
, 2, 1);

78 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™2
)(
y
, 
x
));

80 
	}
}

83 
	$m©h_toöt
 (
lua_Sèã
 *
L
) {

84 
vÆid
;

85 
lua_I¡egî
 
n
 = 
	`lua_toöãgîx
(
L
, 1, &
vÆid
);

86 i‡(
vÆid
)

87 
	`lua_pushöãgî
(
L
, 
n
);

89 
	`luaL_check™y
(
L
, 1);

90 
	`lua_pushnû
(
L
);

93 
	}
}

96 
	$pushnumöt
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
d
) {

97 
lua_I¡egî
 
n
;

98 i‡(
	`lua_numbîtoöãgî
(
d
, &
n
))

99 
	`lua_pushöãgî
(
L
, 
n
);

101 
	`lua_pushnumbî
(
L
, 
d
);

102 
	}
}

105 
	$m©h_Êo‹
 (
lua_Sèã
 *
L
) {

106 i‡(
	`lua_isöãgî
(
L
, 1))

107 
	`lua_£â›
(
L
, 1);

109 
lua_Numbî
 
d
 = 
	`l_m©h›
(
Êo‹
)(
	`luaL_checknumbî
(
L
, 1));

110 
	`pushnumöt
(
L
, 
d
);

113 
	}
}

116 
	$m©h_˚û
 (
lua_Sèã
 *
L
) {

117 i‡(
	`lua_isöãgî
(
L
, 1))

118 
	`lua_£â›
(
L
, 1);

120 
lua_Numbî
 
d
 = 
	`l_m©h›
(
˚û
)(
	`luaL_checknumbî
(
L
, 1));

121 
	`pushnumöt
(
L
, 
d
);

124 
	}
}

127 
	$m©h_fmod
 (
lua_Sèã
 *
L
) {

128 i‡(
	`lua_isöãgî
(
L
, 1) &&Üua_isinteger(L, 2)) {

129 
lua_I¡egî
 
d
 = 
	`lua_toöãgî
(
L
, 2);

130 i‡((
lua_Unsig√d
)
d
 + 1u <= 1u) {

131 
	`luaL_¨gcheck
(
L
, 
d
 != 0, 2, "zero");

132 
	`lua_pushöãgî
(
L
, 0);

135 
	`lua_pushöãgî
(
L
, 
	`lua_toöãgî
(L, 1Ë% 
d
);

138 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
fmod
)(
	`luaL_checknumbî
(L, 1),

139 
	`luaL_checknumbî
(
L
, 2)));

141 
	}
}

149 
	$m©h_modf
 (
lua_Sèã
 *
L
) {

150 i‡(
	`lua_isöãgî
(
L
 ,1)) {

151 
	`lua_£â›
(
L
, 1);

152 
	`lua_pushnumbî
(
L
, 0);

155 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 1);

157 
lua_Numbî
 
ù
 = (
n
 < 0Ë? 
	`l_m©h›
(
˚û
)“Ë:Ü_m©h›(
Êo‹
)(n);

158 
	`pushnumöt
(
L
, 
ù
);

160 
	`lua_pushnumbî
(
L
, (
n
 =
ù
Ë? 
	`l_m©h›
(0.0) : (n - ip));

163 
	}
}

166 
	$m©h_sqπ
 (
lua_Sèã
 *
L
) {

167 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sqπ
)(
	`luaL_checknumbî
(L, 1)));

169 
	}
}

172 
	$m©h_u…
 (
lua_Sèã
 *
L
) {

173 
lua_I¡egî
 
a
 = 
	`luaL_checköãgî
(
L
, 1);

174 
lua_I¡egî
 
b
 = 
	`luaL_checköãgî
(
L
, 2);

175 
	`lua_pushboﬁón
(
L
, (
lua_Unsig√d
)
a
 < (lua_Unsig√d)
b
);

177 
	}
}

179 
	$m©h_log
 (
lua_Sèã
 *
L
) {

180 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

181 
lua_Numbî
 
ªs
;

182 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2))

183 
ªs
 = 
	`l_m©h›
(
log
)(
x
);

185 
lua_Numbî
 
ba£
 = 
	`luaL_checknumbî
(
L
, 2);

186 #i‡!
	`deföed
(
LUA_USE_C89
)

187 i‡(
ba£
 =
	`l_m©h›
(2.0))

188 
ªs
 = 
	`l_m©h›
(
log2
)(
x
); 

190 i‡(
ba£
 =
	`l_m©h›
(10.0))

191 
ªs
 = 
	`l_m©h›
(
log10
)(
x
);

193 
ªs
 = 
	`l_m©h›
(
log
)(
x
)/l_m©h›÷og)(
ba£
);

195 
	`lua_pushnumbî
(
L
, 
ªs
);

197 
	}
}

199 
	$m©h_exp
 (
lua_Sèã
 *
L
) {

200 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
exp
)(
	`luaL_checknumbî
(L, 1)));

202 
	}
}

204 
	$m©h_deg
 (
lua_Sèã
 *
L
) {

205 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
	`l_m©h›
(180.0Ë/ 
PI
));

207 
	}
}

209 
	$m©h_ød
 (
lua_Sèã
 *
L
) {

210 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
PI
 / 
	`l_m©h›
(180.0)));

212 
	}
}

215 
	$m©h_mö
 (
lua_Sèã
 *
L
) {

216 
n
 = 
	`lua_gët›
(
L
);

217 
imö
 = 1;

218 
i
;

219 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

220 
i
 = 2; i <
n
; i++) {

221 i‡(
	`lua_com∑ª
(
L
, 
i
, 
imö
, 
LUA_OPLT
))

222 
imö
 = 
i
;

224 
	`lua_pushvÆue
(
L
, 
imö
);

226 
	}
}

229 
	$m©h_max
 (
lua_Sèã
 *
L
) {

230 
n
 = 
	`lua_gët›
(
L
);

231 
imax
 = 1;

232 
i
;

233 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

234 
i
 = 2; i <
n
; i++) {

235 i‡(
	`lua_com∑ª
(
L
, 
imax
, 
i
, 
LUA_OPLT
))

236 
imax
 = 
i
;

238 
	`lua_pushvÆue
(
L
, 
imax
);

240 
	}
}

247 
	$m©h_øndom
 (
lua_Sèã
 *
L
) {

248 
lua_I¡egî
 
low
, 
up
;

249 
r
 = ()
	`l_ønd
(Ë* (1.0 / (()
L_RANDMAX
 + 1.0));

250 
	`lua_gët›
(
L
)) {

252 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
r
);

256 
low
 = 1;

257 
up
 = 
	`luaL_checköãgî
(
L
, 1);

261 
low
 = 
	`luaL_checköãgî
(
L
, 1);

262 
up
 = 
	`luaL_checköãgî
(
L
, 2);

265 :  
	`luaL_îr‹
(
L
, "wrongÇumber ofárguments");

268 
	`luaL_¨gcheck
(
L
, 
low
 <
up
, 1, "interval isÉmpty");

269 
	`luaL_¨gcheck
(
L
, 
low
 >0 || 
up
 <
LUA_MAXINTEGER
 +Üow, 1,

271 
r
 *()(
up
 - 
low
) + 1.0;

272 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
r
 + 
low
);

274 
	}
}

277 
	$m©h_øndom£ed
 (
lua_Sèã
 *
L
) {

278 
	`l_§™d
(()(
lua_I¡egî
)
	`luaL_checknumbî
(
L
, 1));

279 ()
	`l_ønd
();

281 
	}
}

284 
	$m©h_ty≥
 (
lua_Sèã
 *
L
) {

285 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

286 i‡(
	`lua_isöãgî
(
L
, 1))

287 
	`lua_pushlôîÆ
(
L
, "integer");

289 
	`lua_pushlôîÆ
(
L
, "float");

292 
	`luaL_check™y
(
L
, 1);

293 
	`lua_pushnû
(
L
);

296 
	}
}

304 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

306 
	$m©h_cosh
 (
lua_Sèã
 *
L
) {

307 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cosh
)(
	`luaL_checknumbî
(L, 1)));

309 
	}
}

311 
	$m©h_söh
 (
lua_Sèã
 *
L
) {

312 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
söh
)(
	`luaL_checknumbî
(L, 1)));

314 
	}
}

316 
	$m©h_ènh
 (
lua_Sèã
 *
L
) {

317 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ènh
)(
	`luaL_checknumbî
(L, 1)));

319 
	}
}

321 
	$m©h_pow
 (
lua_Sèã
 *
L
) {

322 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

323 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 2);

324 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
pow
)(
x
, 
y
));

326 
	}
}

328 
	$m©h_‰exp
 (
lua_Sèã
 *
L
) {

329 
e
;

330 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
‰exp
)(
	`luaL_checknumbî
(L, 1), &
e
));

331 
	`lua_pushöãgî
(
L
, 
e
);

333 
	}
}

335 
	$m©h_ldexp
 (
lua_Sèã
 *
L
) {

336 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

337 
ï
 = ()
	`luaL_checköãgî
(
L
, 2);

338 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ldexp
)(
x
, 
ï
));

340 
	}
}

342 
	$m©h_log10
 (
lua_Sèã
 *
L
) {

343 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
log10
)(
	`luaL_checknumbî
(L, 1)));

345 
	}
}

352 c⁄° 
luaL_Reg
 
	gm©hlib
[] = {

353 {"abs", 
m©h_abs
},

354 {"acos", 
m©h_acos
},

355 {"asö", 
m©h_asö
},

356 {"©™", 
m©h_©™
},

357 {"˚û", 
m©h_˚û
},

358 {"cos", 
m©h_cos
},

359 {"deg", 
m©h_deg
},

360 {"exp", 
m©h_exp
},

361 {"toöãgî", 
m©h_toöt
},

362 {"Êo‹", 
m©h_Êo‹
},

363 {"fmod", 
m©h_fmod
},

364 {"u…", 
m©h_u…
},

365 {"log", 
m©h_log
},

366 {"max", 
m©h_max
},

367 {"mö", 
m©h_mö
},

368 {"modf", 
m©h_modf
},

369 {"ød", 
m©h_ød
},

370 {"øndom", 
m©h_øndom
},

371 {"øndom£ed", 
m©h_øndom£ed
},

372 {"sö", 
m©h_sö
},

373 {"sqπ", 
m©h_sqπ
},

374 {"èn", 
m©h_èn
},

375 {"ty≥", 
m©h_ty≥
},

376 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

377 {"©™2", 
m©h_©™
},

378 {"cosh", 
m©h_cosh
},

379 {"söh", 
m©h_söh
},

380 {"ènh", 
m©h_ènh
},

381 {"pow", 
m©h_pow
},

382 {"‰exp", 
m©h_‰exp
},

383 {"ldexp", 
m©h_ldexp
},

384 {"log10", 
m©h_log10
},

387 {"pi", 
NULL
},

388 {"huge", 
NULL
},

389 {"maxöãgî", 
NULL
},

390 {"mööãgî", 
NULL
},

391 {
NULL
, NULL}

398 
LUAMOD_API
 
	$lua›í_m©h
 (
lua_Sèã
 *
L
) {

399 
	`luaL_√wlib
(
L
, 
m©hlib
);

400 
	`lua_pushnumbî
(
L
, 
PI
);

401 
	`lua_£tfõld
(
L
, -2, "pi");

402 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
HUGE_VAL
);

403 
	`lua_£tfõld
(
L
, -2, "huge");

404 
	`lua_pushöãgî
(
L
, 
LUA_MAXINTEGER
);

405 
	`lua_£tfõld
(
L
, -2, "maxinteger");

406 
	`lua_pushöãgî
(
L
, 
LUA_MININTEGER
);

407 
	`lua_£tfõld
(
L
, -2, "mininteger");

409 
	}
}

	@lmem.c

7 
	#lmem_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lgc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

45 
	#MINSIZEARRAY
 4

	)

48 *
	$luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
, 
size_t
 
size_ñems
,

49 
limô
, c⁄° *
wh©
) {

50 *
√wblock
;

51 
√wsize
;

52 i‡(*
size
 >
limô
/2) {

53 i‡(*
size
 >
limô
)

54 
	`luaG_ru√º‹
(
L
, "toÿm™y %†÷imô i†%d)", 
wh©
, 
limô
);

55 
√wsize
 = 
limô
;

58 
√wsize
 = (*
size
)*2;

59 i‡(
√wsize
 < 
MINSIZEARRAY
)

60 
√wsize
 = 
MINSIZEARRAY
;

62 
√wblock
 = 
	`luaM_ªÆlocv
(
L
, 
block
, *
size
, 
√wsize
, 
size_ñems
);

63 *
size
 = 
√wsize
;

64  
√wblock
;

65 
	}
}

68 
l_n‹ë
 
	$luaM_toobig
 (
lua_Sèã
 *
L
) {

69 
	`luaG_ru√º‹
(
L
, "memoryállocationÉrror: blockÅoo big");

70 
	}
}

77 *
	$luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
osize
, size_à
nsize
) {

78 *
√wblock
;

79 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

80 
size_t
 
ªÆosize
 = (
block
Ë? 
osize
 : 0;

81 
	`lua_as£π
((
ªÆosize
 =0Ë=(
block
 =
NULL
));

82 #i‡
	`deföed
(
HARDMEMTESTS
)

83 i‡(
nsize
 > 
ªÆosize
 && 
g
->
g¸u¬ög
)

84 
	`luaC_fuŒgc
(
L
, 1);

86 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

87 i‡(
√wblock
 =
NULL
 && 
nsize
 > 0) {

88 
	`lua_as£π
(
nsize
 > 
ªÆosize
);

89 i‡(
g
->
vîsi⁄
) {

90 
	`luaC_fuŒgc
(
L
, 1);

91 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

93 i‡(
√wblock
 =
NULL
)

94 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

96 
	`lua_as£π
((
nsize
 =0Ë=(
√wblock
 =
NULL
));

97 
g
->
GCdebt
 = (g->GCdebà+ 
nsize
Ë- 
ªÆosize
;

98  
√wblock
;

99 
	}
}

	@lmem.h

7 #i‚de‡
lmem_h


8 
	#lmem_h


	)

11 
	~<°ddef.h
>

13 
	~"Œimôs.h
"

14 
	~"lua.h
"

30 
	#luaM_ªÆlocv
(
L
,
b
,
⁄
,
n
,
e
) \

31 ((((
n
Ë>(
size_t
Ë&& 
	`ˇ°
(size_t, (n)Ë+ 1 > 
MAX_SIZET
/(
e
)) \

32 ? 
	`luaM_toobig
(
L
Ë: 
	`ˇ°_void
(0)) , \

33 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(
e
), (
n
)*”)))

	)

38 
	#luaM_ªÆlocvch¨
(
L
,
b
,
⁄
,
n
) \

39 
	`ˇ°
(*, 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(), (
n
)*()))

	)

41 
	#luaM_‰ìmem
(
L
, 
b
, 
s
Ë
	`luaM_ªÆloc_
(L, (b), (s), 0)

	)

42 
	#luaM_‰ì
(
L
, 
b
Ë
	`luaM_ªÆloc_
(L, (b), (*(b)), 0)

	)

43 
	#luaM_‰ì¨øy
(
L
, 
b
, 
n
Ë
	`luaM_ªÆloc_
(L, (b), (n)*(*(b)), 0)

	)

45 
	#luaM_mÆloc
(
L
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
, 0, (s))

	)

46 
	#luaM_√w
(
L
,
t
Ë
	`ˇ°
— *, 
	`luaM_mÆloc
(L, —)))

	)

47 
	#luaM_√wve˘‹
(
L
,
n
,
t
) \

48 
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, 
NULL
, 0, 
n
, —)))

	)

50 
	#luaM_√wobje˘
(
L
,
èg
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
,Åag, (s))

	)

52 
	#luaM_growve˘‹
(
L
,
v
,
√Àms
,
size
,
t
,
limô
,
e
) \

53 i‡((
√Àms
)+1 > (
size
)) \

54 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_growaux_
(
L
,v,&(
size
),—),
limô
,
e
)))

	)

56 
	#luaM_ªÆlocve˘‹
(
L
, 
v
,
ﬁdn
,
n
,
t
) \

57 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, v, 
ﬁdn
, 
n
, —))))

	)

59 
LUAI_FUNC
 
l_n‹ë
 
luaM_toobig
 (
lua_Sèã
 *
L
);

62 
LUAI_FUNC
 *
luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
ﬁdsize
,

63 
size_t
 
size
);

64 
LUAI_FUNC
 *
luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
,

65 
size_t
 
size_ñem
, 
limô
,

66 c⁄° *
wh©
);

	@loadlib.c

11 
	#lﬂdlib_c


	)

12 
	#LUA_LIB


	)

14 
	~"Õªfix.h
"

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~"lua.h
"

23 
	~"œuxlib.h
"

24 
	~"luÆib.h
"

31 #i‡!
deföed
 (
LUA_IGMARK
)

32 
	#LUA_IGMARK
 "-"

	)

42 #i‡!
deföed
(
LUA_CSUBSEP
)

43 
	#LUA_CSUBSEP
 
LUA_DIRSEP


	)

46 #i‡!
deföed
(
LUA_LSUBSEP
)

47 
	#LUA_LSUBSEP
 
LUA_DIRSEP


	)

52 
	#LUA_POF
 "lua›í_"

	)

55 
	#LUA_OFSEP
 "_"

	)

62 c⁄° 
	gCLIBS
 = 0;

64 
	#LIB_FAIL
 "›í"

	)

67 
	#£çrogdú
(
L
Ë(()0)

	)

77 
lsys_u∆ﬂdlib
 (*
lib
);

85 *
lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
);

92 
lua_CFun˘i⁄
 
lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
);

97 #i‡
deföed
(
LUA_USE_DLOPEN
)

107 
	~<dlf˙.h
>

114 #i‡
deföed
(
__GNUC__
)

115 
	#ˇ°_func
(
p
Ë(
	`__exãnsi⁄__
 (
lua_CFun˘i⁄
)’))

	)

117 
	#ˇ°_func
(
p
Ë((
lua_CFun˘i⁄
)’))

	)

121 
	$lsys_u∆ﬂdlib
 (*
lib
) {

122 
	`dl˛o£
(
lib
);

123 
	}
}

126 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

127 *
lib
 = 
	`dl›í
(
∑th
, 
RTLD_NOW
 | (
£eglb
 ? 
RTLD_GLOBAL
 : 
RTLD_LOCAL
));

128 i‡(
lib
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

129  
lib
;

130 
	}
}

133 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

134 
lua_CFun˘i⁄
 
f
 = 
	`ˇ°_func
(
	`dlsym
(
lib
, 
sym
));

135 i‡(
f
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

136  
f
;

137 
	}
}

143 #ñi‡
deföed
(
LUA_DL_DLL
)

150 
	~<wödows.h
>

156 #i‡!
deföed
(
LUA_LLE_FLAGS
)

157 
	#LUA_LLE_FLAGS
 0

	)

161 #unde‡
£çrogdú


168 
	$£çrogdú
 (
lua_Sèã
 *
L
) {

169 
buff
[
MAX_PATH
 + 1];

170 *
lb
;

171 
DWORD
 
nsize
 = (
buff
)/();

172 
DWORD
 
n
 = 
	`GëModuÀFûeNameA
(
NULL
, 
buff
, 
nsize
);

173 i‡(
n
 =0 ||Ç =
nsize
 || (
lb
 = 
	`°ºchr
(
buff
, '\\')Ë=
NULL
)

174 
	`luaL_îr‹
(
L
, "unableÅo get ModuleFileName");

176 *
lb
 = '\0';

177 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1), 
LUA_EXEC_DIR
, 
buff
);

178 
	`lua_ªmove
(
L
, -2);

180 
	}
}

185 
	$pushîr‹
 (
lua_Sèã
 *
L
) {

186 
îr‹
 = 
	`GëLa°Eº‹
();

187 
buf„r
[128];

188 i‡(
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_IGNORE_INSERTS
 | 
FORMAT_MESSAGE_FROM_SYSTEM
,

189 
NULL
, 
îr‹
, 0, 
buf„r
, (buffer)/(), NULL))

190 
	`lua_push°rög
(
L
, 
buf„r
);

192 
	`lua_pushf°rög
(
L
, "sy°emÉº‹ %d\n", 
îr‹
);

193 
	}
}

195 
	$lsys_u∆ﬂdlib
 (*
lib
) {

196 
	`FªeLibøry
((
HMODULE
)
lib
);

197 
	}
}

200 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

201 
HMODULE
 
lib
 = 
	`LﬂdLibøryExA
(
∑th
, 
NULL
, 
LUA_LLE_FLAGS
);

202 ()(
£eglb
);

203 i‡(
lib
 =
NULL
Ë
	`pushîr‹
(
L
);

204  
lib
;

205 
	}
}

208 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

209 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`GëProcAddªss
((
HMODULE
)
lib
, 
sym
);

210 i‡(
f
 =
NULL
Ë
	`pushîr‹
(
L
);

211  
f
;

212 
	}
}

224 #unde‡
LIB_FAIL


225 
	#LIB_FAIL
 "ab£¡"

	)

228 
	#DLMSG
 "dy«mi¯libørõ†nŸÉ«bÀd; check you∏Lu®ö°Æœti⁄"

	)

231 
	$lsys_u∆ﬂdlib
 (*
lib
) {

232 ()(
lib
);

233 
	}
}

236 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

237 ()(
∑th
); ()(
£eglb
);

238 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

239  
NULL
;

240 
	}
}

243 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

244 ()(
lib
); ()(
sym
);

245 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

246  
NULL
;

247 
	}
}

263 #i‡!
deföed
(
LUA_PATH_VAR
)

264 
	#LUA_PATH_VAR
 "LUA_PATH"

	)

267 #i‡!
deföed
(
LUA_CPATH_VAR
)

268 
	#LUA_CPATH_VAR
 "LUA_CPATH"

	)

272 
	#AUXMARK
 "\1"

	)

278 
	$n€nv
 (
lua_Sèã
 *
L
) {

279 
b
;

280 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

281 
b
 = 
	`lua_toboﬁón
(
L
, -1);

282 
	`lua_p›
(
L
, 1);

283  
b
;

284 
	}
}

290 
	$£ç©h
 (
lua_Sèã
 *
L
, c⁄° *
fõld«me
,

291 c⁄° *
ív«me
,

292 c⁄° *
d·
) {

293 c⁄° *
nvî
 = 
	`lua_pushf°rög
(
L
, "%s%s", 
ív«me
, 
LUA_VERSUFFIX
);

294 c⁄° *
∑th
 = 
	`gëív
(
nvî
);

295 i‡(
∑th
 =
NULL
)

296 
∑th
 = 
	`gëív
(
ív«me
);

297 i‡(
∑th
 =
NULL
 || 
	`n€nv
(
L
))

298 
	`lua_push°rög
(
L
, 
d·
);

301 
∑th
 = 
	`luaL_gsub
(
L
,Ö©h, 
LUA_PATH_SEP
 LUA_PATH_SEP,

302 
LUA_PATH_SEP
 
AUXMARK
 LUA_PATH_SEP);

303 
	`luaL_gsub
(
L
, 
∑th
, 
AUXMARK
, 
d·
);

304 
	`lua_ªmove
(
L
, -2);

306 
	`£çrogdú
(
L
);

307 
	`lua_£tfõld
(
L
, -3, 
fõld«me
);

308 
	`lua_p›
(
L
, 1);

309 
	}
}

317 *
	$check˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

318 *
∂ib
;

319 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

320 
	`lua_gëfõld
(
L
, -1, 
∑th
);

321 
∂ib
 = 
	`lua_tou£rd©a
(
L
, -1);

322 
	`lua_p›
(
L
, 2);

323  
∂ib
;

324 
	}
}

331 
	$addto˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, *
∂ib
) {

332 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

333 
	`lua_pushlightu£rd©a
(
L
, 
∂ib
);

334 
	`lua_pushvÆue
(
L
, -1);

335 
	`lua_£tfõld
(
L
, -3, 
∑th
);

336 
	`lua_øw£ti
(
L
, -2, 
	`luaL_Àn
(L, -2) + 1);

337 
	`lua_p›
(
L
, 1);

338 
	}
}

345 
	$g˘m
 (
lua_Sèã
 *
L
) {

346 
lua_I¡egî
 
n
 = 
	`luaL_Àn
(
L
, 1);

347 ; 
n
 >= 1;Ç--) {

348 
	`lua_øwgëi
(
L
, 1, 
n
);

349 
	`lsys_u∆ﬂdlib
(
	`lua_tou£rd©a
(
L
, -1));

350 
	`lua_p›
(
L
, 1);

353 
	}
}

358 
	#ERRLIB
 1

	)

359 
	#ERRFUNC
 2

	)

372 
	$lookf‹func
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, c⁄° *
sym
) {

373 *
ªg
 = 
	`check˛ib
(
L
, 
∑th
);

374 i‡(
ªg
 =
NULL
) {

375 
ªg
 = 
	`lsys_lﬂd
(
L
, 
∑th
, *
sym
 == '*');

376 i‡(
ªg
 =
NULL
Ë 
ERRLIB
;

377 
	`addto˛ib
(
L
, 
∑th
, 
ªg
);

379 i‡(*
sym
 == '*') {

380 
	`lua_pushboﬁón
(
L
, 1);

384 
lua_CFun˘i⁄
 
f
 = 
	`lsys_sym
(
L
, 
ªg
, 
sym
);

385 i‡(
f
 =
NULL
)

386  
ERRFUNC
;

387 
	`lua_pushcfun˘i⁄
(
L
, 
f
);

390 
	}
}

393 
	$Œ_lﬂdlib
 (
lua_Sèã
 *
L
) {

394 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

395 c⁄° *
öô
 = 
	`luaL_check°rög
(
L
, 2);

396 
°©
 = 
	`lookf‹func
(
L
, 
∑th
, 
öô
);

397 i‡(
°©
 == 0)

400 
	`lua_pushnû
(
L
);

401 
	`lua_ö£π
(
L
, -2);

402 
	`lua_push°rög
(
L
, (
°©
 =
ERRLIB
Ë? 
LIB_FAIL
 : "init");

405 
	}
}

416 
	$ªadabÀ
 (c⁄° *
fûíame
) {

417 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

418 i‡(
f
 =
NULL
)  0;

419 
	`f˛o£
(
f
);

421 
	}
}

424 c⁄° *
	$push√xâem∂©e
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

425 c⁄° *
l
;

426 *
∑th
 =*
LUA_PATH_SEP
)Öath++;

427 i‡(*
∑th
 ='\0'Ë 
NULL
;

428 
l
 = 
	`°rchr
(
∑th
, *
LUA_PATH_SEP
);

429 i‡(
l
 =
NULL
Ë»
∑th
 + 
	`°æí
(path);

430 
	`lua_pushl°rög
(
L
, 
∑th
, 
l
 -Öath);

431  
l
;

432 
	}
}

435 c⁄° *
	$£¨ch∑th
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

436 c⁄° *
∑th
,

437 c⁄° *
£p
,

438 c⁄° *
dú£p
) {

439 
luaL_Buf„r
 
msg
;

440 
	`luaL_bufföô
(
L
, &
msg
);

441 i‡(*
£p
 != '\0')

442 
«me
 = 
	`luaL_gsub
(
L
,Çame, 
£p
, 
dú£p
);

443 (
∑th
 = 
	`push√xâem∂©e
(
L
,Ö©h)Ë!
NULL
) {

444 c⁄° *
fûíame
 = 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1),

445 
LUA_PATH_MARK
, 
«me
);

446 
	`lua_ªmove
(
L
, -2);

447 i‡(
	`ªadabÀ
(
fûíame
))

448  
fûíame
;

449 
	`lua_pushf°rög
(
L
, "\n\äÿfûê'%s'", 
fûíame
);

450 
	`lua_ªmove
(
L
, -2);

451 
	`luaL_addvÆue
(&
msg
);

453 
	`luaL_pushªsu…
(&
msg
);

454  
NULL
;

455 
	}
}

458 
	$Œ_£¨ch∑th
 (
lua_Sèã
 *
L
) {

459 c⁄° *
f
 = 
	`£¨ch∑th
(
L
, 
	`luaL_check°rög
(L, 1),

460 
	`luaL_check°rög
(
L
, 2),

461 
	`luaL_›t°rög
(
L
, 3, "."),

462 
	`luaL_›t°rög
(
L
, 4, 
LUA_DIRSEP
));

463 i‡(
f
 !
NULL
)  1;

465 
	`lua_pushnû
(
L
);

466 
	`lua_ö£π
(
L
, -2);

469 
	}
}

472 c⁄° *
	$födfûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

473 c⁄° *
≤ame
,

474 c⁄° *
dú£p
) {

475 c⁄° *
∑th
;

476 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), 
≤ame
);

477 
∑th
 = 
	`lua_to°rög
(
L
, -1);

478 i‡(
∑th
 =
NULL
)

479 
	`luaL_îr‹
(
L
, "'∑ckage.%s' mu° bê®°rög", 
≤ame
);

480  
	`£¨ch∑th
(
L
, 
«me
, 
∑th
, ".", 
dú£p
);

481 
	}
}

484 
	$checklﬂd
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
fûíame
) {

485 i‡(
°©
) {

486 
	`lua_push°rög
(
L
, 
fûíame
);

490  
	`luaL_îr‹
(
L
, "errorÜoading module '%s' from file '%s':\n\t%s",

491 
	`lua_to°rög
(
L
, 1), 
fûíame
,Üua_tostring(L, -1));

492 
	}
}

495 
	$£¨chî_Lua
 (
lua_Sèã
 *
L
) {

496 c⁄° *
fûíame
;

497 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

498 
fûíame
 = 
	`födfûe
(
L
, 
«me
, "∑th", 
LUA_LSUBSEP
);

499 i‡(
fûíame
 =
NULL
)  1;

500  
	`checklﬂd
(
L
, (
	`luaL_lﬂdfûe
(L, 
fûíame
Ë=
LUA_OK
), filename);

501 
	}
}

512 
	$lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
, c⁄° *
mod«me
) {

513 c⁄° *
›ífunc
;

514 c⁄° *
m¨k
;

515 
mod«me
 = 
	`luaL_gsub
(
L
, mod«me, ".", 
LUA_OFSEP
);

516 
m¨k
 = 
	`°rchr
(
mod«me
, *
LUA_IGMARK
);

517 i‡(
m¨k
) {

518 
°©
;

519 
›ífunc
 = 
	`lua_pushl°rög
(
L
, 
mod«me
, 
m¨k
 - modname);

520 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", openfunc);

521 
°©
 = 
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

522 i‡(
°©
 !
ERRFUNC
)  stat;

523 
mod«me
 = 
m¨k
 + 1;

525 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", 
mod«me
);

526  
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

527 
	}
}

530 
	$£¨chî_C
 (
lua_Sèã
 *
L
) {

531 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

532 c⁄° *
fûíame
 = 
	`födfûe
(
L
, 
«me
, "˝©h", 
LUA_CSUBSEP
);

533 i‡(
fûíame
 =
NULL
)  1;

534  
	`checklﬂd
(
L
, (
	`lﬂdfunc
(L, 
fûíame
, 
«me
) == 0), filename);

535 
	}
}

538 
	$£¨chî_CroŸ
 (
lua_Sèã
 *
L
) {

539 c⁄° *
fûíame
;

540 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

541 c⁄° *
p
 = 
	`°rchr
(
«me
, '.');

542 
°©
;

543 i‡(
p
 =
NULL
)  0;

544 
	`lua_pushl°rög
(
L
, 
«me
, 
p
 -Çame);

545 
fûíame
 = 
	`födfûe
(
L
, 
	`lua_to°rög
(L, -1), "˝©h", 
LUA_CSUBSEP
);

546 i‡(
fûíame
 =
NULL
)  1;

547 i‡((
°©
 = 
	`lﬂdfunc
(
L
, 
fûíame
, 
«me
)) != 0) {

548 i‡(
°©
 !
ERRFUNC
)

549  
	`checklﬂd
(
L
, 0, 
fûíame
);

551 
	`lua_pushf°rög
(
L
, "\n\äÿmoduÀ '%s' i¿fûê'%s'", 
«me
, 
fûíame
);

555 
	`lua_push°rög
(
L
, 
fûíame
);

557 
	}
}

560 
	$£¨chî_¥ñﬂd
 (
lua_Sèã
 *
L
) {

561 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

562 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_PRELOAD_TABLE
);

563 i‡(
	`lua_gëfõld
(
L
, -1, 
«me
Ë=
LUA_TNIL
)

564 
	`lua_pushf°rög
(
L
, "\n\äÿfõldÖackage.¥ñﬂd['%s']", 
«me
);

566 
	}
}

569 
	$födlﬂdî
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

570 
i
;

571 
luaL_Buf„r
 
msg
;

572 
	`luaL_bufföô
(
L
, &
msg
);

574 i‡(
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), "£¨chîs"Ë!
LUA_TTABLE
)

575 
	`luaL_îr‹
(
L
, "'package.searchers' must beáÅable");

577 
i
 = 1; ; i++) {

578 i‡(
	`lua_øwgëi
(
L
, 3, 
i
Ë=
LUA_TNIL
) {

579 
	`lua_p›
(
L
, 1);

580 
	`luaL_pushªsu…
(&
msg
);

581 
	`luaL_îr‹
(
L
, "moduÀ '%s'ÇŸ found:%s", 
«me
, 
	`lua_to°rög
(L, -1));

583 
	`lua_push°rög
(
L
, 
«me
);

584 
	`lua_ˇŒ
(
L
, 1, 2);

585 i‡(
	`lua_isfun˘i⁄
(
L
, -2))

587 i‡(
	`lua_is°rög
(
L
, -2)) {

588 
	`lua_p›
(
L
, 1);

589 
	`luaL_addvÆue
(&
msg
);

592 
	`lua_p›
(
L
, 2);

594 
	}
}

597 
	$Œ_ªquúe
 (
lua_Sèã
 *
L
) {

598 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

599 
	`lua_£â›
(
L
, 1);

600 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

601 
	`lua_gëfõld
(
L
, 2, 
«me
);

602 i‡(
	`lua_toboﬁón
(
L
, -1))

605 
	`lua_p›
(
L
, 1);

606 
	`födlﬂdî
(
L
, 
«me
);

607 
	`lua_push°rög
(
L
, 
«me
);

608 
	`lua_ö£π
(
L
, -2);

609 
	`lua_ˇŒ
(
L
, 2, 1);

610 i‡(!
	`lua_i¢û
(
L
, -1))

611 
	`lua_£tfõld
(
L
, 2, 
«me
);

612 i‡(
	`lua_gëfõld
(
L
, 2, 
«me
Ë=
LUA_TNIL
) {

613 
	`lua_pushboﬁón
(
L
, 1);

614 
	`lua_pushvÆue
(
L
, -1);

615 
	`lua_£tfõld
(
L
, 2, 
«me
);

618 
	}
}

629 #i‡
deföed
(
LUA_COMPAT_MODULE
)

634 
	$£t_ív
 (
lua_Sèã
 *
L
) {

635 
lua_Debug
 
¨
;

636 i‡(
	`lua_gë°ack
(
L
, 1, &
¨
) == 0 ||

637 
	`lua_gëöfo
(
L
, "f", &
¨
) == 0 ||

638 
	`lua_iscfun˘i⁄
(
L
, -1))

639 
	`luaL_îr‹
(
L
, "'module'Çot called fromá Lua function");

640 
	`lua_pushvÆue
(
L
, -2);

641 
	`lua_£tupvÆue
(
L
, -2, 1);

642 
	`lua_p›
(
L
, 1);

643 
	}
}

646 
	$do›ti⁄s
 (
lua_Sèã
 *
L
, 
n
) {

647 
i
;

648 
i
 = 2; i <
n
; i++) {

649 i‡(
	`lua_isfun˘i⁄
(
L
, 
i
)) {

650 
	`lua_pushvÆue
(
L
, 
i
);

651 
	`lua_pushvÆue
(
L
, -2);

652 
	`lua_ˇŒ
(
L
, 1, 0);

655 
	}
}

658 
	$modöô
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
) {

659 c⁄° *
dŸ
;

660 
	`lua_pushvÆue
(
L
, -1);

661 
	`lua_£tfõld
(
L
, -2, "_M");

662 
	`lua_push°rög
(
L
, 
mod«me
);

663 
	`lua_£tfõld
(
L
, -2, "_NAME");

664 
dŸ
 = 
	`°ºchr
(
mod«me
, '.');

665 i‡(
dŸ
 =
NULL
ËdŸ = 
mod«me
;

666 
dŸ
++;

668 
	`lua_pushl°rög
(
L
, 
mod«me
, 
dŸ
 - modname);

669 
	`lua_£tfõld
(
L
, -2, "_PACKAGE");

670 
	}
}

673 
	$Œ_moduÀ
 (
lua_Sèã
 *
L
) {

674 c⁄° *
mod«me
 = 
	`luaL_check°rög
(
L
, 1);

675 
œ°¨g
 = 
	`lua_gët›
(
L
);

676 
	`luaL_pushmoduÀ
(
L
, 
mod«me
, 1);

678 i‡(
	`lua_gëfõld
(
L
, -1, "_NAME"Ë!
LUA_TNIL
)

679 
	`lua_p›
(
L
, 1);

681 
	`lua_p›
(
L
, 1);

682 
	`modöô
(
L
, 
mod«me
);

684 
	`lua_pushvÆue
(
L
, -1);

685 
	`£t_ív
(
L
);

686 
	`do›ti⁄s
(
L
, 
œ°¨g
);

688 
	}
}

691 
	$Œ_£óŒ
 (
lua_Sèã
 *
L
) {

692 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

693 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

694 
	`lua_¸óãèbÀ
(
L
, 0, 1);

695 
	`lua_pushvÆue
(
L
, -1);

696 
	`lua_£tmë©abÀ
(
L
, 1);

698 
	`lua_pushglobÆèbÀ
(
L
);

699 
	`lua_£tfõld
(
L
, -2, "__index");

701 
	}
}

708 c⁄° 
luaL_Reg
 
	gpk_funcs
[] = {

709 {"lﬂdlib", 
Œ_lﬂdlib
},

710 {"£¨ch∑th", 
Œ_£¨ch∑th
},

711 #i‡
deföed
(
LUA_COMPAT_MODULE
)

712 {"£óŒ", 
Œ_£óŒ
},

715 {"¥ñﬂd", 
NULL
},

716 {"˝©h", 
NULL
},

717 {"∑th", 
NULL
},

718 {"£¨chîs", 
NULL
},

719 {"lﬂded", 
NULL
},

720 {
NULL
, NULL}

724 c⁄° 
luaL_Reg
 
	gŒ_funcs
[] = {

725 #i‡
deföed
(
LUA_COMPAT_MODULE
)

726 {"moduÀ", 
Œ_moduÀ
},

728 {"ªquúe", 
Œ_ªquúe
},

729 {
NULL
, NULL}

733 
	$¸óã£¨chî°abÀ
 (
lua_Sèã
 *
L
) {

734 c⁄° 
lua_CFun˘i⁄
 
£¨chîs
[] =

735 {
£¨chî_¥ñﬂd
, 
£¨chî_Lua
, 
£¨chî_C
, 
£¨chî_CroŸ
, 
NULL
};

736 
i
;

738 
	`lua_¸óãèbÀ
(
L
, (
£¨chîs
)/(searchers[0]) - 1, 0);

740 
i
=0; 
£¨chîs
[i] !
NULL
; i++) {

741 
	`lua_pushvÆue
(
L
, -2);

742 
	`lua_pushc˛osuª
(
L
, 
£¨chîs
[
i
], 1);

743 
	`lua_øw£ti
(
L
, -2, 
i
+1);

745 #i‡
	`deföed
(
LUA_COMPAT_LOADERS
)

746 
	`lua_pushvÆue
(
L
, -1);

747 
	`lua_£tfõld
(
L
, -3, "loaders");

749 
	`lua_£tfõld
(
L
, -2, "searchers");

750 
	}
}

757 
	$¸óã˛ib°abÀ
 (
lua_Sèã
 *
L
) {

758 
	`lua_√wèbÀ
(
L
);

759 
	`lua_¸óãèbÀ
(
L
, 0, 1);

760 
	`lua_pushcfun˘i⁄
(
L
, 
g˘m
);

761 
	`lua_£tfõld
(
L
, -2, "__gc");

762 
	`lua_£tmë©abÀ
(
L
, -2);

763 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

764 
	}
}

767 
LUAMOD_API
 
	$lua›í_∑ckage
 (
lua_Sèã
 *
L
) {

768 
	`¸óã˛ib°abÀ
(
L
);

769 
	`luaL_√wlib
(
L
, 
pk_funcs
);

770 
	`¸óã£¨chî°abÀ
(
L
);

772 
	`£ç©h
(
L
, "∑th", 
LUA_PATH_VAR
, 
LUA_PATH_DEFAULT
);

773 
	`£ç©h
(
L
, "˝©h", 
LUA_CPATH_VAR
, 
LUA_CPATH_DEFAULT
);

775 
	`lua_pushlôîÆ
(
L
, 
LUA_DIRSEP
 "\n" 
LUA_PATH_SEP
 "\n" 
LUA_PATH_MARK
 "\n"

776 
LUA_EXEC_DIR
 "\n" 
LUA_IGMARK
 "\n");

777 
	`lua_£tfõld
(
L
, -2, "config");

779 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

780 
	`lua_£tfõld
(
L
, -2, "loaded");

782 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_PRELOAD_TABLE
);

783 
	`lua_£tfõld
(
L
, -2, "preload");

784 
	`lua_pushglobÆèbÀ
(
L
);

785 
	`lua_pushvÆue
(
L
, -2);

786 
	`luaL_£tfuncs
(
L
, 
Œ_funcs
, 1);

787 
	`lua_p›
(
L
, 1);

789 
	}
}

	@lobject.c

7 
	#lobje˘_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<m©h.h
>

15 
	~<°d¨g.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"l˘y≥.h
"

23 
	~"ldebug.h
"

24 
	~"ldo.h
"

25 
	~"lmem.h
"

26 
	~"lobje˘.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"lvm.h
"

33 
LUAI_DDEF
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
 = {
NILCONSTANT
};

41 
	$luaO_öt2fb
 (
x
) {

42 
e
 = 0;

43 i‡(
x
 < 8)  x;

44 
x
 >= (8 << 4)) {

45 
x
 = (x + 0xf) >> 4;

46 
e
 += 4;

48 
x
 >= (8 << 1)) {

49 
x
 = (x + 1) >> 1;

50 
e
++;

52  ((
e
+1Ë<< 3Ë| (
	`ˇ°_öt
(
x
) - 8);

53 
	}
}

57 
	$luaO_fb2öt
 (
x
) {

58  (
x
 < 8) ? x : ((x & 7) + 8) << ((x >> 3) - 1);

59 
	}
}

65 
	$luaO_˚ûlog2
 (
x
) {

66 c⁄° 
lu_byã
 
log_2
[256] = {

76 
l
 = 0;

77 
x
--;

78 
x
 >256Ë{ 
l
 += 8; x >>= 8; }

79  
l
 + 
log_2
[
x
];

80 
	}
}

83 
lua_I¡egî
 
	$öèrôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_I¡egî
 
v1
,

84 
lua_I¡egî
 
v2
) {

85 
›
) {

86 
LUA_OPADD
:  
	`öt›
(+, 
v1
, 
v2
);

87 
LUA_OPSUB
: 
	`öt›
(-, 
v1
, 
v2
);

88 
LUA_OPMUL
: 
	`öt›
(*, 
v1
, 
v2
);

89 
LUA_OPMOD
:  
	`luaV_mod
(
L
, 
v1
, 
v2
);

90 
LUA_OPIDIV
:  
	`luaV_div
(
L
, 
v1
, 
v2
);

91 
LUA_OPBAND
:  
	`öt›
(&, 
v1
, 
v2
);

92 
LUA_OPBOR
:  
	`öt›
(|, 
v1
, 
v2
);

93 
LUA_OPBXOR
:  
	`öt›
(^, 
v1
, 
v2
);

94 
LUA_OPSHL
:  
	`luaV_shi·l
(
v1
, 
v2
);

95 
LUA_OPSHR
:  
	`luaV_shi·l
(
v1
, -
v2
);

96 
LUA_OPUNM
:  
	`öt›
(-, 0, 
v1
);

97 
LUA_OPBNOT
:  
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
v1
);

98 : 
	`lua_as£π
(0);  0;

100 
	}
}

103 
lua_Numbî
 
	$num¨ôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_Numbî
 
v1
,

104 
lua_Numbî
 
v2
) {

105 
›
) {

106 
LUA_OPADD
:  
	`luai_numadd
(
L
, 
v1
, 
v2
);

107 
LUA_OPSUB
:  
	`luai_numsub
(
L
, 
v1
, 
v2
);

108 
LUA_OPMUL
:  
	`luai_nummul
(
L
, 
v1
, 
v2
);

109 
LUA_OPDIV
:  
	`luai_numdiv
(
L
, 
v1
, 
v2
);

110 
LUA_OPPOW
:  
	`luai_numpow
(
L
, 
v1
, 
v2
);

111 
LUA_OPIDIV
:  
	`luai_numidiv
(
L
, 
v1
, 
v2
);

112 
LUA_OPUNM
:  
	`luai_numunm
(
L
, 
v1
);

113 
LUA_OPMOD
: {

114 
lua_Numbî
 
m
;

115 
	`luai_nummod
(
L
, 
v1
, 
v2
, 
m
);

116  
m
;

118 : 
	`lua_as£π
(0);  0;

120 
	}
}

123 
	$luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

124 
TVÆue
 *
ªs
) {

125 
›
) {

126 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

127 
LUA_OPSHL
: 
LUA_OPSHR
:

128 
LUA_OPBNOT
: {

129 
lua_I¡egî
 
i1
;Üua_I¡egî 
i2
;

130 i‡(
	`toöãgî
(
p1
, &
i1
Ë&&Åoöãgî(
p2
, &
i2
)) {

131 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
i1
, 
i2
));

136 
LUA_OPDIV
: 
LUA_OPPOW
: {

137 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

138 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

139 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

145 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

146 i‡(
	`âisöãgî
(
p1
Ë&&Åtisöãgî(
p2
)) {

147 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
	`ivÆue
(
p1
), ivÆue(
p2
)));

150 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

151 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

158 
	`lua_as£π
(
L
 !
NULL
);

159 
	`luaT_åyböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
	`ˇ°
(
TMS
, (
›
 - 
LUA_OPADD
Ë+ 
TM_ADD
));

160 
	}
}

163 
	$luaO_hexavÆue
 (
c
) {

164 i‡(
	`lisdigô
(
c
))  c - '0';

165  (
	`…ﬁowî
(
c
) - 'a') + 10;

166 
	}
}

169 
	$i¢eg
 (c⁄° **
s
) {

170 i‡(**
s
 == '-') { (*s)++;  1; }

171 i‡(**
s
 == '+') (*s)++;

173 
	}
}

183 #i‡!
deföed
(
lua_°rx2numbî
)

187 
	#MAXSIGDIG
 30

	)

193 
lua_Numbî
 
	$lua_°rx2numbî
 (c⁄° *
s
, **
íd±r
) {

194 
dŸ
 = 
	`lua_gëloˇÀde˝oöt
();

195 
lua_Numbî
 
r
 = 0.0;

196 
sigdig
 = 0;

197 
nosigdig
 = 0;

198 
e
 = 0;

199 
√g
;

200 
hasdŸ
 = 0;

201 *
íd±r
 = 
	`ˇ°
(*, 
s
);

202 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

203 
√g
 = 
	`i¢eg
(&
s
);

204 i‡(!(*
s
 == '0' && (*(s + 1) == 'x' || *(s + 1) == 'X')))

206 
s
 += 2; ; s++) {

207 i‡(*
s
 =
dŸ
) {

208 i‡(
hasdŸ
) ;

209 
hasdŸ
 = 1;

211 i‡(
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
))) {

212 i‡(
sigdig
 =0 && *
s
 == '0')

213 
nosigdig
++;

214 i‡(++
sigdig
 <
MAXSIGDIG
)

215 
r
 = (∏* 
	`ˇ°_num
(16.0)Ë+ 
	`luaO_hexavÆue
(*
s
);

216 
e
++;

217 i‡(
hasdŸ
Ë
e
--;

221 i‡(
nosigdig
 + 
sigdig
 == 0)

223 *
íd±r
 = 
	`ˇ°
(*, 
s
);

224 
e
 *= 4;

225 i‡(*
s
 == 'p' || *s == 'P') {

226 
exp1
 = 0;

227 
√g1
;

228 
s
++;

229 
√g1
 = 
	`i¢eg
(&
s
);

230 i‡(!
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

232 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

233 
exp1
 =Éxp1 * 10 + *(
s
++) - '0';

234 i‡(
√g1
Ë
exp1
 = -exp1;

235 
e
 +
exp1
;

236 *
íd±r
 = 
	`ˇ°
(*, 
s
);

238 i‡(
√g
Ë
r
 = -r;

239  
	`l_m©h›
(
ldexp
)(
r
, 
e
);

240 
	}
}

247 #i‡!
deföed
 (
L_MAXLENNUM
)

248 
	#L_MAXLENNUM
 200

	)

251 c⁄° *
	$l_°r2dloc
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
, 
mode
) {

252 *
íd±r
;

253 *
ªsu…
 = (
mode
 ='x'Ë? 
	`lua_°rx2numbî
(
s
, &
íd±r
)

254 : 
	`lua_°r2numbî
(
s
, &
íd±r
);

255 i‡(
íd±r
 =
s
Ë 
NULL
;

256 
	`lis•a˚
(
	`ˇ°_uch¨
(*
íd±r
)))Éndptr++;

257  (*
íd±r
 ='\0'Ë?Énd±∏: 
NULL
;

258 
	}
}

274 c⁄° *
	$l_°r2d
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
) {

275 c⁄° *
íd±r
;

276 c⁄° *
pmode
 = 
	`°Ωbrk
(
s
, ".xXnN");

277 
mode
 = 
pmode
 ? 
	`…ﬁowî
(
	`ˇ°_uch¨
(*pmode)) : 0;

278 i‡(
mode
 == 'n')

279  
NULL
;

280 
íd±r
 = 
	`l_°r2dloc
(
s
, 
ªsu…
, 
mode
);

281 i‡(
íd±r
 =
NULL
) {

282 
buff
[
L_MAXLENNUM
 + 1];

283 c⁄° *
pdŸ
 = 
	`°rchr
(
s
, '.');

284 i‡(
	`°æí
(
s
Ë> 
L_MAXLENNUM
 || 
pdŸ
 =
NULL
)

285  
NULL
;

286 
	`°r˝y
(
buff
, 
s
);

287 
buff
[
pdŸ
 - 
s
] = 
	`lua_gëloˇÀde˝oöt
();

288 
íd±r
 = 
	`l_°r2dloc
(
buff
, 
ªsu…
, 
mode
);

289 i‡(
íd±r
 !
NULL
)

290 
íd±r
 = 
s
 + (íd±∏- 
buff
);

292  
íd±r
;

293 
	}
}

296 
	#MAXBY10
 
	`ˇ°
(
lua_Unsig√d
, 
LUA_MAXINTEGER
 / 10)

	)

297 
	#MAXLASTD
 
	`ˇ°_öt
(
LUA_MAXINTEGER
 % 10)

	)

299 c⁄° *
	$l_°r2öt
 (c⁄° *
s
, 
lua_I¡egî
 *
ªsu…
) {

300 
lua_Unsig√d
 
a
 = 0;

301 
em±y
 = 1;

302 
√g
;

303 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

304 
√g
 = 
	`i¢eg
(&
s
);

305 i‡(
s
[0] == '0' &&

306 (
s
[1] == 'x' || s[1] == 'X')) {

307 
s
 += 2;

308 ; 
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

309 
a
 =á * 16 + 
	`luaO_hexavÆue
(*
s
);

310 
em±y
 = 0;

314 ; 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

315 
d
 = *
s
 - '0';

316 i‡(
a
 >
MAXBY10
 && (®> MAXBY10 || 
d
 > 
MAXLASTD
 + 
√g
))

317  
NULL
;

318 
a
 =á * 10 + 
d
;

319 
em±y
 = 0;

322 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

323 i‡(
em±y
 || *
s
 !'\0'Ë 
NULL
;

325 *
ªsu…
 = 
	`l_ˇ°U2S
((
√g
Ë? 0u - 
a
 :á);

326  
s
;

328 
	}
}

331 
size_t
 
	$luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
) {

332 
lua_I¡egî
 
i
; 
lua_Numbî
 
n
;

333 c⁄° *
e
;

334 i‡((
e
 = 
	`l_°r2öt
(
s
, &
i
)Ë!
NULL
) {

335 
	`£tivÆue
(
o
, 
i
);

337 i‡((
e
 = 
	`l_°r2d
(
s
, &
n
)Ë!
NULL
) {

338 
	`£tÊtvÆue
(
o
, 
n
);

342  (
e
 - 
s
) + 1;

343 
	}
}

346 
	$luaO_utf8esc
 (*
buff
, 
x
) {

347 
n
 = 1;

348 
	`lua_as£π
(
x
 <= 0x10FFFF);

349 i‡(
x
 < 0x80)

350 
buff
[
UTF8BUFFSZ
 - 1] = 
	`ˇ°
(, 
x
);

352 
mfb
 = 0x3f;

354 
buff
[
UTF8BUFFSZ
 - (
n
++)] = 
	`ˇ°
(, 0x80 | (
x
 & 0x3f));

355 
x
 >>= 6;

356 
mfb
 >>= 1;

357 } 
x
 > 
mfb
);

358 
buff
[
UTF8BUFFSZ
 - 
n
] = 
	`ˇ°
(, (~
mfb
 << 1Ë| 
x
);

360  
n
;

361 
	}
}

365 
	#MAXNUMBER2STR
 50

	)

371 
	$luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
) {

372 
buff
[
MAXNUMBER2STR
];

373 
size_t
 
Àn
;

374 
	`lua_as£π
(
	`âi¢umbî
(
obj
));

375 i‡(
	`âisöãgî
(
obj
))

376 
Àn
 = 
	`lua_öãgî2°r
(
buff
, (buff), 
	`ivÆue
(
obj
));

378 
Àn
 = 
	`lua_numbî2°r
(
buff
, (buff), 
	`ÊtvÆue
(
obj
));

379 #i‡!
	`deföed
(
LUA_COMPAT_FLOATSTRING
)

380 i‡(
buff
[
	`°r•n
(buff, "-0123456789")] == '\0') {

381 
buff
[
Àn
++] = 
	`lua_gëloˇÀde˝oöt
();

382 
buff
[
Àn
++] = '0';

386 
	`£tsvÆue2s
(
L
, 
obj
, 
	`luaS_√wl°r
(L, 
buff
, 
Àn
));

387 
	}
}

390 
	$push°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

391 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, 
°r
, 
l
));

392 
	`luaD_ö˘›
(
L
);

393 
	}
}

400 c⁄° *
	$luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, 
va_li°
 
¨gp
) {

401 
n
 = 0;

403 c⁄° *
e
 = 
	`°rchr
(
fmt
, '%');

404 i‡(
e
 =
NULL
) ;

405 
	`push°r
(
L
, 
fmt
, 
e
 - fmt);

406 *(
e
+1)) {

408 c⁄° *
s
 = 
	`va_¨g
(
¨gp
, *);

409 i‡(
s
 =
NULL
) s = "(null)";

410 
	`push°r
(
L
, 
s
, 
	`°æí
(s));

414 
buff
 = 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, ));

415 i‡(
	`li•röt
(
	`ˇ°_uch¨
(
buff
)))

416 
	`push°r
(
L
, &
buff
, 1);

418 
	`luaO_pushf°rög
(
L
, "<\\%d>", 
	`ˇ°_uch¨
(
buff
));

422 
	`£tivÆue
(
L
->
t›
, 
	`va_¨g
(
¨gp
, ));

423 
t›2°r
;

426 
	`£tivÆue
(
L
->
t›
, 
	`ˇ°
(
lua_I¡egî
, 
	`va_¨g
(
¨gp
, 
l_uacI¡
)));

427 
t›2°r
;

430 
	`£tÊtvÆue
(
L
->
t›
, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, 
l_uacNumbî
)));

431 
t›2°r
:

432 
	`luaD_ö˘›
(
L
);

433 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

437 
buff
[4*(*) + 8];

438 *
p
 = 
	`va_¨g
(
¨gp
, *);

439 
l
 = 
	`lua_poöãr2°r
(
buff
, (buff), 
p
);

440 
	`push°r
(
L
, 
buff
, 
l
);

444 
buff
[
UTF8BUFFSZ
];

445 
l
 = 
	`luaO_utf8esc
(
buff
, 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, )));

446 
	`push°r
(
L
, 
buff
 + 
UTF8BUFFSZ
 - 
l
,Ü);

450 
	`push°r
(
L
, "%", 1);

454 
	`luaG_ru√º‹
(
L
, "invalid option '%%%c'Åo 'lua_pushfstring'",

455 *(
e
 + 1));

458 
n
 += 2;

459 
fmt
 = 
e
+2;

461 
	`luaD_check°ack
(
L
, 1);

462 
	`push°r
(
L
, 
fmt
, 
	`°æí
(fmt));

463 i‡(
n
 > 0Ë
	`luaV_c⁄ˇt
(
L
,Ç + 1);

464  
	`svÆue
(
L
->
t›
 - 1);

465 
	}
}

468 c⁄° *
	$luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

469 c⁄° *
msg
;

470 
va_li°
 
¨gp
;

471 
	`va_°¨t
(
¨gp
, 
fmt
);

472 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

473 
	`va_íd
(
¨gp
);

474  
msg
;

475 
	}
}

479 
	#LL
(
x
Ë((x)/(Ë- 1)

	)

481 
	#RETS
 "..."

	)

482 
	#PRE
 "[°rög \""

	)

483 
	#POS
 "\"]"

	)

485 
	#add°r
(
a
,
b
,
l
Ë–
	`mem˝y
◊,b,÷Ë* ()),á +÷Ë)

	)

487 
	$luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
bufÊí
) {

488 
size_t
 
l
 = 
	`°æí
(
sour˚
);

489 i‡(*
sour˚
 == '=') {

490 i‡(
l
 <
bufÊí
)

491 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

493 
	`add°r
(
out
, 
sour˚
 + 1, 
bufÊí
 - 1);

494 *
out
 = '\0';

497 i‡(*
sour˚
 == '@') {

498 i‡(
l
 <
bufÊí
)

499 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

501 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

502 
bufÊí
 -
	`LL
(
RETS
);

503 
	`mem˝y
(
out
, 
sour˚
 + 1 + 
l
 - 
bufÊí
, bufflen * ());

507 c⁄° *
∆
 = 
	`°rchr
(
sour˚
, '\n');

508 
	`add°r
(
out
, 
PRE
, 
	`LL
(PRE));

509 
bufÊí
 -
	`LL
(
PRE
 
RETS
 
POS
) + 1;

510 i‡(
l
 < 
bufÊí
 && 
∆
 =
NULL
) {

511 
	`add°r
(
out
, 
sour˚
, 
l
);

514 i‡(
∆
 !
NULL
Ë
l
 =Ç»- 
sour˚
;

515 i‡(
l
 > 
bufÊí
)Ü = bufflen;

516 
	`add°r
(
out
, 
sour˚
, 
l
);

517 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

519 
	`mem˝y
(
out
, 
POS
, (
	`LL
(POS) + 1) * ());

521 
	}
}

	@lobject.h

8 #i‚de‡
lobje˘_h


9 
	#lobje˘_h


	)

12 
	~<°d¨g.h
>

15 
	~"Œimôs.h
"

16 
	~"lua.h
"

22 
	#LUA_TPROTO
 
LUA_NUMTAGS


	)

23 
	#LUA_TDEADKEY
 (
LUA_NUMTAGS
+1Ë

	)

28 
	#LUA_TOTALTAGS
 (
LUA_TPROTO
 + 2)

	)

47 
	#LUA_TLCL
 (
LUA_TFUNCTION
 | (0 << 4)Ë

	)

48 
	#LUA_TLCF
 (
LUA_TFUNCTION
 | (1 << 4)Ë

	)

49 
	#LUA_TCCL
 (
LUA_TFUNCTION
 | (2 << 4)Ë

	)

53 
	#LUA_TSHRSTR
 (
LUA_TSTRING
 | (0 << 4)Ë

	)

54 
	#LUA_TLNGSTR
 (
LUA_TSTRING
 | (1 << 4)Ë

	)

58 
	#LUA_TNUMFLT
 (
LUA_TNUMBER
 | (0 << 4)Ë

	)

59 
	#LUA_TNUMINT
 (
LUA_TNUMBER
 | (1 << 4)Ë

	)

63 
	#BIT_ISCOLLECTABLE
 (1 << 6)

	)

66 
	#˘b
(
t
Ë(—Ë| 
BIT_ISCOLLECTABLE
)

	)

72 
GCObje˘
 
	tGCObje˘
;

79 
	#Comm⁄Hódî
 
GCObje˘
 *
√xt
; 
lu_byã
 
â
;Üu_byã 
m¨ked


	)

85 
	sGCObje˘
 {

86 
	mComm⁄Hódî
;

100 
	uVÆue
 {

101 
GCObje˘
 *
	mgc
;

102 *
	mp
;

103 
	mb
;

104 
lua_CFun˘i⁄
 
	mf
;

105 
lua_I¡egî
 
	mi
;

106 
lua_Numbî
 
	mn
;

107 } 
	tVÆue
;

110 
	#TVÆuefõlds
 
VÆue
 
vÆue_
; 
â_


	)

113 
	slua_TVÆue
 {

114 
	mTVÆuefõlds
;

115 } 
	tTVÆue
;

120 
	#NILCONSTANT
 {
NULL
}, 
LUA_TNIL


	)

123 
	#vÆ_
(
o
Ë((o)->
vÆue_
)

	)

127 
	#πty≥
(
o
Ë((o)->
â_
)

	)

130 
	#nov¨ü¡
(
x
Ë((xË& 0x0F)

	)

133 
	#ây≥
(
o
Ë(
	`πty≥
(oË& 0x3F)

	)

136 
	#ânov
(
o
Ë(
	`nov¨ü¡
(
	`πty≥
(o)))

	)

140 
	#checkèg
(
o
,
t
Ë(
	`πty≥
(oË=—))

	)

141 
	#checkty≥
(
o
,
t
Ë(
	`ânov
(oË=—))

	)

142 
	#âi¢umbî
(
o
Ë
	`checkty≥
((o), 
LUA_TNUMBER
)

	)

143 
	#âisÊﬂt
(
o
Ë
	`checkèg
((o), 
LUA_TNUMFLT
)

	)

144 
	#âisöãgî
(
o
Ë
	`checkèg
((o), 
LUA_TNUMINT
)

	)

145 
	#âi¢û
(
o
Ë
	`checkèg
((o), 
LUA_TNIL
)

	)

146 
	#âisboﬁón
(
o
Ë
	`checkèg
((o), 
LUA_TBOOLEAN
)

	)

147 
	#âi¶ightu£rd©a
(
o
Ë
	`checkèg
((o), 
LUA_TLIGHTUSERDATA
)

	)

148 
	#âis°rög
(
o
Ë
	`checkty≥
((o), 
LUA_TSTRING
)

	)

149 
	#âisshr°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TSHRSTR
))

	)

150 
	#âi¶ng°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLNGSTR
))

	)

151 
	#âi°abÀ
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTABLE
))

	)

152 
	#âisfun˘i⁄
(
o
Ë
	`checkty≥
(o, 
LUA_TFUNCTION
)

	)

153 
	#âis˛osuª
(
o
Ë((
	`πty≥
(oË& 0x1FË=
LUA_TFUNCTION
)

	)

154 
	#âisC˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TCCL
))

	)

155 
	#âisL˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLCL
))

	)

156 
	#âi¶cf
(
o
Ë
	`checkèg
((o), 
LUA_TLCF
)

	)

157 
	#âisfuŒu£rd©a
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TUSERDATA
))

	)

158 
	#âi°hªad
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTHREAD
))

	)

159 
	#âisdódkey
(
o
Ë
	`checkèg
((o), 
LUA_TDEADKEY
)

	)

163 
	#ivÆue
(
o
Ë
	`check_exp
(
	`âisöãgî
(o), 
	`vÆ_
(o).
i
)

	)

164 
	#ÊtvÆue
(
o
Ë
	`check_exp
(
	`âisÊﬂt
(o), 
	`vÆ_
(o).
n
)

	)

165 
	#nvÆue
(
o
Ë
	`check_exp
(
	`âi¢umbî
(o), \

166 (
	`âisöãgî
(
o
Ë? 
	`ˇ°_num
(
	`ivÆue
(o)Ë: 
	`ÊtvÆue
(o)))

	)

167 
	#gcvÆue
(
o
Ë
	`check_exp
(
	`iscﬁÀ˘abÀ
(o), 
	`vÆ_
(o).
gc
)

	)

168 
	#pvÆue
(
o
Ë
	`check_exp
(
	`âi¶ightu£rd©a
(o), 
	`vÆ_
(o).
p
)

	)

169 
	#tsvÆue
(
o
Ë
	`check_exp
(
	`âis°rög
(o), 
	`gco2ts
(
	`vÆ_
(o).
gc
))

	)

170 
	#uvÆue
(
o
Ë
	`check_exp
(
	`âisfuŒu£rd©a
(o), 
	`gco2u
(
	`vÆ_
(o).
gc
))

	)

171 
	#˛vÆue
(
o
Ë
	`check_exp
(
	`âis˛osuª
(o), 
	`gco2˛
(
	`vÆ_
(o).
gc
))

	)

172 
	#˛LvÆue
(
o
Ë
	`check_exp
(
	`âisL˛osuª
(o), 
	`gco2l˛
(
	`vÆ_
(o).
gc
))

	)

173 
	#˛CvÆue
(
o
Ë
	`check_exp
(
	`âisC˛osuª
(o), 
	`gco2c˛
(
	`vÆ_
(o).
gc
))

	)

174 
	#fvÆue
(
o
Ë
	`check_exp
(
	`âi¶cf
(o), 
	`vÆ_
(o).
f
)

	)

175 
	#hvÆue
(
o
Ë
	`check_exp
(
	`âi°abÀ
(o), 
	`gco2t
(
	`vÆ_
(o).
gc
))

	)

176 
	#bvÆue
(
o
Ë
	`check_exp
(
	`âisboﬁón
(o), 
	`vÆ_
(o).
b
)

	)

177 
	#thvÆue
(
o
Ë
	`check_exp
(
	`âi°hªad
(o), 
	`gco2th
(
	`vÆ_
(o).
gc
))

	)

179 
	#dódvÆue
(
o
Ë
	`check_exp
(
	`âisdódkey
(o), 
	`ˇ°
(*, 
	`vÆ_
(o).
gc
))

	)

181 
	#l_isÁl£
(
o
Ë(
	`âi¢û
(oË|| (
	`âisboﬁón
(oË&& 
	`bvÆue
(oË=0))

	)

184 
	#iscﬁÀ˘abÀ
(
o
Ë(
	`πty≥
(oË& 
BIT_ISCOLLECTABLE
)

	)

188 
	#righât
(
obj
Ë(
	`ây≥
(objË=
	`gcvÆue
(obj)->
â
)

	)

190 
	#checklivíess
(
L
,
obj
) \

191 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
) || \

192 (
	`righât
(
obj
Ë&& (
L
 =
NULL
 || !
	`isdód
(
	`G
(L),
	`gcvÆue
(obj)))))

	)

196 
	#£ât_
(
o
,
t
Ë((o)->
â_
=—))

	)

198 
	#£tÊtvÆue
(
obj
,
x
) \

199 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
n
=(
x
); 
	`£ât_
(io, 
LUA_TNUMFLT
); }

	)

201 
	#chgÊtvÆue
(
obj
,
x
) \

202 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisÊﬂt
(io)); 
	`vÆ_
(io).
n
=(
x
); }

	)

204 
	#£tivÆue
(
obj
,
x
) \

205 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
i
=(
x
); 
	`£ât_
(io, 
LUA_TNUMINT
); }

	)

207 
	#chgivÆue
(
obj
,
x
) \

208 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisöãgî
(io)); 
	`vÆ_
(io).
i
=(
x
); }

	)

210 
	#£äûvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TNIL
)

	)

212 
	#£tfvÆue
(
obj
,
x
) \

213 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
f
=(
x
); 
	`£ât_
(io, 
LUA_TLCF
); }

	)

215 
	#£çvÆue
(
obj
,
x
) \

216 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
p
=(
x
); 
	`£ât_
(io, 
LUA_TLIGHTUSERDATA
); }

	)

218 
	#£tbvÆue
(
obj
,
x
) \

219 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
b
=(
x
); 
	`£ât_
(io, 
LUA_TBOOLEAN
); }

	)

221 
	#£tgcovÆue
(
L
,
obj
,
x
) \

222 { 
TVÆue
 *
io
 = (
obj
); 
GCObje˘
 *
i_g
=(
x
); \

223 
	`vÆ_
(
io
).
gc
 = 
i_g
; 
	`£ât_
(io, 
	`˘b
(i_g->
â
)); }

	)

225 
	#£tsvÆue
(
L
,
obj
,
x
) \

226 { 
TVÆue
 *
io
 = (
obj
); 
TSåög
 *
x_
 = (
x
); \

227 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(x_->
â
)); \

228 
	`checklivíess
(
L
,
io
); }

	)

230 
	#£tuvÆue
(
L
,
obj
,
x
) \

231 { 
TVÆue
 *
io
 = (
obj
); 
Ud©a
 *
x_
 = (
x
); \

232 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TUSERDATA
)); \

233 
	`checklivíess
(
L
,
io
); }

	)

235 
	#£âhvÆue
(
L
,
obj
,
x
) \

236 { 
TVÆue
 *
io
 = (
obj
); 
lua_Sèã
 *
x_
 = (
x
); \

237 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTHREAD
)); \

238 
	`checklivíess
(
L
,
io
); }

	)

240 
	#£t˛LvÆue
(
L
,
obj
,
x
) \

241 { 
TVÆue
 *
io
 = (
obj
); 
LClosuª
 *
x_
 = (
x
); \

242 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TLCL
)); \

243 
	`checklivíess
(
L
,
io
); }

	)

245 
	#£t˛CvÆue
(
L
,
obj
,
x
) \

246 { 
TVÆue
 *
io
 = (
obj
); 
CClosuª
 *
x_
 = (
x
); \

247 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TCCL
)); \

248 
	`checklivíess
(
L
,
io
); }

	)

250 
	#£thvÆue
(
L
,
obj
,
x
) \

251 { 
TVÆue
 *
io
 = (
obj
); 
TabÀ
 *
x_
 = (
x
); \

252 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTABLE
)); \

253 
	`checklivíess
(
L
,
io
); }

	)

255 
	#£tdódvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TDEADKEY
)

	)

259 
	#£tobj
(
L
,
obj1
,
obj2
) \

260 { 
TVÆue
 *
io1
=(
obj1
); *io1 = *(
obj2
); \

261 ()
L
; 
	`checklivíess
(L,
io1
); }

	)

269 
	#£tobjs2s
 
£tobj


	)

271 
	#£tobj2s
 
£tobj


	)

272 
	#£tsvÆue2s
 
£tsvÆue


	)

273 
	#£thvÆue2s
 
£thvÆue


	)

274 
	#£çtvÆue2s
 
£çtvÆue


	)

276 
	#£tobjt2t
 
£tobj


	)

278 
	#£tobj2n
 
£tobj


	)

279 
	#£tsvÆue2n
 
£tsvÆue


	)

282 
	#£tobj2t
(
L
,
o1
,
o2
Ë(()L, *(o1)=*(o2), 
	`checklivíess
(L,(o1)))

	)

294 
TVÆue
 *
	tStkId
;

303 
	sTSåög
 {

304 
	mComm⁄Hódî
;

305 
lu_byã
 
	mexåa
;

306 
lu_byã
 
	mshæí
;

307 
	mhash
;

309 
size_t
 
	m gÀn
;

310 
TSåög
 *
	mh√xt
;

311 } 
	mu
;

312 } 
	tTSåög
;

318 
	uUTSåög
 {

319 
L_UmaxÆign
 
	mdummy
;

320 
TSåög
 
	mtsv
;

321 } 
	tUTSåög
;

328 
	#gë°r
(
ts
) \

329 
	`check_exp
(((
ts
)->
exåa
), 
	`ˇ°
(*, (ts)Ë+ (
UTSåög
))

	)

333 
	#svÆue
(
o
Ë
	`gë°r
(
	`tsvÆue
(o))

	)

336 
	#ts¶í
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 ? (s)->
shæí
 : (s)->
u
.
 gÀn
)

	)

339 
	#v¶í
(
o
Ë
	`ts¶í
(
	`tsvÆue
(o))

	)

346 
	sUd©a
 {

347 
	mComm⁄Hódî
;

348 
lu_byã
 
	mâuv_
;

349 
TabÀ
 *
	mmë©abÀ
;

350 
size_t
 
	mÀn
;

351 
VÆue
 
	mu£r_
;

352 } 
	tUd©a
;

358 
	uUUd©a
 {

359 
L_UmaxÆign
 
	mdummy
;

360 
Ud©a
 
	muv
;

361 } 
	tUUd©a
;

368 
	#gëud©amem
(
u
) \

369 
	`check_exp
(((
u
)->
âuv_
), (
	`ˇ°
(*, (u)Ë+ (
UUd©a
)))

	)

371 
	#£tu£rvÆue
(
L
,
u
,
o
) \

372 { c⁄° 
TVÆue
 *
io
=(
o
); 
Ud©a
 *
iu
 = (
u
); \

373 
iu
->
u£r_
 = 
io
->
vÆue_
; iu->
âuv_
 = 
	`πty≥
(io); \

374 
	`checklivíess
(
L
,
io
); }

	)

377 
	#gëu£rvÆue
(
L
,
u
,
o
) \

378 { 
TVÆue
 *
io
=(
o
); c⁄° 
Ud©a
 *
iu
 = (
u
); \

379 
io
->
vÆue_
 = 
iu
->
u£r_
; 
	`£ât_
(io, iu->
âuv_
); \

380 
	`checklivíess
(
L
,
io
); }

	)

386 
	sUpvÆdesc
 {

387 
TSåög
 *
	m«me
;

388 
lu_byã
 
	mö°ack
;

389 
lu_byã
 
	midx
;

390 } 
	tUpvÆdesc
;

397 
	sLocV¨
 {

398 
TSåög
 *
	mv¨«me
;

399 
	m°¨çc
;

400 
	mídpc
;

401 } 
	tLocV¨
;

407 
	sPrŸo
 {

408 
	mComm⁄Hódî
;

409 
lu_byã
 
	mnum∑øms
;

410 
lu_byã
 
	mis_v¨¨g
;

411 
lu_byã
 
	mmax°acksize
;

412 
	msizeupvÆues
;

413 
	msizek
;

414 
	msizecode
;

415 
	msizñöeöfo
;

416 
	msizï
;

417 
	msizñocv¨s
;

418 
	mlöedeföed
;

419 
	mœ°löedeföed
;

420 
TVÆue
 *
	mk
;

421 
In°ru˘i⁄
 *
	mcode
;

422 
PrŸo
 **
	mp
;

423 *
	mlöeöfo
;

424 
LocV¨
 *
	mlocv¨s
;

425 
UpvÆdesc
 *
	mupvÆues
;

426 
LClosuª
 *
	mˇche
;

427 
TSåög
 *
	msour˚
;

428 
GCObje˘
 *
	mg˛i°
;

429 } 
	tPrŸo
;

436 
UpVÆ
 
	tUpVÆ
;

443 
	#ClosuªHódî
 \

444 
Comm⁄Hódî
; 
lu_byã
 
nupvÆues
; 
GCObje˘
 *
g˛i°


	)

446 
	sCClosuª
 {

447 
	mClosuªHódî
;

448 
lua_CFun˘i⁄
 
	mf
;

449 
TVÆue
 
	mupvÆue
[1];

450 } 
	tCClosuª
;

453 
	sLClosuª
 {

454 
	mClosuªHódî
;

455 
PrŸo
 *
	mp
;

456 
UpVÆ
 *
	mupvÆs
[1];

457 } 
	tLClosuª
;

460 
	uClosuª
 {

461 
CClosuª
 
	mc
;

462 
LClosuª
 
	ml
;

463 } 
	tClosuª
;

466 
	#isLfun˘i⁄
(
o
Ë
	`âisL˛osuª
(o)

	)

468 
	#gë¥Ÿo
(
o
Ë(
	`˛LvÆue
(o)->
p
)

	)

475 
	uTKey
 {

477 
	mTVÆuefõlds
;

478 
	m√xt
;

479 } 
	mnk
;

480 
TVÆue
 
	mtvk
;

481 } 
	tTKey
;

485 
	#£äodekey
(
L
,
key
,
obj
) \

486 { 
TKey
 *
k_
=(
key
); c⁄° 
TVÆue
 *
io_
=(
obj
); \

487 
k_
->
nk
.
vÆue_
 = 
io_
->vÆue_; k_->nk.
â_
 = io_->tt_; \

488 ()
L
; 
	`checklivíess
(L,
io_
); }

	)

491 
	sNode
 {

492 
TVÆue
 
	mi_vÆ
;

493 
TKey
 
	mi_key
;

494 } 
	tNode
;

497 
	sTabÀ
 {

498 
	mComm⁄Hódî
;

499 
lu_byã
 
	mÊags
;

500 
lu_byã
 
	mlsizíode
;

501 
	msizóºay
;

502 
TVÆue
 *
	m¨øy
;

503 
Node
 *
	mnode
;

504 
Node
 *
	mœ°‰ì
;

505 
TabÀ
 *
	mmë©abÀ
;

506 
GCObje˘
 *
	mg˛i°
;

507 } 
	tTabÀ
;

514 
	#lmod
(
s
,
size
) \

515 (
	`check_exp
((
size
&(size-1))==0, (
	`ˇ°
(, (
s
Ë& ((size)-1)))))

	)

518 
	#twŸo
(
x
Ë(1<<(x))

	)

519 
	#sizíode
(
t
Ë(
	`twŸo
(—)->
lsizíode
))

	)

525 
	#luaO_nûobje˘
 (&
luaO_nûobje˘_
)

	)

528 
LUAI_DDEC
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
;

531 
	#UTF8BUFFSZ
 8

	)

533 
LUAI_FUNC
 
luaO_öt2fb
 (
x
);

534 
LUAI_FUNC
 
luaO_fb2öt
 (
x
);

535 
LUAI_FUNC
 
luaO_utf8esc
 (*
buff
, 
x
);

536 
LUAI_FUNC
 
luaO_˚ûlog2
 (
x
);

537 
LUAI_FUNC
 
luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
,

538 c⁄° 
TVÆue
 *
p2
, TVÆuê*
ªs
);

539 
LUAI_FUNC
 
size_t
 
luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
);

540 
LUAI_FUNC
 
luaO_hexavÆue
 (
c
);

541 
LUAI_FUNC
 
luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
);

542 
LUAI_FUNC
 c⁄° *
luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

543 
va_li°
 
¨gp
);

544 
LUAI_FUNC
 c⁄° *
luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

545 
LUAI_FUNC
 
luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
Àn
);

	@lopcodes.c

7 
	#l›codes_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"l›codes.h
"

20 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1] = {

68 
NULL


72 
	#›mode
(
t
,
a
,
b
,
c
,
m
Ë((—)<<7Ë| (◊)<<6Ë| ((b)<<4Ë| ((c)<<2Ë| (m))

	)

74 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
] = {

76 
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

77 ,
›mode
(0, 1, 
OpArgK
, 
OpArgN
, 
iABx
)

78 ,
›mode
(0, 1, 
OpArgN
, OpArgN, 
iABx
)

79 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

80 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

81 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

82 ,
›mode
(0, 1, 
OpArgU
, 
OpArgK
, 
iABC
)

83 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

84 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

85 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

86 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

87 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

88 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

89 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

90 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

91 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

92 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

93 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

94 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

95 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

96 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

97 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

98 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

99 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

100 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

101 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

102 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

103 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

104 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

105 ,
›mode
(0, 1, 
OpArgR
, OpArgR, 
iABC
)

106 ,
›mode
(0, 0, 
OpArgR
, 
OpArgN
, 
iAsBx
)

107 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

108 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

109 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

110 ,
›mode
(1, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

111 ,
›mode
(1, 1, 
OpArgR
, 
OpArgU
, 
iABC
)

112 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

113 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

114 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

115 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

116 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

117 ,
›mode
(0, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

118 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

119 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iABC
)

120 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABx
)

121 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

122 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iAx
)

	@lopcodes.h

7 #i‚de‡
l›codes_h


8 
	#l›codes_h


	)

10 
	~"Œimôs.h
"

32 
	eOpMode
 {
	miABC
, 
	miABx
, 
	miAsBx
, 
	miAx
};

38 
	#SIZE_C
 9

	)

39 
	#SIZE_B
 9

	)

40 
	#SIZE_Bx
 (
SIZE_C
 + 
SIZE_B
)

	)

41 
	#SIZE_A
 8

	)

42 
	#SIZE_Ax
 (
SIZE_C
 + 
SIZE_B
 + 
SIZE_A
)

	)

44 
	#SIZE_OP
 6

	)

46 
	#POS_OP
 0

	)

47 
	#POS_A
 (
POS_OP
 + 
SIZE_OP
)

	)

48 
	#POS_C
 (
POS_A
 + 
SIZE_A
)

	)

49 
	#POS_B
 (
POS_C
 + 
SIZE_C
)

	)

50 
	#POS_Bx
 
POS_C


	)

51 
	#POS_Ax
 
POS_A


	)

59 #i‡
SIZE_Bx
 < 
LUAI_BITSINT
-1

60 
	#MAXARG_Bx
 ((1<<
SIZE_Bx
)-1)

	)

61 
	#MAXARG_sBx
 (
MAXARG_Bx
>>1Ë

	)

63 
	#MAXARG_Bx
 
MAX_INT


	)

64 
	#MAXARG_sBx
 
MAX_INT


	)

67 #i‡
SIZE_Ax
 < 
LUAI_BITSINT
-1

68 
	#MAXARG_Ax
 ((1<<
SIZE_Ax
)-1)

	)

70 
	#MAXARG_Ax
 
MAX_INT


	)

74 
	#MAXARG_A
 ((1<<
SIZE_A
)-1)

	)

75 
	#MAXARG_B
 ((1<<
SIZE_B
)-1)

	)

76 
	#MAXARG_C
 ((1<<
SIZE_C
)-1)

	)

80 
	#MASK1
(
n
,
p
Ë((~((~(
In°ru˘i⁄
)0)<<“)))<<’))

	)

83 
	#MASK0
(
n
,
p
Ë(~
	`MASK1
“,p))

	)

89 
	#GET_OPCODE
(
i
Ë(
	`ˇ°
(
OpCode
, ((i)>>
POS_OP
Ë& 
	`MASK1
(
SIZE_OP
,0)))

	)

90 
	#SET_OPCODE
(
i
,
o
Ë((iË(((i)&
	`MASK0
(
SIZE_OP
,
POS_OP
)) | \

91 ((
	`ˇ°
(
In°ru˘i⁄
, 
o
)<<
POS_OP
)&
	`MASK1
(
SIZE_OP
,POS_OP))))

	)

93 
	#gë¨g
(
i
,
pos
,
size
Ë(
	`ˇ°
(, ((i)>>posË& 
	`MASK1
(size,0)))

	)

94 
	#£èrg
(
i
,
v
,
pos
,
size
Ë((iË(((i)&
	`MASK0
(size,pos)) | \

95 ((
	`ˇ°
(
In°ru˘i⁄
, 
v
)<<
pos
)&
	`MASK1
(
size
,pos))))

	)

97 
	#GETARG_A
(
i
Ë
	`gë¨g
(i, 
POS_A
, 
SIZE_A
)

	)

98 
	#SETARG_A
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_A
, 
SIZE_A
)

	)

100 
	#GETARG_B
(
i
Ë
	`gë¨g
(i, 
POS_B
, 
SIZE_B
)

	)

101 
	#SETARG_B
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_B
, 
SIZE_B
)

	)

103 
	#GETARG_C
(
i
Ë
	`gë¨g
(i, 
POS_C
, 
SIZE_C
)

	)

104 
	#SETARG_C
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_C
, 
SIZE_C
)

	)

106 
	#GETARG_Bx
(
i
Ë
	`gë¨g
(i, 
POS_Bx
, 
SIZE_Bx
)

	)

107 
	#SETARG_Bx
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Bx
, 
SIZE_Bx
)

	)

109 
	#GETARG_Ax
(
i
Ë
	`gë¨g
(i, 
POS_Ax
, 
SIZE_Ax
)

	)

110 
	#SETARG_Ax
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Ax
, 
SIZE_Ax
)

	)

112 
	#GETARG_sBx
(
i
Ë(
	`GETARG_Bx
(i)-
MAXARG_sBx
)

	)

113 
	#SETARG_sBx
(
i
,
b
Ë
	`SETARG_Bx
((i),
	`ˇ°
(, (b)+
MAXARG_sBx
))

	)

116 
	#CREATE_ABC
(
o
,
a
,
b
,
c
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

117 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

118 | (
	`ˇ°
(
In°ru˘i⁄
, 
b
)<<
POS_B
) \

119 | (
	`ˇ°
(
In°ru˘i⁄
, 
c
)<<
POS_C
))

	)

121 
	#CREATE_ABx
(
o
,
a
,
bc
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

122 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

123 | (
	`ˇ°
(
In°ru˘i⁄
, 
bc
)<<
POS_Bx
))

	)

125 
	#CREATE_Ax
(
o
,
a
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

126 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_Ax
))

	)

134 
	#BITRK
 (1 << (
SIZE_B
 - 1))

	)

137 
	#ISK
(
x
Ë((xË& 
BITRK
)

	)

140 
	#INDEXK
(
r
Ë(()‘Ë& ~
BITRK
)

	)

142 #i‡!
deföed
(
MAXINDEXRK
)

143 
	#MAXINDEXRK
 (
BITRK
 - 1)

	)

147 
	#RKASK
(
x
Ë((xË| 
BITRK
)

	)

153 
	#NO_REG
 
MAXARG_A


	)

171 
	mOP_MOVE
,

172 
	mOP_LOADK
,

173 
	mOP_LOADKX
,

174 
	mOP_LOADBOOL
,

175 
	mOP_LOADNIL
,

176 
	mOP_GETUPVAL
,

178 
	mOP_GETTABUP
,

179 
	mOP_GETTABLE
,

181 
	mOP_SETTABUP
,

182 
	mOP_SETUPVAL
,

183 
	mOP_SETTABLE
,

185 
	mOP_NEWTABLE
,

187 
	mOP_SELF
,

189 
	mOP_ADD
,

190 
	mOP_SUB
,

191 
	mOP_MUL
,

192 
	mOP_MOD
,

193 
	mOP_POW
,

194 
	mOP_DIV
,

195 
	mOP_IDIV
,

196 
	mOP_BAND
,

197 
	mOP_BOR
,

198 
	mOP_BXOR
,

199 
	mOP_SHL
,

200 
	mOP_SHR
,

201 
	mOP_UNM
,

202 
	mOP_BNOT
,

203 
	mOP_NOT
,

204 
	mOP_LEN
,

206 
	mOP_CONCAT
,

208 
	mOP_JMP
,

209 
	mOP_EQ
,

210 
	mOP_LT
,

211 
	mOP_LE
,

213 
	mOP_TEST
,

214 
	mOP_TESTSET
,

216 
	mOP_CALL
,

217 
	mOP_TAILCALL
,

218 
	mOP_RETURN
,

220 
	mOP_FORLOOP
,

222 
	mOP_FORPREP
,

224 
	mOP_TFORCALL
,

225 
	mOP_TFORLOOP
,

227 
	mOP_SETLIST
,

229 
	mOP_CLOSURE
,

231 
	mOP_VARARG
,

233 
	mOP_EXTRAARG


234 } 
	tOpCode
;

237 
	#NUM_OPCODES
 (
	`ˇ°
(, 
OP_EXTRAARG
Ë+ 1)

	)

274 
	eOpArgMask
 {

275 
	mOpArgN
,

276 
	mOpArgU
,

277 
	mOpArgR
,

278 
	mOpArgK


281 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
];

283 
	#gëOpMode
(
m
Ë(
	`ˇ°
(
OpMode
, 
luaP_›modes
[m] & 3))

	)

284 
	#gëBMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 4Ë& 3))

	)

285 
	#gëCMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 2Ë& 3))

	)

286 
	#ã°AMode
(
m
Ë(
luaP_›modes
[m] & (1 << 6))

	)

287 
	#ã°TMode
(
m
Ë(
luaP_›modes
[m] & (1 << 7))

	)

290 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1];

294 
	#LFIELDS_PER_FLUSH
 50

	)

	@loslib.c

7 
	#lo¶ib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<loˇÀ.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

19 
	~"lua.h
"

21 
	~"œuxlib.h
"

22 
	~"luÆib.h
"

31 #i‡!
deföed
(
LUA_STRFTIMEOPTIONS
)

34 
	#L_STRFTIMEC89
 "aAbBcdHIjmMpSUwWxXyYZ%"

	)

37 
	#L_STRFTIMEC99
 "aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%" \

38 "||" "EcECExEXEyEY" "OdOeOHOIOmOMOSOuOUOVOwOWOy"

	)

41 
	#L_STRFTIMEWIN
 "aAbBcdHIjmMpSUwWxXyYzZ%" \

42 "||" "#c#x#d#H#I#j#m#M#S#U#w#W#y#Y"

	)

44 #i‡
deföed
(
LUA_USE_WINDOWS
)

45 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEWIN


	)

46 #ñi‡
deföed
(
LUA_USE_C89
)

47 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEC89


	)

49 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEC99


	)

62 #i‡!
deföed
(
l_time_t
)

66 
	#l_timë
 
lua_I¡egî


	)

67 
	#l_pushtime
(
L
,
t
Ë
	`lua_pushöãgî
(L,(
lua_I¡egî
)—))

	)

69 
time_t
 
	$l_checktime
 (
lua_Sèã
 *
L
, 
¨g
) {

70 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

71 
	`luaL_¨gcheck
(
L
, (
time_t
)
t
 =t, 
¨g
, "time out-of-bounds");

72  (
time_t
)
t
;

73 
	}
}

78 #i‡!
deföed
(
l_gmtime
)

84 #i‡
deföed
(
LUA_USE_POSIX
)

86 
	#l_gmtime
(
t
,
r
Ë
	`gmtime_r
—,r)

	)

87 
	#l_loˇ…ime
(
t
,
r
Ë
	`loˇ…ime_r
—,r)

	)

92 
	#l_gmtime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`gmtime
—))

	)

93 
	#l_loˇ…ime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`loˇ…ime
—))

	)

109 #i‡!
deföed
(
lua_tm≤am
)

111 #i‡
deföed
(
LUA_USE_POSIX
)

113 
	~<uni°d.h
>

115 
	#LUA_TMPNAMBUFSIZE
 32

	)

117 #i‡!
deföed
(
LUA_TMPNAMTEMPLATE
)

118 
	#LUA_TMPNAMTEMPLATE
 "/tmp/lua_XXXXXX"

	)

121 
	#lua_tm≤am
(
b
,
e
) { \

122 
	`°r˝y
(
b
, 
LUA_TMPNAMTEMPLATE
); \

123 
e
 = 
	`mk°emp
(
b
); \

124 i‡(
e
 !-1Ë
	`˛o£
(e); \

125 
e
 = (ê=-1); }

	)

130 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

131 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

141 
	$os_execuã
 (
lua_Sèã
 *
L
) {

142 c⁄° *
cmd
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

143 
°©
 = 
	`sy°em
(
cmd
);

144 i‡(
cmd
 !
NULL
)

145  
	`luaL_exe¸esu…
(
L
, 
°©
);

147 
	`lua_pushboﬁón
(
L
, 
°©
);

150 
	}
}

153 
	$os_ªmove
 (
lua_Sèã
 *
L
) {

154 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

155  
	`luaL_fûîesu…
(
L
, 
	`ªmove
(
fûíame
) == 0, filename);

156 
	}
}

159 
	$os_ª«me
 (
lua_Sèã
 *
L
) {

160 c⁄° *
‰om«me
 = 
	`luaL_check°rög
(
L
, 1);

161 c⁄° *
t⁄ame
 = 
	`luaL_check°rög
(
L
, 2);

162  
	`luaL_fûîesu…
(
L
, 
	`ª«me
(
‰om«me
, 
t⁄ame
Ë=0, 
NULL
);

163 
	}
}

166 
	$os_tm≤ame
 (
lua_Sèã
 *
L
) {

167 
buff
[
LUA_TMPNAMBUFSIZE
];

168 
îr
;

169 
	`lua_tm≤am
(
buff
, 
îr
);

170 i‡(
îr
)

171  
	`luaL_îr‹
(
L
, "unableÅo generateá unique filename");

172 
	`lua_push°rög
(
L
, 
buff
);

174 
	}
}

177 
	$os_gëív
 (
lua_Sèã
 *
L
) {

178 
	`lua_push°rög
(
L
, 
	`gëív
(
	`luaL_check°rög
(L, 1)));

180 
	}
}

183 
	$os_˛ock
 (
lua_Sèã
 *
L
) {

184 
	`lua_pushnumbî
(
L
, ((
lua_Numbî
)
	`˛ock
())/÷ua_Numbî)
CLOCKS_PER_SEC
);

186 
	}
}

197 
	$£tfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

198 
	`lua_pushöãgî
(
L
, 
vÆue
);

199 
	`lua_£tfõld
(
L
, -2, 
key
);

200 
	}
}

202 
	$£tboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

203 i‡(
vÆue
 < 0)

205 
	`lua_pushboﬁón
(
L
, 
vÆue
);

206 
	`lua_£tfõld
(
L
, -2, 
key
);

207 
	}
}

213 
	$£èŒfõlds
 (
lua_Sèã
 *
L
, 
tm
 *
°m
) {

214 
	`£tfõld
(
L
, "£c", 
°m
->
tm_£c
);

215 
	`£tfõld
(
L
, "mö", 
°m
->
tm_mö
);

216 
	`£tfõld
(
L
, "hour", 
°m
->
tm_hour
);

217 
	`£tfõld
(
L
, "day", 
°m
->
tm_mday
);

218 
	`£tfõld
(
L
, "m⁄th", 
°m
->
tm_m⁄
 + 1);

219 
	`£tfõld
(
L
, "yór", 
°m
->
tm_yór
 + 1900);

220 
	`£tfõld
(
L
, "wday", 
°m
->
tm_wday
 + 1);

221 
	`£tfõld
(
L
, "yday", 
°m
->
tm_yday
 + 1);

222 
	`£tboﬁfõld
(
L
, "isd°", 
°m
->
tm_isd°
);

223 
	}
}

226 
	$gëboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
) {

227 
ªs
;

228 
ªs
 = (
	`lua_gëfõld
(
L
, -1, 
key
Ë=
LUA_TNIL
Ë? -1 : 
	`lua_toboﬁón
(L, -1);

229 
	`lua_p›
(
L
, 1);

230  
ªs
;

231 
	}
}

235 #i‡!
deföed
(
L_MAXDATEFIELD
)

236 
	#L_MAXDATEFIELD
 (
INT_MAX
 / 2)

	)

239 
	$gëfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
d
, 
dñè
) {

240 
i¢um
;

241 
t
 = 
	`lua_gëfõld
(
L
, -1, 
key
);

242 
lua_I¡egî
 
ªs
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

243 i‡(!
i¢um
) {

244 i‡(
t
 !
LUA_TNIL
)

245  
	`luaL_îr‹
(
L
, "fõld '%s' i†nŸá¿öãgî", 
key
);

246 i‡(
d
 < 0)

247  
	`luaL_îr‹
(
L
, "fõld '%s' missög i¿d©êèbÀ", 
key
);

248 
ªs
 = 
d
;

251 i‡(!(-
L_MAXDATEFIELD
 <
ªs
 &&Ñes <= L_MAXDATEFIELD))

252  
	`luaL_îr‹
(
L
, "fõld '%s' i†out-of-bound", 
key
);

253 
ªs
 -
dñè
;

255 
	`lua_p›
(
L
, 1);

256  ()
ªs
;

257 
	}
}

260 c⁄° *
	$check›ti⁄
 (
lua_Sèã
 *
L
, c⁄° *
c⁄v
,

261 
±rdiff_t
 
c⁄vÀn
, *
buff
) {

262 c⁄° *
›ti⁄
 = 
LUA_STRFTIMEOPTIONS
;

263 
›Àn
 = 1;

264 ; *
›ti⁄
 !'\0' && 
›Àn
 <
c⁄vÀn
; option += oplen) {

265 i‡(*
›ti⁄
 == '|')

266 
›Àn
++;

267 i‡(
	`memcmp
(
c⁄v
, 
›ti⁄
, 
›Àn
) == 0) {

268 
	`mem˝y
(
buff
, 
c⁄v
, 
›Àn
);

269 
buff
[
›Àn
] = '\0';

270  
c⁄v
 + 
›Àn
;

273 
	`luaL_¨gîr‹
(
L
, 1,

274 
	`lua_pushf°rög
(
L
, "övÆid c⁄vîsi⁄ s≥cifõ∏'%%%s'", 
c⁄v
));

275  
c⁄v
;

276 
	}
}

280 
	#SIZETIMEFMT
 250

	)

283 
	$os_d©e
 (
lua_Sèã
 *
L
) {

284 
size_t
 
¶í
;

285 c⁄° *
s
 = 
	`luaL_›é°rög
(
L
, 1, "%c", &
¶í
);

286 
time_t
 
t
 = 
	`luaL_›t
(
L
, 
l_checktime
, 2, 
	`time
(
NULL
));

287 c⁄° *
£
 = 
s
 + 
¶í
;

288 
tm
 
tmr
, *
°m
;

289 i‡(*
s
 == '!') {

290 
°m
 = 
	`l_gmtime
(&
t
, &
tmr
);

291 
s
++;

294 
°m
 = 
	`l_loˇ…ime
(&
t
, &
tmr
);

295 i‡(
°m
 =
NULL
)

296  
	`luaL_îr‹
(
L
,

298 i‡(
	`°rcmp
(
s
, "*t") == 0) {

299 
	`lua_¸óãèbÀ
(
L
, 0, 9);

300 
	`£èŒfõlds
(
L
, 
°m
);

303 
cc
[4];

304 
luaL_Buf„r
 
b
;

305 
cc
[0] = '%';

306 
	`luaL_bufföô
(
L
, &
b
);

307 
s
 < 
£
) {

308 i‡(*
s
 != '%')

309 
	`luaL_addch¨
(&
b
, *
s
++);

311 
size_t
 
ª¶í
;

312 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
SIZETIMEFMT
);

313 
s
++;

314 
s
 = 
	`check›ti⁄
(
L
, s, 
£
 - s, 
cc
 + 1);

315 
ª¶í
 = 
	`°r·ime
(
buff
, 
SIZETIMEFMT
, 
cc
, 
°m
);

316 
	`luaL_addsize
(&
b
, 
ª¶í
);

319 
	`luaL_pushªsu…
(&
b
);

322 
	}
}

325 
	$os_time
 (
lua_Sèã
 *
L
) {

326 
time_t
 
t
;

327 i‡(
	`lua_i¢⁄e‹nû
(
L
, 1))

328 
t
 = 
	`time
(
NULL
);

330 
tm
 
ts
;

331 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

332 
	`lua_£â›
(
L
, 1);

333 
ts
.
tm_£c
 = 
	`gëfõld
(
L
, "sec", 0, 0);

334 
ts
.
tm_mö
 = 
	`gëfõld
(
L
, "min", 0, 0);

335 
ts
.
tm_hour
 = 
	`gëfõld
(
L
, "hour", 12, 0);

336 
ts
.
tm_mday
 = 
	`gëfõld
(
L
, "day", -1, 0);

337 
ts
.
tm_m⁄
 = 
	`gëfõld
(
L
, "month", -1, 1);

338 
ts
.
tm_yór
 = 
	`gëfõld
(
L
, "year", -1, 1900);

339 
ts
.
tm_isd°
 = 
	`gëboﬁfõld
(
L
, "isdst");

340 
t
 = 
	`mktime
(&
ts
);

341 
	`£èŒfõlds
(
L
, &
ts
);

343 i‡(
t
 !(
time_t
)(
l_timë
)t ||Å == (time_t)(-1))

344  
	`luaL_îr‹
(
L
,

346 
	`l_pushtime
(
L
, 
t
);

348 
	}
}

351 
	$os_dif·ime
 (
lua_Sèã
 *
L
) {

352 
time_t
 
t1
 = 
	`l_checktime
(
L
, 1);

353 
time_t
 
t2
 = 
	`l_checktime
(
L
, 2);

354 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
	`dif·ime
(
t1
, 
t2
));

356 
	}
}

361 
	$os_£éoˇÀ
 (
lua_Sèã
 *
L
) {

362 c⁄° 
ˇt
[] = {
LC_ALL
, 
LC_COLLATE
, 
LC_CTYPE
, 
LC_MONETARY
,

363 
LC_NUMERIC
, 
LC_TIME
};

364 c⁄° *c⁄° 
ˇäames
[] = {"all", "collate", "ctype", "monetary",

365 "numîic", "time", 
NULL
};

366 c⁄° *
l
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

367 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "Æl", 
ˇäames
);

368 
	`lua_push°rög
(
L
, 
	`£éoˇÀ
(
ˇt
[
›
], 
l
));

370 
	}
}

373 
	$os_exô
 (
lua_Sèã
 *
L
) {

374 
°©us
;

375 i‡(
	`lua_isboﬁón
(
L
, 1))

376 
°©us
 = (
	`lua_toboﬁón
(
L
, 1Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

378 
°©us
 = ()
	`luaL_›töãgî
(
L
, 1, 
EXIT_SUCCESS
);

379 i‡(
	`lua_toboﬁón
(
L
, 2))

380 
	`lua_˛o£
(
L
);

381 i‡(
L
Ë
	`exô
(
°©us
);

383 
	}
}

386 c⁄° 
luaL_Reg
 
	gsy¶ib
[] = {

387 {"˛ock", 
os_˛ock
},

388 {"d©e", 
os_d©e
},

389 {"dif·ime", 
os_dif·ime
},

390 {"execuã", 
os_execuã
},

391 {"exô", 
os_exô
},

392 {"gëív", 
os_gëív
},

393 {"ªmove", 
os_ªmove
},

394 {"ª«me", 
os_ª«me
},

395 {"£éoˇÀ", 
os_£éoˇÀ
},

396 {"time", 
os_time
},

397 {"tm≤ame", 
os_tm≤ame
},

398 {
NULL
, NULL}

405 
LUAMOD_API
 
	$lua›í_os
 (
lua_Sèã
 *
L
) {

406 
	`luaL_√wlib
(
L
, 
sy¶ib
);

408 
	}
}

	@lparser.c

7 
	#Õ¨£r_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"lcode.h
"

18 
	~"ldebug.h
"

19 
	~"ldo.h
"

20 
	~"lfunc.h
"

21 
	~"Œex.h
"

22 
	~"lmem.h
"

23 
	~"lobje˘.h
"

24 
	~"l›codes.h
"

25 
	~"Õ¨£r.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

34 
	#MAXVARS
 200

	)

37 
	#hasmu…ªt
(
k
Ë((kË=
VCALL
 || (kË=
VVARARG
)

	)

42 
	#eq°r
(
a
,
b
Ë(◊Ë=(b))

	)

48 
	sBlockC¡
 {

49 
BlockC¡
 *
	m¥evious
;

50 
	mfú°œbñ
;

51 
	mfú°gŸo
;

52 
lu_byã
 
	m«˘v¨
;

53 
lu_byã
 
	mupvÆ
;

54 
lu_byã
 
	mi¶o›
;

55 } 
	tBlockC¡
;

62 
°©emít
 (
LexSèã
 *
ls
);

63 
ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
);

67 
l_n‹ë
 
	$£mîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

68 
ls
->
t
.
tokí
 = 0;

69 
	`luaX_sy¡axîr‹
(
ls
, 
msg
);

70 
	}
}

73 
l_n‹ë
 
	$îr‹_ex≥˘ed
 (
LexSèã
 *
ls
, 
tokí
) {

74 
	`luaX_sy¡axîr‹
(
ls
,

75 
	`luaO_pushf°rög
(
ls
->
L
, "%†ex≥˘ed", 
	`luaX_tokí2°r
÷s, 
tokí
)));

76 
	}
}

79 
l_n‹ë
 
	$îr‹limô
 (
FuncSèã
 *
fs
, 
limô
, c⁄° *
wh©
) {

80 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

81 c⁄° *
msg
;

82 
löe
 = 
fs
->
f
->
löedeföed
;

83 c⁄° *
whîe
 = (
löe
 == 0)

85 : 
	`luaO_pushf°rög
(
L
, "fun˘i⁄áàlöê%d", 
löe
);

86 
msg
 = 
	`luaO_pushf°rög
(
L
, "too many %s (limit is %d) in %s",

87 
wh©
, 
limô
, 
whîe
);

88 
	`luaX_sy¡axîr‹
(
fs
->
ls
, 
msg
);

89 
	}
}

92 
	$checklimô
 (
FuncSèã
 *
fs
, 
v
, 
l
, c⁄° *
wh©
) {

93 i‡(
v
 > 
l
Ë
	`îr‹limô
(
fs
,Ü, 
wh©
);

94 
	}
}

97 
	$ã°√xt
 (
LexSèã
 *
ls
, 
c
) {

98 i‡(
ls
->
t
.
tokí
 =
c
) {

99 
	`luaX_√xt
(
ls
);

103 
	}
}

106 
	$check
 (
LexSèã
 *
ls
, 
c
) {

107 i‡(
ls
->
t
.
tokí
 !
c
)

108 
	`îr‹_ex≥˘ed
(
ls
, 
c
);

109 
	}
}

112 
	$check√xt
 (
LexSèã
 *
ls
, 
c
) {

113 
	`check
(
ls
, 
c
);

114 
	`luaX_√xt
(
ls
);

115 
	}
}

118 
	#check_c⁄dôi⁄
(
ls
,
c
,
msg
Ë{ i‡(!(c)Ë
	`luaX_sy¡axîr‹
÷s, msg); }

	)

122 
	$check_m©ch
 (
LexSèã
 *
ls
, 
wh©
, 
who
, 
whîe
) {

123 i‡(!
	`ã°√xt
(
ls
, 
wh©
)) {

124 i‡(
whîe
 =
ls
->
löíumbî
)

125 
	`îr‹_ex≥˘ed
(
ls
, 
wh©
);

127 
	`luaX_sy¡axîr‹
(
ls
, 
	`luaO_pushf°rög
÷s->
L
,

129 
	`luaX_tokí2°r
(
ls
, 
wh©
),ÜuaX_tokí2°r÷s, 
who
), 
whîe
));

132 
	}
}

135 
TSåög
 *
	$°r_check«me
 (
LexSèã
 *
ls
) {

136 
TSåög
 *
ts
;

137 
	`check
(
ls
, 
TK_NAME
);

138 
ts
 = 
ls
->
t
.
£möfo
.ts;

139 
	`luaX_√xt
(
ls
);

140  
ts
;

141 
	}
}

144 
	$öô_exp
 (
expdesc
 *
e
, 
expköd
 
k
, 
i
) {

145 
e
->
f
 =É->
t
 = 
NO_JUMP
;

146 
e
->
k
 = k;

147 
e
->
u
.
öfo
 = 
i
;

148 
	}
}

151 
	$code°rög
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
TSåög
 *
s
) {

152 
	`öô_exp
(
e
, 
VK
, 
	`luaK_°rögK
(
ls
->
fs
, 
s
));

153 
	}
}

156 
	$check«me
 (
LexSèã
 *
ls
, 
expdesc
 *
e
) {

157 
	`code°rög
(
ls
, 
e
, 
	`°r_check«me
(ls));

158 
	}
}

161 
	$ªgi°îloˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
) {

162 
FuncSèã
 *
fs
 = 
ls
->fs;

163 
PrŸo
 *
f
 = 
fs
->f;

164 
ﬁdsize
 = 
f
->
sizñocv¨s
;

165 
	`luaM_growve˘‹
(
ls
->
L
, 
f
->
locv¨s
, 
fs
->
∆ocv¨s
, f->
sizñocv¨s
,

166 
LocV¨
, 
SHRT_MAX
, "local variables");

167 
ﬁdsize
 < 
f
->
sizñocv¨s
)

168 
f
->
locv¨s
[
ﬁdsize
++].
v¨«me
 = 
NULL
;

169 
f
->
locv¨s
[
fs
->
∆ocv¨s
].
v¨«me
 = varname;

170 
	`luaC_objb¨rõr
(
ls
->
L
, 
f
, 
v¨«me
);

171  
fs
->
∆ocv¨s
++;

172 
	}
}

175 
	$√w_loˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
«me
) {

176 
FuncSèã
 *
fs
 = 
ls
->fs;

177 
Dynd©a
 *
dyd
 = 
ls
->dyd;

178 
ªg
 = 
	`ªgi°îloˇlv¨
(
ls
, 
«me
);

179 
	`checklimô
(
fs
, 
dyd
->
a˘v¨
.
n
 + 1 - fs->
fú°loˇl
,

180 
MAXVARS
, "local variables");

181 
	`luaM_growve˘‹
(
ls
->
L
, 
dyd
->
a˘v¨
.
¨r
, dyd->a˘v¨.
n
 + 1,

182 
dyd
->
a˘v¨
.
size
, 
V¨desc
, 
MAX_INT
, "local variables");

183 
dyd
->
a˘v¨
.
¨r
[dyd->a˘v¨.
n
++].
idx
 = 
	`ˇ°
(, 
ªg
);

184 
	}
}

187 
	$√w_loˇlv¨lôîÆ_
 (
LexSèã
 *
ls
, c⁄° *
«me
, 
size_t
 
sz
) {

188 
	`√w_loˇlv¨
(
ls
, 
	`luaX_√w°rög
÷s, 
«me
, 
sz
));

189 
	}
}

191 
	#√w_loˇlv¨lôîÆ
(
ls
,
v
) \

192 
	`√w_loˇlv¨lôîÆ_
(
ls
, "" 
v
, ((v)/())-1)

	)

195 
LocV¨
 *
	$gëlocv¨
 (
FuncSèã
 *
fs
, 
i
) {

196 
idx
 = 
fs
->
ls
->
dyd
->
a˘v¨
.
¨r
[fs->
fú°loˇl
 + 
i
].idx;

197 
	`lua_as£π
(
idx
 < 
fs
->
∆ocv¨s
);

198  &
fs
->
f
->
locv¨s
[
idx
];

199 
	}
}

202 
	$adju°loˇlv¨s
 (
LexSèã
 *
ls
, 
nv¨s
) {

203 
FuncSèã
 *
fs
 = 
ls
->fs;

204 
fs
->
«˘v¨
 = 
	`ˇ°_byã
(fs->«˘v¨ + 
nv¨s
);

205 ; 
nv¨s
;Çvars--) {

206 
	`gëlocv¨
(
fs
, fs->
«˘v¨
 - 
nv¨s
)->
°¨çc
 = fs->
pc
;

208 
	}
}

211 
	$ªmovev¨s
 (
FuncSèã
 *
fs
, 
tﬁevñ
) {

212 
fs
->
ls
->
dyd
->
a˘v¨
.
n
 -(fs->
«˘v¨
 - 
tﬁevñ
);

213 
fs
->
«˘v¨
 > 
tﬁevñ
)

214 
	`gëlocv¨
(
fs
, --fs->
«˘v¨
)->
ídpc
 = fs->
pc
;

215 
	}
}

218 
	$£¨chupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
) {

219 
i
;

220 
UpvÆdesc
 *
up
 = 
fs
->
f
->
upvÆues
;

221 
i
 = 0; i < 
fs
->
nups
; i++) {

222 i‡(
	`eq°r
(
up
[
i
].
«me
,Çame))  i;

225 
	}
}

228 
	$√wupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
, 
expdesc
 *
v
) {

229 
PrŸo
 *
f
 = 
fs
->f;

230 
ﬁdsize
 = 
f
->
sizeupvÆues
;

231 
	`checklimô
(
fs
, fs->
nups
 + 1, 
MAXUPVAL
, "upvalues");

232 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
upvÆues
, fs->
nups
, f->
sizeupvÆues
,

233 
UpvÆdesc
, 
MAXUPVAL
, "upvalues");

234 
ﬁdsize
 < 
f
->
sizeupvÆues
)

235 
f
->
upvÆues
[
ﬁdsize
++].
«me
 = 
NULL
;

236 
f
->
upvÆues
[
fs
->
nups
].
ö°ack
 = (
v
->
k
 =
VLOCAL
);

237 
f
->
upvÆues
[
fs
->
nups
].
idx
 = 
	`ˇ°_byã
(
v
->
u
.
öfo
);

238 
f
->
upvÆues
[
fs
->
nups
].
«me
 =Çame;

239 
	`luaC_objb¨rõr
(
fs
->
ls
->
L
, 
f
, 
«me
);

240  
fs
->
nups
++;

241 
	}
}

244 
	$£¨chv¨
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
) {

245 
i
;

246 
i
 = 
	`ˇ°_öt
(
fs
->
«˘v¨
) - 1; i >= 0; i--) {

247 i‡(
	`eq°r
(
n
, 
	`gëlocv¨
(
fs
, 
i
)->
v¨«me
))

248  
i
;

251 
	}
}

258 
	$m¨kupvÆ
 (
FuncSèã
 *
fs
, 
Àvñ
) {

259 
BlockC¡
 *
bl
 = 
fs
->bl;

260 
bl
->
«˘v¨
 > 
Àvñ
)

261 
bl
 = bl->
¥evious
;

262 
bl
->
upvÆ
 = 1;

263 
	}
}

270 
	$sögÀv¨aux
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
, 
expdesc
 *
v¨
, 
ba£
) {

271 i‡(
fs
 =
NULL
)

272 
	`öô_exp
(
v¨
, 
VVOID
, 0);

274 
v
 = 
	`£¨chv¨
(
fs
, 
n
);

275 i‡(
v
 >= 0) {

276 
	`öô_exp
(
v¨
, 
VLOCAL
, 
v
);

277 i‡(!
ba£
)

278 
	`m¨kupvÆ
(
fs
, 
v
);

281 
idx
 = 
	`£¨chupvÆue
(
fs
, 
n
);

282 i‡(
idx
 < 0) {

283 
	`sögÀv¨aux
(
fs
->
¥ev
, 
n
, 
v¨
, 0);

284 i‡(
v¨
->
k
 =
VVOID
)

287 
idx
 = 
	`√wupvÆue
(
fs
, 
n
, 
v¨
);

289 
	`öô_exp
(
v¨
, 
VUPVAL
, 
idx
);

292 
	}
}

295 
	$sögÀv¨
 (
LexSèã
 *
ls
, 
expdesc
 *
v¨
) {

296 
TSåög
 *
v¨«me
 = 
	`°r_check«me
(
ls
);

297 
FuncSèã
 *
fs
 = 
ls
->fs;

298 
	`sögÀv¨aux
(
fs
, 
v¨«me
, 
v¨
, 1);

299 i‡(
v¨
->
k
 =
VVOID
) {

300 
expdesc
 
key
;

301 
	`sögÀv¨aux
(
fs
, 
ls
->
ívn
, 
v¨
, 1);

302 
	`lua_as£π
(
v¨
->
k
 !
VVOID
);

303 
	`code°rög
(
ls
, &
key
, 
v¨«me
);

304 
	`luaK_ödexed
(
fs
, 
v¨
, &
key
);

306 
	}
}

309 
	$adju°_assign
 (
LexSèã
 *
ls
, 
nv¨s
, 
√xps
, 
expdesc
 *
e
) {

310 
FuncSèã
 *
fs
 = 
ls
->fs;

311 
exåa
 = 
nv¨s
 - 
√xps
;

312 i‡(
	`hasmu…ªt
(
e
->
k
)) {

313 
exåa
++;

314 i‡(
exåa
 < 0)Éxtra = 0;

315 
	`luaK_£åëu∫s
(
fs
, 
e
, 
exåa
);

316 i‡(
exåa
 > 1Ë
	`luaK_ª£rvîegs
(
fs
,Éxtra-1);

319 i‡(
e
->
k
 !
VVOID
Ë
	`luaK_exp2√xåeg
(
fs
,É);

320 i‡(
exåa
 > 0) {

321 
ªg
 = 
fs
->
‰ìªg
;

322 
	`luaK_ª£rvîegs
(
fs
, 
exåa
);

323 
	`luaK_nû
(
fs
, 
ªg
, 
exåa
);

326 i‡(
√xps
 > 
nv¨s
)

327 
ls
->
fs
->
‰ìªg
 -
√xps
 - 
nv¨s
;

328 
	}
}

331 
	$íãæevñ
 (
LexSèã
 *
ls
) {

332 
lua_Sèã
 *
L
 = 
ls
->L;

333 ++
L
->
nCˇŒs
;

334 
	`checklimô
(
ls
->
fs
, 
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
, "CÜevels");

335 
	}
}

338 
	#Àavñevñ
(
ls
Ë(÷s)->
L
->
nCˇŒs
--)

	)

341 
	$˛o£gŸo
 (
LexSèã
 *
ls
, 
g
, 
Labñdesc
 *
œbñ
) {

342 
i
;

343 
FuncSèã
 *
fs
 = 
ls
->fs;

344 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

345 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
g
];

346 
	`lua_as£π
(
	`eq°r
(
gt
->
«me
, 
œbñ
->name));

347 i‡(
gt
->
«˘v¨
 < 
œbñ
->nactvar) {

348 
TSåög
 *
v«me
 = 
	`gëlocv¨
(
fs
, 
gt
->
«˘v¨
)->
v¨«me
;

349 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

351 
	`gë°r
(
gt
->
«me
), gt->
löe
, gë°r(
v«me
));

352 
	`£mîr‹
(
ls
, 
msg
);

354 
	`luaK_∑tchli°
(
fs
, 
gt
->
pc
, 
œbñ
->pc);

356 
i
 = 
g
; i < 
gl
->
n
 - 1; i++)

357 
gl
->
¨r
[
i
] = gl->arr[i + 1];

358 
gl
->
n
--;

359 
	}
}

365 
	$födœbñ
 (
LexSèã
 *
ls
, 
g
) {

366 
i
;

367 
BlockC¡
 *
bl
 = 
ls
->
fs
->bl;

368 
Dynd©a
 *
dyd
 = 
ls
->dyd;

369 
Labñdesc
 *
gt
 = &
dyd
->gt.
¨r
[
g
];

371 
i
 = 
bl
->
fú°œbñ
; i < 
dyd
->
œbñ
.
n
; i++) {

372 
Labñdesc
 *
lb
 = &
dyd
->
œbñ
.
¨r
[
i
];

373 i‡(
	`eq°r
(
lb
->
«me
, 
gt
->name)) {

374 i‡(
gt
->
«˘v¨
 > 
lb
->nactvar &&

375 (
bl
->
upvÆ
 || 
dyd
->
œbñ
.
n
 > bl->
fú°œbñ
))

376 
	`luaK_∑tch˛o£
(
ls
->
fs
, 
gt
->
pc
, 
lb
->
«˘v¨
);

377 
	`˛o£gŸo
(
ls
, 
g
, 
lb
);

382 
	}
}

385 
	$√wœbñíåy
 (
LexSèã
 *
ls
, 
Labñli°
 *
l
, 
TSåög
 *
«me
,

386 
löe
, 
pc
) {

387 
n
 = 
l
->n;

388 
	`luaM_growve˘‹
(
ls
->
L
, 
l
->
¨r
, 
n
,Ü->
size
,

389 
Labñdesc
, 
SHRT_MAX
, "labels/gotos");

390 
l
->
¨r
[
n
].
«me
 =Çame;

391 
l
->
¨r
[
n
].
löe
 =Üine;

392 
l
->
¨r
[
n
].
«˘v¨
 = 
ls
->
fs
->nactvar;

393 
l
->
¨r
[
n
].
pc
 =Öc;

394 
l
->
n
 =Ç + 1;

395  
n
;

396 
	}
}

403 
	$födgŸos
 (
LexSèã
 *
ls
, 
Labñdesc
 *
lb
) {

404 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

405 
i
 = 
ls
->
fs
->
bl
->
fú°gŸo
;

406 
i
 < 
gl
->
n
) {

407 i‡(
	`eq°r
(
gl
->
¨r
[
i
].
«me
, 
lb
->name))

408 
	`˛o£gŸo
(
ls
, 
i
, 
lb
);

410 
i
++;

412 
	}
}

421 
	$movegŸosout
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

422 
i
 = 
bl
->
fú°gŸo
;

423 
Labñli°
 *
gl
 = &
fs
->
ls
->
dyd
->
gt
;

426 
i
 < 
gl
->
n
) {

427 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
i
];

428 i‡(
gt
->
«˘v¨
 > 
bl
->nactvar) {

429 i‡(
bl
->
upvÆ
)

430 
	`luaK_∑tch˛o£
(
fs
, 
gt
->
pc
, 
bl
->
«˘v¨
);

431 
gt
->
«˘v¨
 = 
bl
->nactvar;

433 i‡(!
	`födœbñ
(
fs
->
ls
, 
i
))

434 
i
++;

436 
	}
}

439 
	$íãrblock
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
, 
lu_byã
 
i¶o›
) {

440 
bl
->
i¶o›
 = isloop;

441 
bl
->
«˘v¨
 = 
fs
->nactvar;

442 
bl
->
fú°œbñ
 = 
fs
->
ls
->
dyd
->
œbñ
.
n
;

443 
bl
->
fú°gŸo
 = 
fs
->
ls
->
dyd
->
gt
.
n
;

444 
bl
->
upvÆ
 = 0;

445 
bl
->
¥evious
 = 
fs
->bl;

446 
fs
->
bl
 = bl;

447 
	`lua_as£π
(
fs
->
‰ìªg
 =fs->
«˘v¨
);

448 
	}
}

454 
	$bªakœbñ
 (
LexSèã
 *
ls
) {

455 
TSåög
 *
n
 = 
	`luaS_√w
(
ls
->
L
, "break");

456 
l
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
œbñ
, 
n
, 0,Üs->
fs
->
pc
);

457 
	`födgŸos
(
ls
, &ls->
dyd
->
œbñ
.
¨r
[
l
]);

458 
	}
}

464 
l_n‹ë
 
	$undefgŸo
 (
LexSèã
 *
ls
, 
Labñdesc
 *
gt
) {

465 c⁄° *
msg
 = 
	`i§e£rved
(
gt
->
«me
)

468 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, msg, 
	`gë°r
(
gt
->
«me
), gt->
löe
);

469 
	`£mîr‹
(
ls
, 
msg
);

470 
	}
}

473 
	$Àaveblock
 (
FuncSèã
 *
fs
) {

474 
BlockC¡
 *
bl
 = 
fs
->bl;

475 
LexSèã
 *
ls
 = 
fs
->ls;

476 i‡(
bl
->
¥evious
 && bl->
upvÆ
) {

478 
j
 = 
	`luaK_jump
(
fs
);

479 
	`luaK_∑tch˛o£
(
fs
, 
j
, 
bl
->
«˘v¨
);

480 
	`luaK_∑tchtohîe
(
fs
, 
j
);

482 i‡(
bl
->
i¶o›
)

483 
	`bªakœbñ
(
ls
);

484 
fs
->
bl
 = bl->
¥evious
;

485 
	`ªmovev¨s
(
fs
, 
bl
->
«˘v¨
);

486 
	`lua_as£π
(
bl
->
«˘v¨
 =
fs
->nactvar);

487 
fs
->
‰ìªg
 = fs->
«˘v¨
;

488 
ls
->
dyd
->
œbñ
.
n
 = 
bl
->
fú°œbñ
;

489 i‡(
bl
->
¥evious
)

490 
	`movegŸosout
(
fs
, 
bl
);

491 i‡(
bl
->
fú°gŸo
 < 
ls
->
dyd
->
gt
.
n
)

492 
	`undefgŸo
(
ls
, &ls->
dyd
->
gt
.
¨r
[
bl
->
fú°gŸo
]);

493 
	}
}

499 
PrŸo
 *
	$add¥ŸŸy≥
 (
LexSèã
 *
ls
) {

500 
PrŸo
 *
˛p
;

501 
lua_Sèã
 *
L
 = 
ls
->L;

502 
FuncSèã
 *
fs
 = 
ls
->fs;

503 
PrŸo
 *
f
 = 
fs
->f;

504 i‡(
fs
->
≈
 >
f
->
sizï
) {

505 
ﬁdsize
 = 
f
->
sizï
;

506 
	`luaM_growve˘‹
(
L
, 
f
->
p
, 
fs
->
≈
, f->
sizï
, 
PrŸo
 *, 
MAXARG_Bx
, "functions");

507 
ﬁdsize
 < 
f
->
sizï
)

508 
f
->
p
[
ﬁdsize
++] = 
NULL
;

510 
f
->
p
[
fs
->
≈
++] = 
˛p
 = 
	`luaF_√w¥Ÿo
(
L
);

511 
	`luaC_objb¨rõr
(
L
, 
f
, 
˛p
);

512  
˛p
;

513 
	}
}

522 
	$code˛osuª
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

523 
FuncSèã
 *
fs
 = 
ls
->fs->
¥ev
;

524 
	`öô_exp
(
v
, 
VRELOCABLE
, 
	`luaK_codeABx
(
fs
, 
OP_CLOSURE
, 0, fs->
≈
 - 1));

525 
	`luaK_exp2√xåeg
(
fs
, 
v
);

526 
	}
}

529 
	$›í_func
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

530 
PrŸo
 *
f
;

531 
fs
->
¥ev
 = 
ls
->fs;

532 
fs
->
ls
 =Üs;

533 
ls
->
fs
 = fs;

534 
fs
->
pc
 = 0;

535 
fs
->
œ°èrgë
 = 0;

536 
fs
->
jpc
 = 
NO_JUMP
;

537 
fs
->
‰ìªg
 = 0;

538 
fs
->
nk
 = 0;

539 
fs
->
≈
 = 0;

540 
fs
->
nups
 = 0;

541 
fs
->
∆ocv¨s
 = 0;

542 
fs
->
«˘v¨
 = 0;

543 
fs
->
fú°loˇl
 = 
ls
->
dyd
->
a˘v¨
.
n
;

544 
fs
->
bl
 = 
NULL
;

545 
f
 = 
fs
->f;

546 
f
->
sour˚
 = 
ls
->source;

547 
f
->
max°acksize
 = 2;

548 
	`íãrblock
(
fs
, 
bl
, 0);

549 
	}
}

552 
	$˛o£_func
 (
LexSèã
 *
ls
) {

553 
lua_Sèã
 *
L
 = 
ls
->L;

554 
FuncSèã
 *
fs
 = 
ls
->fs;

555 
PrŸo
 *
f
 = 
fs
->f;

556 
	`luaK_ªt
(
fs
, 0, 0);

557 
	`Àaveblock
(
fs
);

558 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
code
, f->
sizecode
, 
fs
->
pc
, 
In°ru˘i⁄
);

559 
f
->
sizecode
 = 
fs
->
pc
;

560 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
, 
fs
->
pc
, );

561 
f
->
sizñöeöfo
 = 
fs
->
pc
;

562 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
k
, f->
sizek
, 
fs
->
nk
, 
TVÆue
);

563 
f
->
sizek
 = 
fs
->
nk
;

564 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
p
, f->
sizï
, 
fs
->
≈
, 
PrŸo
 *);

565 
f
->
sizï
 = 
fs
->
≈
;

566 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
, 
fs
->
∆ocv¨s
, 
LocV¨
);

567 
f
->
sizñocv¨s
 = 
fs
->
∆ocv¨s
;

568 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
, 
fs
->
nups
, 
UpvÆdesc
);

569 
f
->
sizeupvÆues
 = 
fs
->
nups
;

570 
	`lua_as£π
(
fs
->
bl
 =
NULL
);

571 
ls
->
fs
 = fs->
¥ev
;

572 
	`luaC_checkGC
(
L
);

573 
	}
}

587 
	$block_fﬁlow
 (
LexSèã
 *
ls
, 
wôhu¡û
) {

588 
ls
->
t
.
tokí
) {

589 
TK_ELSE
: 
TK_ELSEIF
:

590 
TK_END
: 
TK_EOS
:

592 
TK_UNTIL
:  
wôhu¡û
;

595 
	}
}

598 
	$°©li°
 (
LexSèã
 *
ls
) {

600 !
	`block_fﬁlow
(
ls
, 1)) {

601 i‡(
ls
->
t
.
tokí
 =
TK_RETURN
) {

602 
	`°©emít
(
ls
);

605 
	`°©emít
(
ls
);

607 
	}
}

610 
	$fõld£l
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

612 
FuncSèã
 *
fs
 = 
ls
->fs;

613 
expdesc
 
key
;

614 
	`luaK_exp2™yªgup
(
fs
, 
v
);

615 
	`luaX_√xt
(
ls
);

616 
	`check«me
(
ls
, &
key
);

617 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

618 
	}
}

621 
	$yödex
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

623 
	`luaX_√xt
(
ls
);

624 
	`ex¥
(
ls
, 
v
);

625 
	`luaK_exp2vÆ
(
ls
->
fs
, 
v
);

626 
	`check√xt
(
ls
, ']');

627 
	}
}

637 
	sC⁄sC⁄åﬁ
 {

638 
expdesc
 
	mv
;

639 
expdesc
 *
	mt
;

640 
	mnh
;

641 
	m«
;

642 
	mto°‹e
;

646 
	$ªcfõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

648 
FuncSèã
 *
fs
 = 
ls
->fs;

649 
ªg
 = 
ls
->
fs
->
‰ìªg
;

650 
expdesc
 
key
, 
vÆ
;

651 
rkkey
;

652 i‡(
ls
->
t
.
tokí
 =
TK_NAME
) {

653 
	`checklimô
(
fs
, 
cc
->
nh
, 
MAX_INT
, "items iná constructor");

654 
	`check«me
(
ls
, &
key
);

657 
	`yödex
(
ls
, &
key
);

658 
cc
->
nh
++;

659 
	`check√xt
(
ls
, '=');

660 
rkkey
 = 
	`luaK_exp2RK
(
fs
, &
key
);

661 
	`ex¥
(
ls
, &
vÆ
);

662 
	`luaK_codeABC
(
fs
, 
OP_SETTABLE
, 
cc
->
t
->
u
.
öfo
, 
rkkey
, 
	`luaK_exp2RK
(fs, &
vÆ
));

663 
fs
->
‰ìªg
 = 
ªg
;

664 
	}
}

667 
	$˛o£li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

668 i‡(
cc
->
v
.
k
 =
VVOID
) ;

669 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

670 
cc
->
v
.
k
 = 
VVOID
;

671 i‡(
cc
->
to°‹e
 =
LFIELDS_PER_FLUSH
) {

672 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

673 
cc
->
to°‹e
 = 0;

675 
	}
}

678 
	$œ°li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

679 i‡(
cc
->
to°‹e
 == 0) ;

680 i‡(
	`hasmu…ªt
(
cc
->
v
.
k
)) {

681 
	`luaK_£tmu…ªt
(
fs
, &
cc
->
v
);

682 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, 
LUA_MULTRET
);

683 
cc
->
«
--;

686 i‡(
cc
->
v
.
k
 !
VVOID
)

687 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

688 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

690 
	}
}

693 
	$li°fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

695 
	`ex¥
(
ls
, &
cc
->
v
);

696 
	`checklimô
(
ls
->
fs
, 
cc
->
«
, 
MAX_INT
, "items iná constructor");

697 
cc
->
«
++;

698 
cc
->
to°‹e
++;

699 
	}
}

702 
	$fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

704 
ls
->
t
.
tokí
) {

705 
TK_NAME
: {

706 i‡(
	`luaX_lookahód
(
ls
) != '=')

707 
	`li°fõld
(
ls
, 
cc
);

709 
	`ªcfõld
(
ls
, 
cc
);

713 
	`ªcfõld
(
ls
, 
cc
);

717 
	`li°fõld
(
ls
, 
cc
);

721 
	}
}

724 
	$c⁄°ru˘‹
 (
LexSèã
 *
ls
, 
expdesc
 *
t
) {

727 
FuncSèã
 *
fs
 = 
ls
->fs;

728 
löe
 = 
ls
->
löíumbî
;

729 
pc
 = 
	`luaK_codeABC
(
fs
, 
OP_NEWTABLE
, 0, 0, 0);

730 
C⁄sC⁄åﬁ
 
cc
;

731 
cc
.
«
 = cc.
nh
 = cc.
to°‹e
 = 0;

732 
cc
.
t
 =Å;

733 
	`öô_exp
(
t
, 
VRELOCABLE
, 
pc
);

734 
	`öô_exp
(&
cc
.
v
, 
VVOID
, 0);

735 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
t
);

736 
	`check√xt
(
ls
, '{');

738 
	`lua_as£π
(
cc
.
v
.
k
 =
VVOID
 || cc.
to°‹e
 > 0);

739 i‡(
ls
->
t
.
tokí
 == '}') ;

740 
	`˛o£li°fõld
(
fs
, &
cc
);

741 
	`fõld
(
ls
, &
cc
);

742 } 
	`ã°√xt
(
ls
, ',') ||Åestnext(ls, ';'));

743 
	`check_m©ch
(
ls
, '}', '{', 
löe
);

744 
	`œ°li°fõld
(
fs
, &
cc
);

745 
	`SETARG_B
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
«
));

746 
	`SETARG_C
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
nh
));

747 
	}
}

753 
	$∑æi°
 (
LexSèã
 *
ls
) {

755 
FuncSèã
 *
fs
 = 
ls
->fs;

756 
PrŸo
 *
f
 = 
fs
->f;

757 
≈¨ams
 = 0;

758 
f
->
is_v¨¨g
 = 0;

759 i‡(
ls
->
t
.
tokí
 != ')') {

761 
ls
->
t
.
tokí
) {

762 
TK_NAME
: {

763 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

764 
≈¨ams
++;

767 
TK_DOTS
: {

768 
	`luaX_√xt
(
ls
);

769 
f
->
is_v¨¨g
 = 1;

772 : 
	`luaX_sy¡axîr‹
(
ls
, "<name> or '...'Éxpected");

774 } !
f
->
is_v¨¨g
 && 
	`ã°√xt
(
ls
, ','));

776 
	`adju°loˇlv¨s
(
ls
, 
≈¨ams
);

777 
f
->
num∑øms
 = 
	`ˇ°_byã
(
fs
->
«˘v¨
);

778 
	`luaK_ª£rvîegs
(
fs
, fs->
«˘v¨
);

779 
	}
}

782 
	$body
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
ismëhod
, 
löe
) {

784 
FuncSèã
 
√w_fs
;

785 
BlockC¡
 
bl
;

786 
√w_fs
.
f
 = 
	`add¥ŸŸy≥
(
ls
);

787 
√w_fs
.
f
->
löedeföed
 = 
löe
;

788 
	`›í_func
(
ls
, &
√w_fs
, &
bl
);

789 
	`check√xt
(
ls
, '(');

790 i‡(
ismëhod
) {

791 
	`√w_loˇlv¨lôîÆ
(
ls
, "self");

792 
	`adju°loˇlv¨s
(
ls
, 1);

794 
	`∑æi°
(
ls
);

795 
	`check√xt
(
ls
, ')');

796 
	`°©li°
(
ls
);

797 
√w_fs
.
f
->
œ°löedeföed
 = 
ls
->
löíumbî
;

798 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FUNCTION
, 
löe
);

799 
	`code˛osuª
(
ls
, 
e
);

800 
	`˛o£_func
(
ls
);

801 
	}
}

804 
	$ex∂i°
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

806 
n
 = 1;

807 
	`ex¥
(
ls
, 
v
);

808 
	`ã°√xt
(
ls
, ',')) {

809 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
v
);

810 
	`ex¥
(
ls
, 
v
);

811 
n
++;

813  
n
;

814 
	}
}

817 
	$funˇrgs
 (
LexSèã
 *
ls
, 
expdesc
 *
f
, 
löe
) {

818 
FuncSèã
 *
fs
 = 
ls
->fs;

819 
expdesc
 
¨gs
;

820 
ba£
, 
≈¨ams
;

821 
ls
->
t
.
tokí
) {

823 
	`luaX_√xt
(
ls
);

824 i‡(
ls
->
t
.
tokí
 == ')')

825 
¨gs
.
k
 = 
VVOID
;

827 
	`ex∂i°
(
ls
, &
¨gs
);

828 
	`luaK_£tmu…ªt
(
fs
, &
¨gs
);

830 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

834 
	`c⁄°ru˘‹
(
ls
, &
¨gs
);

837 
TK_STRING
: {

838 
	`code°rög
(
ls
, &
¨gs
,Üs->
t
.
£möfo
.
ts
);

839 
	`luaX_√xt
(
ls
);

843 
	`luaX_sy¡axîr‹
(
ls
, "functionárgumentsÉxpected");

846 
	`lua_as£π
(
f
->
k
 =
VNONRELOC
);

847 
ba£
 = 
f
->
u
.
öfo
;

848 i‡(
	`hasmu…ªt
(
¨gs
.
k
))

849 
≈¨ams
 = 
LUA_MULTRET
;

851 i‡(
¨gs
.
k
 !
VVOID
)

852 
	`luaK_exp2√xåeg
(
fs
, &
¨gs
);

853 
≈¨ams
 = 
fs
->
‰ìªg
 - (
ba£
+1);

855 
	`öô_exp
(
f
, 
VCALL
, 
	`luaK_codeABC
(
fs
, 
OP_CALL
, 
ba£
, 
≈¨ams
+1, 2));

856 
	`luaK_fixlöe
(
fs
, 
löe
);

857 
fs
->
‰ìªg
 = 
ba£
+1;

859 
	}
}

871 
	$¥im¨yexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

873 
ls
->
t
.
tokí
) {

875 
löe
 = 
ls
->
löíumbî
;

876 
	`luaX_√xt
(
ls
);

877 
	`ex¥
(
ls
, 
v
);

878 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

879 
	`luaK_disch¨gev¨s
(
ls
->
fs
, 
v
);

882 
TK_NAME
: {

883 
	`sögÀv¨
(
ls
, 
v
);

887 
	`luaX_sy¡axîr‹
(
ls
, "unexpected symbol");

890 
	}
}

893 
	$suffixedexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

896 
FuncSèã
 *
fs
 = 
ls
->fs;

897 
löe
 = 
ls
->
löíumbî
;

898 
	`¥im¨yexp
(
ls
, 
v
);

900 
ls
->
t
.
tokí
) {

902 
	`fõld£l
(
ls
, 
v
);

906 
expdesc
 
key
;

907 
	`luaK_exp2™yªgup
(
fs
, 
v
);

908 
	`yödex
(
ls
, &
key
);

909 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

913 
expdesc
 
key
;

914 
	`luaX_√xt
(
ls
);

915 
	`check«me
(
ls
, &
key
);

916 
	`luaK_£lf
(
fs
, 
v
, &
key
);

917 
	`funˇrgs
(
ls
, 
v
, 
löe
);

920 '(': 
TK_STRING
: '{': {

921 
	`luaK_exp2√xåeg
(
fs
, 
v
);

922 
	`funˇrgs
(
ls
, 
v
, 
löe
);

928 
	}
}

931 
	$sim∂ìxp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

934 
ls
->
t
.
tokí
) {

935 
TK_FLT
: {

936 
	`öô_exp
(
v
, 
VKFLT
, 0);

937 
v
->
u
.
nvÆ
 = 
ls
->
t
.
£möfo
.
r
;

940 
TK_INT
: {

941 
	`öô_exp
(
v
, 
VKINT
, 0);

942 
v
->
u
.
ivÆ
 = 
ls
->
t
.
£möfo
.
i
;

945 
TK_STRING
: {

946 
	`code°rög
(
ls
, 
v
,Üs->
t
.
£möfo
.
ts
);

949 
TK_NIL
: {

950 
	`öô_exp
(
v
, 
VNIL
, 0);

953 
TK_TRUE
: {

954 
	`öô_exp
(
v
, 
VTRUE
, 0);

957 
TK_FALSE
: {

958 
	`öô_exp
(
v
, 
VFALSE
, 0);

961 
TK_DOTS
: {

962 
FuncSèã
 *
fs
 = 
ls
->fs;

963 
	`check_c⁄dôi⁄
(
ls
, 
fs
->
f
->
is_v¨¨g
,

965 
	`öô_exp
(
v
, 
VVARARG
, 
	`luaK_codeABC
(
fs
, 
OP_VARARG
, 0, 1, 0));

969 
	`c⁄°ru˘‹
(
ls
, 
v
);

972 
TK_FUNCTION
: {

973 
	`luaX_√xt
(
ls
);

974 
	`body
(
ls
, 
v
, 0,Üs->
löíumbî
);

978 
	`suffixedexp
(
ls
, 
v
);

982 
	`luaX_√xt
(
ls
);

983 
	}
}

986 
UnO¥
 
	$gëun›r
 (
›
) {

987 
›
) {

988 
TK_NOT
:  
OPR_NOT
;

989 '-':  
OPR_MINUS
;

990 '~':  
OPR_BNOT
;

991 '#':  
OPR_LEN
;

992 :  
OPR_NOUNOPR
;

994 
	}
}

997 
BöO¥
 
	$gëbö›r
 (
›
) {

998 
›
) {

999 '+':  
OPR_ADD
;

1000 '-':  
OPR_SUB
;

1001 '*':  
OPR_MUL
;

1002 '%':  
OPR_MOD
;

1003 '^':  
OPR_POW
;

1004 '/':  
OPR_DIV
;

1005 
TK_IDIV
:  
OPR_IDIV
;

1006 '&':  
OPR_BAND
;

1007 '|':  
OPR_BOR
;

1008 '~':  
OPR_BXOR
;

1009 
TK_SHL
:  
OPR_SHL
;

1010 
TK_SHR
:  
OPR_SHR
;

1011 
TK_CONCAT
:  
OPR_CONCAT
;

1012 
TK_NE
:  
OPR_NE
;

1013 
TK_EQ
:  
OPR_EQ
;

1014 '<':  
OPR_LT
;

1015 
TK_LE
:  
OPR_LE
;

1016 '>':  
OPR_GT
;

1017 
TK_GE
:  
OPR_GE
;

1018 
TK_AND
:  
OPR_AND
;

1019 
TK_OR
:  
OPR_OR
;

1020 :  
OPR_NOBINOPR
;

1022 
	}
}

1026 
lu_byã
 
	mÀ·
;

1027 
lu_byã
 
	mright
;

1028 } 
	g¥i‹ôy
[] = {

1041 
	#UNARY_PRIORITY
 12

	)

1048 
BöO¥
 
	$subex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
, 
limô
) {

1049 
BöO¥
 
›
;

1050 
UnO¥
 
u›
;

1051 
	`íãæevñ
(
ls
);

1052 
u›
 = 
	`gëun›r
(
ls
->
t
.
tokí
);

1053 i‡(
u›
 !
OPR_NOUNOPR
) {

1054 
löe
 = 
ls
->
löíumbî
;

1055 
	`luaX_√xt
(
ls
);

1056 
	`subex¥
(
ls
, 
v
, 
UNARY_PRIORITY
);

1057 
	`luaK_¥efix
(
ls
->
fs
, 
u›
, 
v
, 
löe
);

1059 
	`sim∂ìxp
(
ls
, 
v
);

1061 
›
 = 
	`gëbö›r
(
ls
->
t
.
tokí
);

1062 
›
 !
OPR_NOBINOPR
 && 
¥i‹ôy
[›].
À·
 > 
limô
) {

1063 
expdesc
 
v2
;

1064 
BöO¥
 
√xt›
;

1065 
löe
 = 
ls
->
löíumbî
;

1066 
	`luaX_√xt
(
ls
);

1067 
	`luaK_öfix
(
ls
->
fs
, 
›
, 
v
);

1069 
√xt›
 = 
	`subex¥
(
ls
, &
v2
, 
¥i‹ôy
[
›
].
right
);

1070 
	`luaK_posfix
(
ls
->
fs
, 
›
, 
v
, &
v2
, 
löe
);

1071 
›
 = 
√xt›
;

1073 
	`Àavñevñ
(
ls
);

1074  
›
;

1075 
	}
}

1078 
	$ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1079 
	`subex¥
(
ls
, 
v
, 0);

1080 
	}
}

1093 
	$block
 (
LexSèã
 *
ls
) {

1095 
FuncSèã
 *
fs
 = 
ls
->fs;

1096 
BlockC¡
 
bl
;

1097 
	`íãrblock
(
fs
, &
bl
, 0);

1098 
	`°©li°
(
ls
);

1099 
	`Àaveblock
(
fs
);

1100 
	}
}

1107 
	sLHS_assign
 {

1108 
LHS_assign
 *
	m¥ev
;

1109 
expdesc
 
	mv
;

1119 
	$check_c⁄Êi˘
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
expdesc
 *
v
) {

1120 
FuncSèã
 *
fs
 = 
ls
->fs;

1121 
exåa
 = 
fs
->
‰ìªg
;

1122 
c⁄Êi˘
 = 0;

1123 ; 
lh
;Üh =Üh->
¥ev
) {

1124 i‡(
lh
->
v
.
k
 =
VINDEXED
) {

1126 i‡(
lh
->
v
.
u
.
öd
.
vt
 =v->
k
 &&Üh->v.u.öd.
t
 =v->u.
öfo
) {

1127 
c⁄Êi˘
 = 1;

1128 
lh
->
v
.
u
.
öd
.
vt
 = 
VLOCAL
;

1129 
lh
->
v
.
u
.
öd
.
t
 = 
exåa
;

1132 i‡(
v
->
k
 =
VLOCAL
 && 
lh
->v.
u
.
öd
.
idx
 =v->u.
öfo
) {

1133 
c⁄Êi˘
 = 1;

1134 
lh
->
v
.
u
.
öd
.
idx
 = 
exåa
;

1138 i‡(
c⁄Êi˘
) {

1140 
OpCode
 
›
 = (
v
->
k
 =
VLOCAL
Ë? 
OP_MOVE
 : 
OP_GETUPVAL
;

1141 
	`luaK_codeABC
(
fs
, 
›
, 
exåa
, 
v
->
u
.
öfo
, 0);

1142 
	`luaK_ª£rvîegs
(
fs
, 1);

1144 
	}
}

1147 
	$assignmít
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
nv¨s
) {

1148 
expdesc
 
e
;

1149 
	`check_c⁄dôi⁄
(
ls
, 
	`vkisv¨
(
lh
->
v
.
k
), "syntaxÉrror");

1150 i‡(
	`ã°√xt
(
ls
, ',')) {

1151 
LHS_assign
 
nv
;

1152 
nv
.
¥ev
 = 
lh
;

1153 
	`suffixedexp
(
ls
, &
nv
.
v
);

1154 i‡(
nv
.
v
.
k
 !
VINDEXED
)

1155 
	`check_c⁄Êi˘
(
ls
, 
lh
, &
nv
.
v
);

1156 
	`checklimô
(
ls
->
fs
, 
nv¨s
 +Üs->
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
,

1158 
	`assignmít
(
ls
, &
nv
, 
nv¨s
+1);

1161 
√xps
;

1162 
	`check√xt
(
ls
, '=');

1163 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1164 i‡(
√xps
 !
nv¨s
)

1165 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1167 
	`luaK_£t⁄îë
(
ls
->
fs
, &
e
);

1168 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1172 
	`öô_exp
(&
e
, 
VNONRELOC
, 
ls
->
fs
->
‰ìªg
-1);

1173 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1174 
	}
}

1177 
	$c⁄d
 (
LexSèã
 *
ls
) {

1179 
expdesc
 
v
;

1180 
	`ex¥
(
ls
, &
v
);

1181 i‡(
v
.
k
 =
VNIL
Ëv.k = 
VFALSE
;

1182 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1183  
v
.
f
;

1184 
	}
}

1187 
	$gŸo°©
 (
LexSèã
 *
ls
, 
pc
) {

1188 
löe
 = 
ls
->
löíumbî
;

1189 
TSåög
 *
œbñ
;

1190 
g
;

1191 i‡(
	`ã°√xt
(
ls
, 
TK_GOTO
))

1192 
œbñ
 = 
	`°r_check«me
(
ls
);

1194 
	`luaX_√xt
(
ls
);

1195 
œbñ
 = 
	`luaS_√w
(
ls
->
L
, "break");

1197 
g
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
gt
, 
œbñ
, 
löe
, 
pc
);

1198 
	`födœbñ
(
ls
, 
g
);

1199 
	}
}

1203 
	$checkª≥©ed
 (
FuncSèã
 *
fs
, 
Labñli°
 *
Œ
, 
TSåög
 *
œbñ
) {

1204 
i
;

1205 
i
 = 
fs
->
bl
->
fú°œbñ
; i < 
Œ
->
n
; i++) {

1206 i‡(
	`eq°r
(
œbñ
, 
Œ
->
¨r
[
i
].
«me
)) {

1207 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
fs
->
ls
->
L
,

1209 
	`gë°r
(
œbñ
), 
Œ
->
¨r
[
i
].
löe
);

1210 
	`£mîr‹
(
fs
->
ls
, 
msg
);

1213 
	}
}

1217 
	$skùno›°©
 (
LexSèã
 *
ls
) {

1218 
ls
->
t
.
tokí
 =';' ||Üs->t.tokí =
TK_DBCOLON
)

1219 
	`°©emít
(
ls
);

1220 
	}
}

1223 
	$œbñ°©
 (
LexSèã
 *
ls
, 
TSåög
 *
œbñ
, 
löe
) {

1225 
FuncSèã
 *
fs
 = 
ls
->fs;

1226 
Labñli°
 *
Œ
 = &
ls
->
dyd
->
œbñ
;

1227 
l
;

1228 
	`checkª≥©ed
(
fs
, 
Œ
, 
œbñ
);

1229 
	`check√xt
(
ls
, 
TK_DBCOLON
);

1231 
l
 = 
	`√wœbñíåy
(
ls
, 
Œ
, 
œbñ
, 
löe
, 
	`luaK_gëœbñ
(
fs
));

1232 
	`skùno›°©
(
ls
);

1233 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1235 
Œ
->
¨r
[
l
].
«˘v¨
 = 
fs
->
bl
->nactvar;

1237 
	`födgŸos
(
ls
, &
Œ
->
¨r
[
l
]);

1238 
	}
}

1241 
	$whûe°©
 (
LexSèã
 *
ls
, 
löe
) {

1243 
FuncSèã
 *
fs
 = 
ls
->fs;

1244 
whûeöô
;

1245 
c⁄dexô
;

1246 
BlockC¡
 
bl
;

1247 
	`luaX_√xt
(
ls
);

1248 
whûeöô
 = 
	`luaK_gëœbñ
(
fs
);

1249 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1250 
	`íãrblock
(
fs
, &
bl
, 1);

1251 
	`check√xt
(
ls
, 
TK_DO
);

1252 
	`block
(
ls
);

1253 
	`luaK_jum±o
(
fs
, 
whûeöô
);

1254 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_WHILE
, 
löe
);

1255 
	`Àaveblock
(
fs
);

1256 
	`luaK_∑tchtohîe
(
fs
, 
c⁄dexô
);

1257 
	}
}

1260 
	$ª≥©°©
 (
LexSèã
 *
ls
, 
löe
) {

1262 
c⁄dexô
;

1263 
FuncSèã
 *
fs
 = 
ls
->fs;

1264 
ª≥©_öô
 = 
	`luaK_gëœbñ
(
fs
);

1265 
BlockC¡
 
bl1
, 
bl2
;

1266 
	`íãrblock
(
fs
, &
bl1
, 1);

1267 
	`íãrblock
(
fs
, &
bl2
, 0);

1268 
	`luaX_√xt
(
ls
);

1269 
	`°©li°
(
ls
);

1270 
	`check_m©ch
(
ls
, 
TK_UNTIL
, 
TK_REPEAT
, 
löe
);

1271 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1272 i‡(
bl2
.
upvÆ
)

1273 
	`luaK_∑tch˛o£
(
fs
, 
c⁄dexô
, 
bl2
.
«˘v¨
);

1274 
	`Àaveblock
(
fs
);

1275 
	`luaK_∑tchli°
(
fs
, 
c⁄dexô
, 
ª≥©_öô
);

1276 
	`Àaveblock
(
fs
);

1277 
	}
}

1280 
	$exp1
 (
LexSèã
 *
ls
) {

1281 
expdesc
 
e
;

1282 
ªg
;

1283 
	`ex¥
(
ls
, &
e
);

1284 
	`luaK_exp2√xåeg
(
ls
->
fs
, &
e
);

1285 
	`lua_as£π
(
e
.
k
 =
VNONRELOC
);

1286 
ªg
 = 
e
.
u
.
öfo
;

1287  
ªg
;

1288 
	}
}

1291 
	$f‹body
 (
LexSèã
 *
ls
, 
ba£
, 
löe
, 
nv¨s
, 
i¢um
) {

1293 
BlockC¡
 
bl
;

1294 
FuncSèã
 *
fs
 = 
ls
->fs;

1295 
¥ï
, 
ídf‹
;

1296 
	`adju°loˇlv¨s
(
ls
, 3);

1297 
	`check√xt
(
ls
, 
TK_DO
);

1298 
¥ï
 = 
i¢um
 ? 
	`luaK_codeAsBx
(
fs
, 
OP_FORPREP
, 
ba£
, 
NO_JUMP
Ë: 
	`luaK_jump
(fs);

1299 
	`íãrblock
(
fs
, &
bl
, 0);

1300 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1301 
	`luaK_ª£rvîegs
(
fs
, 
nv¨s
);

1302 
	`block
(
ls
);

1303 
	`Àaveblock
(
fs
);

1304 
	`luaK_∑tchtohîe
(
fs
, 
¥ï
);

1305 i‡(
i¢um
)

1306 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_FORLOOP
, 
ba£
, 
NO_JUMP
);

1308 
	`luaK_codeABC
(
fs
, 
OP_TFORCALL
, 
ba£
, 0, 
nv¨s
);

1309 
	`luaK_fixlöe
(
fs
, 
löe
);

1310 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_TFORLOOP
, 
ba£
 + 2, 
NO_JUMP
);

1312 
	`luaK_∑tchli°
(
fs
, 
ídf‹
, 
¥ï
 + 1);

1313 
	`luaK_fixlöe
(
fs
, 
löe
);

1314 
	}
}

1317 
	$f‹num
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
, 
löe
) {

1319 
FuncSèã
 *
fs
 = 
ls
->fs;

1320 
ba£
 = 
fs
->
‰ìªg
;

1321 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for index)");

1322 
	`√w_loˇlv¨lôîÆ
(
ls
, "(forÜimit)");

1323 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for step)");

1324 
	`√w_loˇlv¨
(
ls
, 
v¨«me
);

1325 
	`check√xt
(
ls
, '=');

1326 
	`exp1
(
ls
);

1327 
	`check√xt
(
ls
, ',');

1328 
	`exp1
(
ls
);

1329 i‡(
	`ã°√xt
(
ls
, ','))

1330 
	`exp1
(
ls
);

1332 
	`luaK_codek
(
fs
, fs->
‰ìªg
, 
	`luaK_ötK
(fs, 1));

1333 
	`luaK_ª£rvîegs
(
fs
, 1);

1335 
	`f‹body
(
ls
, 
ba£
, 
löe
, 1, 1);

1336 
	}
}

1339 
	$f‹li°
 (
LexSèã
 *
ls
, 
TSåög
 *
ödex«me
) {

1341 
FuncSèã
 *
fs
 = 
ls
->fs;

1342 
expdesc
 
e
;

1343 
nv¨s
 = 4;

1344 
löe
;

1345 
ba£
 = 
fs
->
‰ìªg
;

1347 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for generator)");

1348 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for state)");

1349 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for control)");

1351 
	`√w_loˇlv¨
(
ls
, 
ödex«me
);

1352 
	`ã°√xt
(
ls
, ',')) {

1353 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1354 
nv¨s
++;

1356 
	`check√xt
(
ls
, 
TK_IN
);

1357 
löe
 = 
ls
->
löíumbî
;

1358 
	`adju°_assign
(
ls
, 3, 
	`ex∂i°
÷s, &
e
), &e);

1359 
	`luaK_check°ack
(
fs
, 3);

1360 
	`f‹body
(
ls
, 
ba£
, 
löe
, 
nv¨s
 - 3, 0);

1361 
	}
}

1364 
	$f‹°©
 (
LexSèã
 *
ls
, 
löe
) {

1366 
FuncSèã
 *
fs
 = 
ls
->fs;

1367 
TSåög
 *
v¨«me
;

1368 
BlockC¡
 
bl
;

1369 
	`íãrblock
(
fs
, &
bl
, 1);

1370 
	`luaX_√xt
(
ls
);

1371 
v¨«me
 = 
	`°r_check«me
(
ls
);

1372 
ls
->
t
.
tokí
) {

1373 '=': 
	`f‹num
(
ls
, 
v¨«me
, 
löe
); ;

1374 ',': 
TK_IN
: 
	`f‹li°
(
ls
, 
v¨«me
); ;

1375 : 
	`luaX_sy¡axîr‹
(
ls
, "'=' or 'in'Éxpected");

1377 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FOR
, 
löe
);

1378 
	`Àaveblock
(
fs
);

1379 
	}
}

1382 
	$ã°_thí_block
 (
LexSèã
 *
ls
, *
esˇ≥li°
) {

1384 
BlockC¡
 
bl
;

1385 
FuncSèã
 *
fs
 = 
ls
->fs;

1386 
expdesc
 
v
;

1387 
jf
;

1388 
	`luaX_√xt
(
ls
);

1389 
	`ex¥
(
ls
, &
v
);

1390 
	`check√xt
(
ls
, 
TK_THEN
);

1391 i‡(
ls
->
t
.
tokí
 =
TK_GOTO
 ||Üs->t.tokí =
TK_BREAK
) {

1392 
	`luaK_goifÁl£
(
ls
->
fs
, &
v
);

1393 
	`íãrblock
(
fs
, &
bl
, 0);

1394 
	`gŸo°©
(
ls
, 
v
.
t
);

1395 
	`ã°√xt
(
ls
, ';')) {}

1396 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1397 
	`Àaveblock
(
fs
);

1401 
jf
 = 
	`luaK_jump
(
fs
);

1404 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1405 
	`íãrblock
(
fs
, &
bl
, 0);

1406 
jf
 = 
v
.
f
;

1408 
	`°©li°
(
ls
);

1409 
	`Àaveblock
(
fs
);

1410 i‡(
ls
->
t
.
tokí
 =
TK_ELSE
 ||

1411 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1412 
	`luaK_c⁄ˇt
(
fs
, 
esˇ≥li°
, 
	`luaK_jump
(fs));

1413 
	`luaK_∑tchtohîe
(
fs
, 
jf
);

1414 
	}
}

1417 
	$if°©
 (
LexSèã
 *
ls
, 
löe
) {

1419 
FuncSèã
 *
fs
 = 
ls
->fs;

1420 
esˇ≥li°
 = 
NO_JUMP
;

1421 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1422 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1423 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1424 i‡(
	`ã°√xt
(
ls
, 
TK_ELSE
))

1425 
	`block
(
ls
);

1426 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_IF
, 
löe
);

1427 
	`luaK_∑tchtohîe
(
fs
, 
esˇ≥li°
);

1428 
	}
}

1431 
	$loˇlfunc
 (
LexSèã
 *
ls
) {

1432 
expdesc
 
b
;

1433 
FuncSèã
 *
fs
 = 
ls
->fs;

1434 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1435 
	`adju°loˇlv¨s
(
ls
, 1);

1436 
	`body
(
ls
, &
b
, 0,Üs->
löíumbî
);

1438 
	`gëlocv¨
(
fs
, 
b
.
u
.
öfo
)->
°¨çc
 = fs->
pc
;

1439 
	}
}

1442 
	$loˇl°©
 (
LexSèã
 *
ls
) {

1444 
nv¨s
 = 0;

1445 
√xps
;

1446 
expdesc
 
e
;

1448 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1449 
nv¨s
++;

1450 } 
	`ã°√xt
(
ls
, ','));

1451 i‡(
	`ã°√xt
(
ls
, '='))

1452 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1454 
e
.
k
 = 
VVOID
;

1455 
√xps
 = 0;

1457 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1458 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1459 
	}
}

1462 
	$fun˙ame
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1464 
ismëhod
 = 0;

1465 
	`sögÀv¨
(
ls
, 
v
);

1466 
ls
->
t
.
tokí
 == '.')

1467 
	`fõld£l
(
ls
, 
v
);

1468 i‡(
ls
->
t
.
tokí
 == ':') {

1469 
ismëhod
 = 1;

1470 
	`fõld£l
(
ls
, 
v
);

1472  
ismëhod
;

1473 
	}
}

1476 
	$func°©
 (
LexSèã
 *
ls
, 
löe
) {

1478 
ismëhod
;

1479 
expdesc
 
v
, 
b
;

1480 
	`luaX_√xt
(
ls
);

1481 
ismëhod
 = 
	`fun˙ame
(
ls
, &
v
);

1482 
	`body
(
ls
, &
b
, 
ismëhod
, 
löe
);

1483 
	`luaK_°‹ev¨
(
ls
->
fs
, &
v
, &
b
);

1484 
	`luaK_fixlöe
(
ls
->
fs
, 
löe
);

1485 
	}
}

1488 
	$ex¥°©
 (
LexSèã
 *
ls
) {

1490 
FuncSèã
 *
fs
 = 
ls
->fs;

1491 
LHS_assign
 
v
;

1492 
	`suffixedexp
(
ls
, &
v
.v);

1493 i‡(
ls
->
t
.
tokí
 == '=' ||Üs->t.token == ',') {

1494 
v
.
¥ev
 = 
NULL
;

1495 
	`assignmít
(
ls
, &
v
, 1);

1498 
	`check_c⁄dôi⁄
(
ls
, 
v
.v.
k
 =
VCALL
, "syntaxÉrror");

1499 
	`SETARG_C
(
	`gëö°ru˘i⁄
(
fs
, &
v
.v), 1);

1501 
	}
}

1504 
	$ªt°©
 (
LexSèã
 *
ls
) {

1506 
FuncSèã
 *
fs
 = 
ls
->fs;

1507 
expdesc
 
e
;

1508 
fú°
, 
ƒë
;

1509 i‡(
	`block_fﬁlow
(
ls
, 1Ë||Üs->
t
.
tokí
 == ';')

1510 
fú°
 = 
ƒë
 = 0;

1512 
ƒë
 = 
	`ex∂i°
(
ls
, &
e
);

1513 i‡(
	`hasmu…ªt
(
e
.
k
)) {

1514 
	`luaK_£tmu…ªt
(
fs
, &
e
);

1515 i‡(
e
.
k
 =
VCALL
 && 
ƒë
 == 1) {

1516 
	`SET_OPCODE
(
	`gëö°ru˘i⁄
(
fs
,&
e
), 
OP_TAILCALL
);

1517 
	`lua_as£π
(
	`GETARG_A
(
	`gëö°ru˘i⁄
(
fs
,&
e
)Ë=fs->
«˘v¨
);

1519 
fú°
 = 
fs
->
«˘v¨
;

1520 
ƒë
 = 
LUA_MULTRET
;

1523 i‡(
ƒë
 == 1)

1524 
fú°
 = 
	`luaK_exp2™yªg
(
fs
, &
e
);

1526 
	`luaK_exp2√xåeg
(
fs
, &
e
);

1527 
fú°
 = 
fs
->
«˘v¨
;

1528 
	`lua_as£π
(
ƒë
 =
fs
->
‰ìªg
 - 
fú°
);

1532 
	`luaK_ªt
(
fs
, 
fú°
, 
ƒë
);

1533 
	`ã°√xt
(
ls
, ';');

1534 
	}
}

1537 
	$°©emít
 (
LexSèã
 *
ls
) {

1538 
löe
 = 
ls
->
löíumbî
;

1539 
	`íãæevñ
(
ls
);

1540 
ls
->
t
.
tokí
) {

1542 
	`luaX_√xt
(
ls
);

1545 
TK_IF
: {

1546 
	`if°©
(
ls
, 
löe
);

1549 
TK_WHILE
: {

1550 
	`whûe°©
(
ls
, 
löe
);

1553 
TK_DO
: {

1554 
	`luaX_√xt
(
ls
);

1555 
	`block
(
ls
);

1556 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_DO
, 
löe
);

1559 
TK_FOR
: {

1560 
	`f‹°©
(
ls
, 
löe
);

1563 
TK_REPEAT
: {

1564 
	`ª≥©°©
(
ls
, 
löe
);

1567 
TK_FUNCTION
: {

1568 
	`func°©
(
ls
, 
löe
);

1571 
TK_LOCAL
: {

1572 
	`luaX_√xt
(
ls
);

1573 i‡(
	`ã°√xt
(
ls
, 
TK_FUNCTION
))

1574 
	`loˇlfunc
(
ls
);

1576 
	`loˇl°©
(
ls
);

1579 
TK_DBCOLON
: {

1580 
	`luaX_√xt
(
ls
);

1581 
	`œbñ°©
(
ls
, 
	`°r_check«me
÷s), 
löe
);

1584 
TK_RETURN
: {

1585 
	`luaX_√xt
(
ls
);

1586 
	`ªt°©
(
ls
);

1589 
TK_BREAK
:

1590 
TK_GOTO
: {

1591 
	`gŸo°©
(
ls
, 
	`luaK_jump
÷s->
fs
));

1595 
	`ex¥°©
(
ls
);

1599 
	`lua_as£π
(
ls
->
fs
->
f
->
max°acksize
 >ls->fs->
‰ìªg
 &&

1600 
ls
->
fs
->
‰ìªg
 >ls->fs->
«˘v¨
);

1601 
ls
->
fs
->
‰ìªg
 =Üs->fs->
«˘v¨
;

1602 
	`Àavñevñ
(
ls
);

1603 
	}
}

1612 
	$maöfunc
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
) {

1613 
BlockC¡
 
bl
;

1614 
expdesc
 
v
;

1615 
	`›í_func
(
ls
, 
fs
, &
bl
);

1616 
fs
->
f
->
is_v¨¨g
 = 1;

1617 
	`öô_exp
(&
v
, 
VLOCAL
, 0);

1618 
	`√wupvÆue
(
fs
, 
ls
->
ívn
, &
v
);

1619 
	`luaX_√xt
(
ls
);

1620 
	`°©li°
(
ls
);

1621 
	`check
(
ls
, 
TK_EOS
);

1622 
	`˛o£_func
(
ls
);

1623 
	}
}

1626 
LClosuª
 *
	$luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

1627 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
) {

1628 
LexSèã
 
Àx°©e
;

1629 
FuncSèã
 
func°©e
;

1630 
LClosuª
 *
˛
 = 
	`luaF_√wL˛osuª
(
L
, 1);

1631 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

1632 
	`luaD_ö˘›
(
L
);

1633 
Àx°©e
.
h
 = 
	`luaH_√w
(
L
);

1634 
	`£thvÆue
(
L
, L->
t›
, 
Àx°©e
.
h
);

1635 
	`luaD_ö˘›
(
L
);

1636 
func°©e
.
f
 = 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

1637 
func°©e
.
f
->
sour˚
 = 
	`luaS_√w
(
L
, 
«me
);

1638 
	`lua_as£π
(
	`iswhôe
(
func°©e
.
f
));

1639 
Àx°©e
.
buff
 = buff;

1640 
Àx°©e
.
dyd
 = dyd;

1641 
dyd
->
a˘v¨
.
n
 = dyd->
gt
.¿dyd->
œbñ
.n = 0;

1642 
	`luaX_£töput
(
L
, &
Àx°©e
, 
z
, 
func°©e
.
f
->
sour˚
, 
fú°ch¨
);

1643 
	`maöfunc
(&
Àx°©e
, &
func°©e
);

1644 
	`lua_as£π
(!
func°©e
.
¥ev
 && func°©e.
nups
 =1 && !
Àx°©e
.
fs
);

1646 
	`lua_as£π
(
dyd
->
a˘v¨
.
n
 =0 && dyd->
gt
.¿=0 && dyd->
œbñ
.n == 0);

1647 
L
->
t›
--;

1648  
˛
;

1649 
	}
}

	@lparser.h

7 #i‚de‡
Õ¨£r_h


8 
	#Õ¨£r_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

26 
	mVVOID
,

28 
	mVNIL
,

29 
	mVTRUE
,

30 
	mVFALSE
,

31 
	mVK
,

32 
	mVKFLT
,

33 
	mVKINT
,

34 
	mVNONRELOC
,

36 
	mVLOCAL
,

37 
	mVUPVAL
,

38 
	mVINDEXED
,

42 
	mVJMP
,

44 
	mVRELOCABLE
,

46 
	mVCALL
,

47 
	mVVARARG


48 } 
	texpköd
;

51 
	#vkisv¨
(
k
Ë(
VLOCAL
 <(kË&& (kË<
VINDEXED
)

	)

52 
	#vkisöªg
(
k
Ë((kË=
VNONRELOC
 || (kË=
VLOCAL
)

	)

54 
	sexpdesc
 {

55 
expköd
 
	mk
;

57 
lua_I¡egî
 
	mivÆ
;

58 
lua_Numbî
 
	mnvÆ
;

59 
	möfo
;

61 
	midx
;

62 
lu_byã
 
	mt
;

63 
lu_byã
 
	mvt
;

64 } 
	möd
;

65 } 
	mu
;

66 
	mt
;

67 
	mf
;

68 } 
	texpdesc
;

72 
	sV¨desc
 {

73 
	midx
;

74 } 
	tV¨desc
;

78 
	sLabñdesc
 {

79 
TSåög
 *
	m«me
;

80 
	mpc
;

81 
	mlöe
;

82 
lu_byã
 
	m«˘v¨
;

83 } 
	tLabñdesc
;

87 
	sLabñli°
 {

88 
Labñdesc
 *
	m¨r
;

89 
	mn
;

90 
	msize
;

91 } 
	tLabñli°
;

95 
	sDynd©a
 {

97 
V¨desc
 *
	m¨r
;

98 
	mn
;

99 
	msize
;

100 } 
	ma˘v¨
;

101 
Labñli°
 
	mgt
;

102 
Labñli°
 
	mœbñ
;

103 } 
	tDynd©a
;

107 
	gBlockC¡
;

111 
	sFuncSèã
 {

112 
PrŸo
 *
	mf
;

113 
FuncSèã
 *
	m¥ev
;

114 
LexSèã
 *
	mls
;

115 
BlockC¡
 *
	mbl
;

116 
	mpc
;

117 
	mœ°èrgë
;

118 
	mjpc
;

119 
	mnk
;

120 
	m≈
;

121 
	mfú°loˇl
;

122 
	m∆ocv¨s
;

123 
lu_byã
 
	m«˘v¨
;

124 
lu_byã
 
	mnups
;

125 
lu_byã
 
	m‰ìªg
;

126 } 
	tFuncSèã
;

129 
LUAI_FUNC
 
LClosuª
 *
luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

130 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
);

	@lprefix.h

7 #i‚de‡
Õªfix_h


8 
	#Õªfix_h


	)

14 #i‡!
deföed
(
LUA_USE_C89
)

16 #i‡!
deföed
(
_XOPEN_SOURCE
)

17 
	#_XOPEN_SOURCE
 600

	)

18 #ñi‡
_XOPEN_SOURCE
 == 0

19 #unde‡
_XOPEN_SOURCE


25 #i‡!
deföed
(
LUA_32BITS
Ë&& !deföed(
_FILE_OFFSET_BITS
)

26 
	#_LARGEFILE_SOURCE
 1

	)

27 
	#_FILE_OFFSET_BITS
 64

	)

36 #i‡
deföed
(
_WIN32
)

38 #i‡!
deföed
(
_CRT_SECURE_NO_WARNINGS
)

39 
	#_CRT_SECURE_NO_WARNINGS


	)

	@lstate.c

7 
	#l°©e_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"Œex.h
"

24 
	~"lmem.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

31 #i‡!
deföed
(
LUAI_GCPAUSE
)

32 
	#LUAI_GCPAUSE
 200

	)

35 #i‡!
deföed
(
LUAI_GCMUL
)

36 
	#LUAI_GCMUL
 200

	)

44 #i‡!
deföed
(
luai_make£ed
)

45 
	~<time.h
>

46 
	#luai_make£ed
(Ë
	`ˇ°
(, 
	`time
(
NULL
))

	)

54 
	sLX
 {

55 
lu_byã
 
	mexåa_
[
LUA_EXTRASPACE
];

56 
lua_Sèã
 
	ml
;

57 } 
	tLX
;

63 
	sLG
 {

64 
LX
 
	ml
;

65 
globÆ_Sèã
 
	mg
;

66 } 
	tLG
;

70 
	#‰om°©e
(
L
Ë(
	`ˇ°
(
LX
 *, ca°(
lu_byã
 *, (L)Ë- 
	`off£tof
(LX, 
l
)))

	)

77 
	#addbuff
(
b
,
p
,
e
) \

78 { 
size_t
 
t
 = 
	`ˇ°
(size_t, 
e
); \

79 
	`mem˝y
(
b
 + 
p
, &
t
, —));Ö +—); }

	)

81 
	$make£ed
 (
lua_Sèã
 *
L
) {

82 
buff
[4 * (
size_t
)];

83 
h
 = 
	`luai_make£ed
();

84 
p
 = 0;

85 
	`addbuff
(
buff
, 
p
, 
L
);

86 
	`addbuff
(
buff
, 
p
, &
h
);

87 
	`addbuff
(
buff
, 
p
, 
luaO_nûobje˘
);

88 
	`addbuff
(
buff
, 
p
, &
lua_√w°©e
);

89 
	`lua_as£π
(
p
 =(
buff
));

90  
	`luaS_hash
(
buff
, 
p
, 
h
);

91 
	}
}

98 
	$luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
) {

99 
l_mem
 
tb
 = 
	`gëtŸÆbyãs
(
g
);

100 
	`lua_as£π
(
tb
 > 0);

101 i‡(
debt
 < 
tb
 - 
MAX_LMEM
)

102 
debt
 = 
tb
 - 
MAX_LMEM
;

103 
g
->
tŸÆbyãs
 = 
tb
 - 
debt
;

104 
g
->
GCdebt
 = 
debt
;

105 
	}
}

108 
CÆlInfo
 *
	$luaE_exãndCI
 (
lua_Sèã
 *
L
) {

109 
CÆlInfo
 *
ci
 = 
	`luaM_√w
(
L
, CallInfo);

110 
	`lua_as£π
(
L
->
ci
->
√xt
 =
NULL
);

111 
L
->
ci
->
√xt
 = ci;

112 
ci
->
¥evious
 = 
L
->ci;

113 
ci
->
√xt
 = 
NULL
;

114 
L
->
nci
++;

115  
ci
;

116 
	}
}

122 
	$luaE_‰ìCI
 (
lua_Sèã
 *
L
) {

123 
CÆlInfo
 *
ci
 = 
L
->ci;

124 
CÆlInfo
 *
√xt
 = 
ci
->next;

125 
ci
->
√xt
 = 
NULL
;

126 (
ci
 = 
√xt
Ë!
NULL
) {

127 
√xt
 = 
ci
->next;

128 
	`luaM_‰ì
(
L
, 
ci
);

129 
L
->
nci
--;

131 
	}
}

137 
	$luaE_shrökCI
 (
lua_Sèã
 *
L
) {

138 
CÆlInfo
 *
ci
 = 
L
->ci;

139 
CÆlInfo
 *
√xt2
;

141 
ci
->
√xt
 !
NULL
 && (
√xt2
 = ci->next->next) != NULL) {

142 
	`luaM_‰ì
(
L
, 
ci
->
√xt
);

143 
L
->
nci
--;

144 
ci
->
√xt
 = 
√xt2
;

145 
√xt2
->
¥evious
 = 
ci
;

146 
ci
 = 
√xt2
;

148 
	}
}

151 
	$°ack_öô
 (
lua_Sèã
 *
L1
,Üua_Sèã *
L
) {

152 
i
; 
CÆlInfo
 *
ci
;

154 
L1
->
°ack
 = 
	`luaM_√wve˘‹
(
L
, 
BASIC_STACK_SIZE
, 
TVÆue
);

155 
L1
->
°acksize
 = 
BASIC_STACK_SIZE
;

156 
i
 = 0; i < 
BASIC_STACK_SIZE
; i++)

157 
	`£äûvÆue
(
L1
->
°ack
 + 
i
);

158 
L1
->
t›
 = L1->
°ack
;

159 
L1
->
°ack_œ°
 = L1->
°ack
 + L1->
°acksize
 - 
EXTRA_STACK
;

161 
ci
 = &
L1
->
ba£_ci
;

162 
ci
->
√xt
 = ci->
¥evious
 = 
NULL
;

163 
ci
->
ˇŒ°©us
 = 0;

164 
ci
->
func
 = 
L1
->
t›
;

165 
	`£äûvÆue
(
L1
->
t›
++);

166 
ci
->
t›
 = 
L1
->t› + 
LUA_MINSTACK
;

167 
L1
->
ci
 = ci;

168 
	}
}

171 
	$‰ì°ack
 (
lua_Sèã
 *
L
) {

172 i‡(
L
->
°ack
 =
NULL
)

174 
L
->
ci
 = &L->
ba£_ci
;

175 
	`luaE_‰ìCI
(
L
);

176 
	`lua_as£π
(
L
->
nci
 == 0);

177 
	`luaM_‰ì¨øy
(
L
, L->
°ack
, L->
°acksize
);

178 
	}
}

184 
	$öô_ªgi°ry
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

185 
TVÆue
 
ãmp
;

187 
TabÀ
 *
ªgi°ry
 = 
	`luaH_√w
(
L
);

188 
	`£thvÆue
(
L
, &
g
->
l_ªgi°ry
, 
ªgi°ry
);

189 
	`luaH_ªsize
(
L
, 
ªgi°ry
, 
LUA_RIDX_LAST
, 0);

191 
	`£âhvÆue
(
L
, &
ãmp
, L);

192 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_MAINTHREAD
, &
ãmp
);

194 
	`£thvÆue
(
L
, &
ãmp
, 
	`luaH_√w
(L));

195 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_GLOBALS
, &
ãmp
);

196 
	}
}

203 
	$f_lua›í
 (
lua_Sèã
 *
L
, *
ud
) {

204 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

205 
	`UNUSED
(
ud
);

206 
	`°ack_öô
(
L
, L);

207 
	`öô_ªgi°ry
(
L
, 
g
);

208 
	`luaS_öô
(
L
);

209 
	`luaT_öô
(
L
);

210 
	`luaX_öô
(
L
);

211 
g
->
g¸u¬ög
 = 1;

212 
g
->
vîsi⁄
 = 
	`lua_vîsi⁄
(
NULL
);

213 
	`luai_u£r°©e›í
(
L
);

214 
	}
}

221 
	$¥eöô_thªad
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

222 
	`G
(
L
Ë
g
;

223 
L
->
°ack
 = 
NULL
;

224 
L
->
ci
 = 
NULL
;

225 
L
->
nci
 = 0;

226 
L
->
°acksize
 = 0;

227 
L
->
twups
 = L;

228 
L
->
îr‹Jmp
 = 
NULL
;

229 
L
->
nCˇŒs
 = 0;

230 
L
->
hook
 = 
NULL
;

231 
L
->
hookmask
 = 0;

232 
L
->
ba£hookcou¡
 = 0;

233 
L
->
Ælowhook
 = 1;

234 
	`ª£thookcou¡
(
L
);

235 
L
->
›íupvÆ
 = 
NULL
;

236 
L
->
¬y
 = 1;

237 
L
->
°©us
 = 
LUA_OK
;

238 
L
->
îrfunc
 = 0;

239 
	}
}

242 
	$˛o£_°©e
 (
lua_Sèã
 *
L
) {

243 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

244 
	`luaF_˛o£
(
L
, L->
°ack
);

245 
	`luaC_‰ìÆlobje˘s
(
L
);

246 i‡(
g
->
vîsi⁄
)

247 
	`luai_u£r°©e˛o£
(
L
);

248 
	`luaM_‰ì¨øy
(
L
, 
	`G
(L)->
°π
.
hash
, G(L)->°π.
size
);

249 
	`‰ì°ack
(
L
);

250 
	`lua_as£π
(
	`gëtŸÆbyãs
(
g
Ë=(
LG
));

251 (*
g
->
‰óŒoc
)(g->
ud
, 
	`‰om°©e
(
L
), (
LG
), 0);

252 
	}
}

255 
LUA_API
 
lua_Sèã
 *
	$lua_√wthªad
 (
lua_Sèã
 *
L
) {

256 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

257 
lua_Sèã
 *
L1
;

258 
	`lua_lock
(
L
);

259 
	`luaC_checkGC
(
L
);

261 
L1
 = &
	`ˇ°
(
LX
 *, 
	`luaM_√wobje˘
(
L
, 
LUA_TTHREAD
, (LX)))->
l
;

262 
L1
->
m¨ked
 = 
	`luaC_whôe
(
g
);

263 
L1
->
â
 = 
LUA_TTHREAD
;

265 
L1
->
√xt
 = 
g
->
Ælgc
;

266 
g
->
Ælgc
 = 
	`obj2gco
(
L1
);

268 
	`£âhvÆue
(
L
, L->
t›
, 
L1
);

269 
	`≠i_ö¸_t›
(
L
);

270 
	`¥eöô_thªad
(
L1
, 
g
);

271 
L1
->
hookmask
 = 
L
->hookmask;

272 
L1
->
ba£hookcou¡
 = 
L
->basehookcount;

273 
L1
->
hook
 = 
L
->hook;

274 
	`ª£thookcou¡
(
L1
);

276 
	`mem˝y
(
	`lua_gëexåa•a˚
(
L1
),Üua_gëexåa•a˚(
g
->
maöthªad
),

277 
LUA_EXTRASPACE
);

278 
	`luai_u£r°©ëhªad
(
L
, 
L1
);

279 
	`°ack_öô
(
L1
, 
L
);

280 
	`lua_u∆ock
(
L
);

281  
L1
;

282 
	}
}

285 
	$luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

286 
LX
 *
l
 = 
	`‰om°©e
(
L1
);

287 
	`luaF_˛o£
(
L1
, L1->
°ack
);

288 
	`lua_as£π
(
L1
->
›íupvÆ
 =
NULL
);

289 
	`luai_u£r°©e‰ì
(
L
, 
L1
);

290 
	`‰ì°ack
(
L1
);

291 
	`luaM_‰ì
(
L
, 
l
);

292 
	}
}

295 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

296 
i
;

297 
lua_Sèã
 *
L
;

298 
globÆ_Sèã
 *
g
;

299 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

300 i‡(
l
 =
NULL
)  NULL;

301 
L
 = &
l
->l.l;

302 
g
 = &
l
->g;

303 
L
->
√xt
 = 
NULL
;

304 
L
->
â
 = 
LUA_TTHREAD
;

305 
g
->
cuºítwhôe
 = 
	`bômask
(
WHITE0BIT
);

306 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

307 
	`¥eöô_thªad
(
L
, 
g
);

308 
g
->
‰óŒoc
 = 
f
;

309 
g
->
ud
 = ud;

310 
g
->
maöthªad
 = 
L
;

311 
g
->
£ed
 = 
	`make£ed
(
L
);

312 
g
->
g¸u¬ög
 = 0;

313 
g
->
GCe°im©e
 = 0;

314 
g
->
°π
.
size
 = g->°π.
nu£
 = 0;

315 
g
->
°π
.
hash
 = 
NULL
;

316 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

317 
g
->
∑nic
 = 
NULL
;

318 
g
->
vîsi⁄
 = 
NULL
;

319 
g
->
gc°©e
 = 
GCS∑u£
;

320 
g
->
gcköd
 = 
KGC_NORMAL
;

321 
g
->
Ælgc
 = g->
föobj
 = g->
tobe‚z
 = g->
fixedgc
 = 
NULL
;

322 
g
->
swìpgc
 = 
NULL
;

323 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

324 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

325 
g
->
twups
 = 
NULL
;

326 
g
->
tŸÆbyãs
 = (
LG
);

327 
g
->
GCdebt
 = 0;

328 
g
->
gcfönum
 = 0;

329 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

330 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

331 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

332 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
f_lua›í
, 
NULL
Ë!
LUA_OK
) {

334 
	`˛o£_°©e
(
L
);

335 
L
 = 
NULL
;

337  
L
;

338 
	}
}

341 
LUA_API
 
	$lua_˛o£
 (
lua_Sèã
 *
L
) {

342 
L
 = 
	`G
(L)->
maöthªad
;

343 
	`lua_lock
(
L
);

344 
	`˛o£_°©e
(
L
);

345 
	}
}

	@lstate.h

7 #i‚de‡
l°©e_h


8 
	#l°©e_h


	)

10 
	~"lua.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

14 
	~"lzio.h
"

51 
	glua_l⁄gjmp
;

58 #i‡!
deföed
(
l_sig«lT
)

59 
	~<sig«l.h
>

60 
	#l_sig«lT
 
sig_©omic_t


	)

65 
	#EXTRA_STACK
 5

	)

68 
	#BASIC_STACK_SIZE
 (2*
LUA_MINSTACK
)

	)

72 
	#KGC_NORMAL
 0

	)

73 
	#KGC_EMERGENCY
 1

	)

76 
	s°rögèbÀ
 {

77 
TSåög
 **
	mhash
;

78 
	mnu£
;

79 
	msize
;

80 } 
	t°rögèbÀ
;

92 
	sCÆlInfo
 {

93 
StkId
 
	mfunc
;

94 
StkId
 
	mt›
;

95 
CÆlInfo
 *
	m¥evious
, *
	m√xt
;

98 
StkId
 
	mba£
;

99 c⁄° 
In°ru˘i⁄
 *
	mßvedpc
;

100 } 
	ml
;

102 
lua_KFun˘i⁄
 
	mk
;

103 
±rdiff_t
 
	mﬁd_îrfunc
;

104 
lua_KC⁄ãxt
 
	m˘x
;

105 } 
	mc
;

106 } 
	mu
;

107 
±rdiff_t
 
	mexåa
;

108 
	mƒesu…s
;

109 
	mˇŒ°©us
;

110 } 
	tCÆlInfo
;

116 
	#CIST_OAH
 (1<<0Ë

	)

117 
	#CIST_LUA
 (1<<1Ë

	)

118 
	#CIST_HOOKED
 (1<<2Ë

	)

119 
	#CIST_FRESH
 (1<<3Ë

	)

121 
	#CIST_YPCALL
 (1<<4Ë

	)

122 
	#CIST_TAIL
 (1<<5Ë

	)

123 
	#CIST_HOOKYIELD
 (1<<6Ë

	)

124 
	#CIST_LEQ
 (1<<7Ë

	)

125 
	#CIST_FIN
 (1<<8Ë

	)

127 
	#isLua
(
ci
Ë((ci)->
ˇŒ°©us
 & 
CIST_LUA
)

	)

130 
	#£tﬂh
(
°
,
v
Ë((°Ë((°Ë& ~
CIST_OAH
Ë| (v))

	)

131 
	#gëﬂh
(
°
Ë((°Ë& 
CIST_OAH
)

	)

137 
	sglobÆ_Sèã
 {

138 
lua_AŒoc
 
	m‰óŒoc
;

139 *
	mud
;

140 
l_mem
 
	mtŸÆbyãs
;

141 
l_mem
 
	mGCdebt
;

142 
lu_mem
 
	mGCmemåav
;

143 
lu_mem
 
	mGCe°im©e
;

144 
°rögèbÀ
 
	m°π
;

145 
TVÆue
 
	ml_ªgi°ry
;

146 
	m£ed
;

147 
lu_byã
 
	mcuºítwhôe
;

148 
lu_byã
 
	mgc°©e
;

149 
lu_byã
 
	mgcköd
;

150 
lu_byã
 
	mg¸u¬ög
;

151 
GCObje˘
 *
	mÆlgc
;

152 
GCObje˘
 **
	mswìpgc
;

153 
GCObje˘
 *
	mföobj
;

154 
GCObje˘
 *
	mgøy
;

155 
GCObje˘
 *
	mgøyagaö
;

156 
GCObje˘
 *
	mwók
;

157 
GCObje˘
 *
	mïhemî⁄
;

158 
GCObje˘
 *
	mÆlwók
;

159 
GCObje˘
 *
	mtobe‚z
;

160 
GCObje˘
 *
	mfixedgc
;

161 
lua_Sèã
 *
	mtwups
;

162 
	mgcfönum
;

163 
	mg˝au£
;

164 
	mgc°ïmul
;

165 
lua_CFun˘i⁄
 
	m∑nic
;

166 
lua_Sèã
 *
	mmaöthªad
;

167 c⁄° 
lua_Numbî
 *
	mvîsi⁄
;

168 
TSåög
 *
	mmemîrmsg
;

169 
TSåög
 *
	mtm«me
[
TM_N
];

170 
TabÀ
 *
	mmt
[
LUA_NUMTAGS
];

171 
TSåög
 *
	m°rˇche
[
STRCACHE_N
][
STRCACHE_M
];

172 } 
	tglobÆ_Sèã
;

178 
	slua_Sèã
 {

179 
	mComm⁄Hódî
;

180 
	mnci
;

181 
lu_byã
 
	m°©us
;

182 
StkId
 
	mt›
;

183 
globÆ_Sèã
 *
	ml_G
;

184 
CÆlInfo
 *
	mci
;

185 c⁄° 
In°ru˘i⁄
 *
	mﬁdpc
;

186 
StkId
 
	m°ack_œ°
;

187 
StkId
 
	m°ack
;

188 
UpVÆ
 *
	m›íupvÆ
;

189 
GCObje˘
 *
	mg˛i°
;

190 
lua_Sèã
 *
	mtwups
;

191 
lua_l⁄gjmp
 *
	mîr‹Jmp
;

192 
CÆlInfo
 
	mba£_ci
;

193 vﬁ©ûê
lua_Hook
 
	mhook
;

194 
±rdiff_t
 
	mîrfunc
;

195 
	m°acksize
;

196 
	mba£hookcou¡
;

197 
	mhookcou¡
;

198 
	m¬y
;

199 
	mnCˇŒs
;

200 
l_sig«lT
 
	mhookmask
;

201 
lu_byã
 
	mÆlowhook
;

205 
	#G
(
L
Ë(L->
l_G
)

	)

211 
	uGCUni⁄
 {

212 
GCObje˘
 
	mgc
;

213 
TSåög
 
	mts
;

214 
Ud©a
 
	mu
;

215 
Closuª
 
	m˛
;

216 
TabÀ
 
	mh
;

217 
PrŸo
 
	mp
;

218 
lua_Sèã
 
	mth
;

222 
	#ˇ°_u
(
o
Ë
	`ˇ°
(
GCUni⁄
 *, (o))

	)

225 
	#gco2ts
(
o
) \

226 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TSTRING
, &((
	`ˇ°_u
(o))->
ts
))

	)

227 
	#gco2u
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TUSERDATA
, &((
	`ˇ°_u
(o))->
u
))

	)

228 
	#gco2l˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TLCL
, &((
	`ˇ°_u
(o))->
˛
.
l
))

	)

229 
	#gco2c˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TCCL
, &((
	`ˇ°_u
(o))->
˛
.
c
))

	)

230 
	#gco2˛
(
o
) \

231 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TFUNCTION
, &((
	`ˇ°_u
(o))->
˛
))

	)

232 
	#gco2t
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTABLE
, &((
	`ˇ°_u
(o))->
h
))

	)

233 
	#gco2p
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TPROTO
, &((
	`ˇ°_u
(o))->
p
))

	)

234 
	#gco2th
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTHREAD
, &((
	`ˇ°_u
(o))->
th
))

	)

238 
	#obj2gco
(
v
) \

239 
	`check_exp
(
	`nov¨ü¡
((
v
)->
â
Ë< 
LUA_TDEADKEY
, (&(
	`ˇ°_u
(v)->
gc
)))

	)

243 
	#gëtŸÆbyãs
(
g
Ë
	`ˇ°
(
lu_mem
, (g)->
tŸÆbyãs
 + (g)->
GCdebt
)

	)

245 
LUAI_FUNC
 
luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
);

246 
LUAI_FUNC
 
luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
);

247 
LUAI_FUNC
 
CÆlInfo
 *
luaE_exãndCI
 (
lua_Sèã
 *
L
);

248 
LUAI_FUNC
 
luaE_‰ìCI
 (
lua_Sèã
 *
L
);

249 
LUAI_FUNC
 
luaE_shrökCI
 (
lua_Sèã
 *
L
);

	@lstring.c

7 
	#l°rög_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

22 
	~"l°rög.h
"

25 
	#MEMERRMSG
 "nŸÉnough mem‹y"

	)

32 #i‡!
deföed
(
LUAI_HASHLIMIT
)

33 
	#LUAI_HASHLIMIT
 5

	)

40 
	$luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
) {

41 
size_t
 
Àn
 = 
a
->
u
.
 gÀn
;

42 
	`lua_as£π
(
a
->
â
 =
LUA_TLNGSTR
 && 
b
->tt == LUA_TLNGSTR);

43  (
a
 =
b
) ||

44 ((
Àn
 =
b
->
u
.
 gÀn
) &&

45 (
	`memcmp
(
	`gë°r
(
a
), gë°r(
b
), 
Àn
) == 0));

46 
	}
}

49 
	$luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
) {

50 
h
 = 
£ed
 ^ 
	`ˇ°
(, 
l
);

51 
size_t
 
°ï
 = (
l
 >> 
LUAI_HASHLIMIT
) + 1;

52 ; 
l
 >
°ï
;Ü -= step)

53 
h
 ^((h<<5Ë+ (h>>2Ë+ 
	`ˇ°_byã
(
°r
[
l
 - 1]));

54  
h
;

55 
	}
}

58 
	$luaS_hashl⁄g°r
 (
TSåög
 *
ts
) {

59 
	`lua_as£π
(
ts
->
â
 =
LUA_TLNGSTR
);

60 i‡(
ts
->
exåa
 == 0) {

61 
ts
->
hash
 = 
	`luaS_hash
(
	`gë°r
—s),Ås->
u
.
 gÀn
,Ås->hash);

62 
ts
->
exåa
 = 1;

64  
ts
->
hash
;

65 
	}
}

71 
	$luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
) {

72 
i
;

73 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

74 i‡(
√wsize
 > 
tb
->
size
) {

75 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

76 
i
 = 
tb
->
size
; i < 
√wsize
; i++)

77 
tb
->
hash
[
i
] = 
NULL
;

79 
i
 = 0; i < 
tb
->
size
; i++) {

80 
TSåög
 *
p
 = 
tb
->
hash
[
i
];

81 
tb
->
hash
[
i
] = 
NULL
;

82 
p
) {

83 
TSåög
 *
h√xt
 = 
p
->
u
.hnext;

84 
h
 = 
	`lmod
(
p
->
hash
, 
√wsize
);

85 
p
->
u
.
h√xt
 = 
tb
->
hash
[
h
];

86 
tb
->
hash
[
h
] = 
p
;

87 
p
 = 
h√xt
;

90 i‡(
√wsize
 < 
tb
->
size
) {

92 
	`lua_as£π
(
tb
->
hash
[
√wsize
] =
NULL
 &&Åb->hash[tb->
size
 - 1] == NULL);

93 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

95 
tb
->
size
 = 
√wsize
;

96 
	}
}

103 
	$luaS_˛órˇche
 (
globÆ_Sèã
 *
g
) {

104 
i
, 
j
;

105 
i
 = 0; i < 
STRCACHE_N
; i++)

106 
j
 = 0; j < 
STRCACHE_M
; j++) {

107 i‡(
	`iswhôe
(
g
->
°rˇche
[
i
][
j
]))

108 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

110 
	}
}

116 
	$luaS_öô
 (
lua_Sèã
 *
L
) {

117 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

118 
i
, 
j
;

119 
	`luaS_ªsize
(
L
, 
MINSTRTABSIZE
);

121 
g
->
memîrmsg
 = 
	`luaS_√wlôîÆ
(
L
, 
MEMERRMSG
);

122 
	`luaC_fix
(
L
, 
	`obj2gco
(
g
->
memîrmsg
));

123 
i
 = 0; i < 
STRCACHE_N
; i++)

124 
j
 = 0; j < 
STRCACHE_M
; j++)

125 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

126 
	}
}

133 
TSåög
 *
	$¸óã°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
, 
èg
, 
h
) {

134 
TSåög
 *
ts
;

135 
GCObje˘
 *
o
;

136 
size_t
 
tŸÆsize
;

137 
tŸÆsize
 = 
	`sizñ°rög
(
l
);

138 
o
 = 
	`luaC_√wobj
(
L
, 
èg
, 
tŸÆsize
);

139 
ts
 = 
	`gco2ts
(
o
);

140 
ts
->
hash
 = 
h
;

141 
ts
->
exåa
 = 0;

142 
	`gë°r
(
ts
)[
l
] = '\0';

143  
ts
;

144 
	}
}

147 
TSåög
 *
	$luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
) {

148 
TSåög
 *
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TLNGSTR
, 
	`G
(L)->
£ed
);

149 
ts
->
u
.
 gÀn
 = 
l
;

150  
ts
;

151 
	}
}

154 
	$luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
) {

155 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

156 
TSåög
 **
p
 = &
tb
->
hash
[
	`lmod
(
ts
->hash,Åb->
size
)];

157 *
p
 !
ts
)

158 
p
 = &(*p)->
u
.
h√xt
;

159 *
p
 = (*p)->
u
.
h√xt
;

160 
tb
->
nu£
--;

161 
	}
}

167 
TSåög
 *
	$öã∫shr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

168 
TSåög
 *
ts
;

169 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

170 
h
 = 
	`luaS_hash
(
°r
, 
l
, 
g
->
£ed
);

171 
TSåög
 **
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

172 
	`lua_as£π
(
°r
 !
NULL
);

173 
ts
 = *
li°
;Å†!
NULL
;Å†ts->
u
.
h√xt
) {

174 i‡(
l
 =
ts
->
shæí
 &&

175 (
	`memcmp
(
°r
, 
	`gë°r
(
ts
), 
l
 * ()) == 0)) {

177 i‡(
	`isdód
(
g
, 
ts
))

178 
	`ch™gewhôe
(
ts
);

179  
ts
;

182 i‡(
g
->
°π
.
nu£
 >g->°π.
size
 && g->°π.sizê<
MAX_INT
/2) {

183 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 * 2);

184 
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

186 
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TSHRSTR
, 
h
);

187 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

188 
ts
->
shæí
 = 
	`ˇ°_byã
(
l
);

189 
ts
->
u
.
h√xt
 = *
li°
;

190 *
li°
 = 
ts
;

191 
g
->
°π
.
nu£
++;

192  
ts
;

193 
	}
}

199 
TSåög
 *
	$luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

200 i‡(
l
 <
LUAI_MAXSHORTLEN
)

201  
	`öã∫shr°r
(
L
, 
°r
, 
l
);

203 
TSåög
 *
ts
;

204 i‡(
l
 >(
MAX_SIZE
 - (
TSåög
))/())

205 
	`luaM_toobig
(
L
);

206 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
l
);

207 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

208  
ts
;

210 
	}
}

219 
TSåög
 *
	$luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
) {

220 
i
 = 
	`poöt2uöt
(
°r
Ë% 
STRCACHE_N
;

221 
j
;

222 
TSåög
 **
p
 = 
	`G
(
L
)->
°rˇche
[
i
];

223 
j
 = 0; j < 
STRCACHE_M
; j++) {

224 i‡(
	`°rcmp
(
°r
, 
	`gë°r
(
p
[
j
])) == 0)

225  
p
[
j
];

228 
j
 = 
STRCACHE_M
 - 1; j > 0; j--)

229 
p
[
j
] =Ö[j - 1];

231 
p
[0] = 
	`luaS_√wl°r
(
L
, 
°r
, 
	`°æí
(str));

232  
p
[0];

233 
	}
}

236 
Ud©a
 *
	$luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
) {

237 
Ud©a
 *
u
;

238 
GCObje˘
 *
o
;

239 i‡(
s
 > 
MAX_SIZE
 - (
Ud©a
))

240 
	`luaM_toobig
(
L
);

241 
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TUSERDATA
, 
	`sizñud©a
(
s
));

242 
u
 = 
	`gco2u
(
o
);

243 
u
->
Àn
 = 
s
;

244 
u
->
më©abÀ
 = 
NULL
;

245 
	`£tu£rvÆue
(
L
, 
u
, 
luaO_nûobje˘
);

246  
u
;

247 
	}
}

	@lstring.h

7 #i‚de‡
l°rög_h


8 
	#l°rög_h


	)

10 
	~"lgc.h
"

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

15 
	#sizñ°rög
(
l
Ë((
UTSåög
Ë+ (÷Ë+ 1Ë* ())

	)

17 
	#sizñud©a
(
l
Ë((
UUd©a
Ë+ (l))

	)

18 
	#sizeud©a
(
u
Ë
	`sizñud©a
((u)->
Àn
)

	)

20 
	#luaS_√wlôîÆ
(
L
, 
s
Ë(
	`luaS_√wl°r
(L, "" s, \

21 ((
s
)/())-1))

	)

27 
	#i§e£rved
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 && (s)->
exåa
 > 0)

	)

33 
	#eqshr°r
(
a
,
b
Ë
	`check_exp
(◊)->
â
 =
LUA_TSHRSTR
, (aË=(b))

	)

36 
LUAI_FUNC
 
luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
);

37 
LUAI_FUNC
 
luaS_hashl⁄g°r
 (
TSåög
 *
ts
);

38 
LUAI_FUNC
 
luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
);

39 
LUAI_FUNC
 
luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
);

40 
LUAI_FUNC
 
luaS_˛órˇche
 (
globÆ_Sèã
 *
g
);

41 
LUAI_FUNC
 
luaS_öô
 (
lua_Sèã
 *
L
);

42 
LUAI_FUNC
 
luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
);

43 
LUAI_FUNC
 
Ud©a
 *
luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
);

44 
LUAI_FUNC
 
TSåög
 *
luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
);

45 
LUAI_FUNC
 
TSåög
 *
luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
);

46 
LUAI_FUNC
 
TSåög
 *
luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
);

	@lstrlib.c

7 
	#l°æib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<Êﬂt.h
>

15 
	~<limôs.h
>

16 
	~<loˇÀ.h
>

17 
	~<°ddef.h
>

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

22 
	~"lua.h
"

24 
	~"œuxlib.h
"

25 
	~"luÆib.h
"

33 #i‡!
deföed
(
LUA_MAXCAPTURES
)

34 
	#LUA_MAXCAPTURES
 32

	)

39 
	#uch¨
(
c
Ë(()(c))

	)

46 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

48 
	#MAXSIZE
 \

49 ((
size_t
Ë< (Ë? 
MAX_SIZET
 : (size_t)(
INT_MAX
))

	)

54 
	$°r_Àn
 (
lua_Sèã
 *
L
) {

55 
size_t
 
l
;

56 
	`luaL_checkl°rög
(
L
, 1, &
l
);

57 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
l
);

59 
	}
}

63 
lua_I¡egî
 
	$po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

64 i‡(
pos
 >= 0) Öos;

65 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

66  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

67 
	}
}

70 
	$°r_sub
 (
lua_Sèã
 *
L
) {

71 
size_t
 
l
;

72 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

73 
lua_I¡egî
 
°¨t
 = 
	`po§ñ©
(
	`luaL_checköãgî
(
L
, 2), 
l
);

74 
lua_I¡egî
 
íd
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
l
);

75 i‡(
°¨t
 < 1) start = 1;

76 i‡(
íd
 > (
lua_I¡egî
)
l
)Énd =Ü;

77 i‡(
°¨t
 <
íd
)

78 
	`lua_pushl°rög
(
L
, 
s
 + 
°¨t
 - 1, (
size_t
)(
íd
 - start) + 1);

79 
	`lua_pushlôîÆ
(
L
, "");

81 
	}
}

84 
	$°r_ªvî£
 (
lua_Sèã
 *
L
) {

85 
size_t
 
l
, 
i
;

86 
luaL_Buf„r
 
b
;

87 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

88 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

89 
i
 = 0; i < 
l
; i++)

90 
p
[
i
] = 
s
[
l
 - i - 1];

91 
	`luaL_pushªsu…size
(&
b
, 
l
);

93 
	}
}

96 
	$°r_lowî
 (
lua_Sèã
 *
L
) {

97 
size_t
 
l
;

98 
size_t
 
i
;

99 
luaL_Buf„r
 
b
;

100 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

101 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

102 
i
=0; i<
l
; i++)

103 
p
[
i
] = 
	`tﬁowî
(
	`uch¨
(
s
[i]));

104 
	`luaL_pushªsu…size
(&
b
, 
l
);

106 
	}
}

109 
	$°r_uµî
 (
lua_Sèã
 *
L
) {

110 
size_t
 
l
;

111 
size_t
 
i
;

112 
luaL_Buf„r
 
b
;

113 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

114 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

115 
i
=0; i<
l
; i++)

116 
p
[
i
] = 
	`touµî
(
	`uch¨
(
s
[i]));

117 
	`luaL_pushªsu…size
(&
b
, 
l
);

119 
	}
}

122 
	$°r_ªp
 (
lua_Sèã
 *
L
) {

123 
size_t
 
l
, 
l£p
;

124 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

125 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

126 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 3, "", &
l£p
);

127 i‡(
n
 <0Ë
	`lua_pushlôîÆ
(
L
, "");

128 i‡(
l
 + 
l£p
 <Ü ||Ü +Ü£∞> 
MAXSIZE
 / 
n
)

129  
	`luaL_îr‹
(
L
, "resulting stringÅooÜarge");

131 
size_t
 
tŸÆÀn
 = (size_t)
n
 * 
l
 + (size_t)“ - 1Ë* 
l£p
;

132 
luaL_Buf„r
 
b
;

133 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
tŸÆÀn
);

134 
n
-- > 1) {

135 
	`mem˝y
(
p
, 
s
, 
l
 * ());Ö +=Ü;

136 i‡(
l£p
 > 0) {

137 
	`mem˝y
(
p
, 
£p
, 
l£p
 * ());

138 
p
 +
l£p
;

141 
	`mem˝y
(
p
, 
s
, 
l
 * ());

142 
	`luaL_pushªsu…size
(&
b
, 
tŸÆÀn
);

145 
	}
}

148 
	$°r_byã
 (
lua_Sèã
 *
L
) {

149 
size_t
 
l
;

150 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

151 
lua_I¡egî
 
posi
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
l
);

152 
lua_I¡egî
 
po£
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
l
);

153 
n
, 
i
;

154 i‡(
posi
 < 1)Öosi = 1;

155 i‡(
po£
 > (
lua_I¡egî
)
l
)Öose =Ü;

156 i‡(
posi
 > 
po£
)  0;

157 i‡(
po£
 - 
posi
 >
INT_MAX
)

158  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

159 
n
 = ()(
po£
 - 
posi
) + 1;

160 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

161 
i
=0; i<
n
; i++)

162 
	`lua_pushöãgî
(
L
, 
	`uch¨
(
s
[
posi
+
i
-1]));

163  
n
;

164 
	}
}

167 
	$°r_ch¨
 (
lua_Sèã
 *
L
) {

168 
n
 = 
	`lua_gët›
(
L
);

169 
i
;

170 
luaL_Buf„r
 
b
;

171 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
n
);

172 
i
=1; i<=
n
; i++) {

173 
lua_I¡egî
 
c
 = 
	`luaL_checköãgî
(
L
, 
i
);

174 
	`luaL_¨gcheck
(
L
, 
	`uch¨
(
c
Ë=c, 
i
, "value out ofÑange");

175 
p
[
i
 - 1] = 
	`uch¨
(
c
);

177 
	`luaL_pushªsu…size
(&
b
, 
n
);

179 
	}
}

182 
	$wrôî
 (
lua_Sèã
 *
L
, c⁄° *
b
, 
size_t
 
size
, *
B
) {

183 ()
L
;

184 
	`luaL_addl°rög
((
luaL_Buf„r
 *Ë
B
, (c⁄° *)
b
, 
size
);

186 
	}
}

189 
	$°r_dump
 (
lua_Sèã
 *
L
) {

190 
luaL_Buf„r
 
b
;

191 
°rù
 = 
	`lua_toboﬁón
(
L
, 2);

192 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

193 
	`lua_£â›
(
L
, 1);

194 
	`luaL_bufföô
(
L
,&
b
);

195 i‡(
	`lua_dump
(
L
, 
wrôî
, &
b
, 
°rù
) != 0)

196  
	`luaL_îr‹
(
L
, "unableÅo dump given function");

197 
	`luaL_pushªsu…
(&
b
);

199 
	}
}

210 
	#CAP_UNFINISHED
 (-1)

	)

211 
	#CAP_POSITION
 (-2)

	)

214 
	sM©chSèã
 {

215 c⁄° *
	m§c_öô
;

216 c⁄° *
	m§c_íd
;

217 c⁄° *
	mp_íd
;

218 
lua_Sèã
 *
	mL
;

219 
	mm©chdïth
;

220 
	mÀvñ
;

222 c⁄° *
	möô
;

223 
±rdiff_t
 
	mÀn
;

224 } 
	mˇ±uª
[
LUA_MAXCAPTURES
];

225 } 
	tM©chSèã
;

229 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

233 #i‡!
deföed
(
MAXCCALLS
)

234 
	#MAXCCALLS
 200

	)

238 
	#L_ESC
 '%'

	)

239 
	#SPECIALS
 "^$*+?.([%-"

	)

242 
	$check_ˇ±uª
 (
M©chSèã
 *
ms
, 
l
) {

243 
l
 -= '1';

244 i‡(
l
 < 0 ||Ü >
ms
->
Àvñ
 || ms->
ˇ±uª
[l].
Àn
 =
CAP_UNFINISHED
)

245  
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
l
 + 1);

246  
l
;

247 
	}
}

250 
	$ˇ±uª_to_˛o£
 (
M©chSèã
 *
ms
) {

251 
Àvñ
 = 
ms
->level;

252 
Àvñ
--;Üevel>=0;Üevel--)

253 i‡(
ms
->
ˇ±uª
[
Àvñ
].
Àn
 =
CAP_UNFINISHED
) Üevel;

254  
	`luaL_îr‹
(
ms
->
L
, "invalidÖattern capture");

255 
	}
}

258 c⁄° *
	$˛as£nd
 (
M©chSèã
 *
ms
, c⁄° *
p
) {

259 *
p
++) {

260 
L_ESC
: {

261 i‡(
p
 =
ms
->
p_íd
)

262 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (ends with '%%')");

263  
p
+1;

266 i‡(*
p
 == '^')Ö++;

268 i‡(
p
 =
ms
->
p_íd
)

269 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missing ']')");

270 i‡(*(
p
++Ë=
L_ESC
 &&Ö < 
ms
->
p_íd
)

271 
p
++;

272 } *
p
 != ']');

273  
p
+1;

276  
p
;

279 
	}
}

282 
	$m©ch_˛ass
 (
c
, 
˛
) {

283 
ªs
;

284 
	`tﬁowî
(
˛
)) {

285 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

286 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

287 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

288 'g' : 
ªs
 = 
	`isgøph
(
c
); ;

289 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

290 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

291 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

292 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

293 'w' : 
ªs
 = 
	`iß um
(
c
); ;

294 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

295 'z' : 
ªs
 = (
c
 == 0); ;

296 :  (
˛
 =
c
);

298  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

299 
	}
}

302 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

303 
sig
 = 1;

304 i‡(*(
p
+1) == '^') {

305 
sig
 = 0;

306 
p
++;

308 ++
p
 < 
ec
) {

309 i‡(*
p
 =
L_ESC
) {

310 
p
++;

311 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

312  
sig
;

314 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

315 
p
+=2;

316 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

317  
sig
;

319 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

321  !
sig
;

322 
	}
}

325 
	$sögÀm©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
,

326 c⁄° *
ï
) {

327 i‡(
s
 >
ms
->
§c_íd
)

330 
c
 = 
	`uch¨
(*
s
);

331 *
p
) {

333 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

334 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

335 :  (
	`uch¨
(*
p
Ë=
c
);

338 
	}
}

341 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

342 c⁄° *
p
) {

343 i‡(
p
 >
ms
->
p_íd
 - 1)

344 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missingárgumentsÅo '%%b')");

345 i‡(*
s
 !*
p
Ë 
NULL
;

347 
b
 = *
p
;

348 
e
 = *(
p
+1);

349 
c⁄t
 = 1;

350 ++
s
 < 
ms
->
§c_íd
) {

351 i‡(*
s
 =
e
) {

352 i‡(--
c⁄t
 =0Ë 
s
+1;

354 i‡(*
s
 =
b
Ë
c⁄t
++;

357  
NULL
;

358 
	}
}

361 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

362 c⁄° *
p
, c⁄° *
ï
) {

363 
±rdiff_t
 
i
 = 0;

364 
	`sögÀm©ch
(
ms
, 
s
 + 
i
, 
p
, 
ï
))

365 
i
++;

367 
i
>=0) {

368 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

369 i‡(
ªs
) Ñes;

370 
i
--;

372  
NULL
;

373 
	}
}

376 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

377 c⁄° *
p
, c⁄° *
ï
) {

379 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

380 i‡(
ªs
 !
NULL
)

381  
ªs
;

382 i‡(
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
))

383 
s
++;

384  
NULL
;

386 
	}
}

389 c⁄° *
	$°¨t_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

390 c⁄° *
p
, 
wh©
) {

391 c⁄° *
ªs
;

392 
Àvñ
 = 
ms
->level;

393 i‡(
Àvñ
 >
LUA_MAXCAPTURES
Ë
	`luaL_îr‹
(
ms
->
L
, "too many captures");

394 
ms
->
ˇ±uª
[
Àvñ
].
öô
 = 
s
;

395 
ms
->
ˇ±uª
[
Àvñ
].
Àn
 = 
wh©
;

396 
ms
->
Àvñ
 =Üevel+1;

397 i‡((
ªs
=
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

398 
ms
->
Àvñ
--;

399  
ªs
;

400 
	}
}

403 c⁄° *
	$íd_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

404 c⁄° *
p
) {

405 
l
 = 
	`ˇ±uª_to_˛o£
(
ms
);

406 c⁄° *
ªs
;

407 
ms
->
ˇ±uª
[
l
].
Àn
 = 
s
 - ms->ˇ±uª[l].
öô
;

408 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

409 
ms
->
ˇ±uª
[
l
].
Àn
 = 
CAP_UNFINISHED
;

410  
ªs
;

411 
	}
}

414 c⁄° *
	$m©ch_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
, 
l
) {

415 
size_t
 
Àn
;

416 
l
 = 
	`check_ˇ±uª
(
ms
,Ü);

417 
Àn
 = 
ms
->
ˇ±uª
[
l
].len;

418 i‡((
size_t
)(
ms
->
§c_íd
-
s
Ë>
Àn
 &&

419 
	`memcmp
(
ms
->
ˇ±uª
[
l
].
öô
, 
s
, 
Àn
) == 0)

420  
s
+
Àn
;

421  
NULL
;

422 
	}
}

425 c⁄° *
	$m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

426 i‡(
ms
->
m©chdïth
-- == 0)

427 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

428 
öô
:

429 i‡(
p
 !
ms
->
p_íd
) {

430 *
p
) {

432 i‡(*(
p
 + 1) == ')')

433 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 2, 
CAP_POSITION
);

435 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 1, 
CAP_UNFINISHED
);

439 
s
 = 
	`íd_ˇ±uª
(
ms
, s, 
p
 + 1);

443 i‡((
p
 + 1Ë!
ms
->
p_íd
)

444 
dÊt
;

445 
s
 = (†=
ms
->
§c_íd
Ë? s : 
NULL
;

448 
L_ESC
: {

449 *(
p
 + 1)) {

451 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
 + 2);

452 i‡(
s
 !
NULL
) {

453 
p
 +4; 
öô
;

458 c⁄° *
ï
; 
¥evious
;

459 
p
 += 2;

460 i‡(*
p
 != '[')

461 
	`luaL_îr‹
(
ms
->
L
, "missing '['áfter '%%f' inÖattern");

462 
ï
 = 
	`˛as£nd
(
ms
, 
p
);

463 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s - 1);

464 i‡(!
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
 - 1) &&

465 
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
 - 1)) {

466 
p
 = 
ï
; 
öô
;

468 
s
 = 
NULL
;

474 
s
 = 
	`m©ch_ˇ±uª
(
ms
, s, 
	`uch¨
(*(
p
 + 1)));

475 i‡(
s
 !
NULL
) {

476 
p
 +2; 
öô
;

480 : 
dÊt
;

484 : 
dÊt
: {

485 c⁄° *
ï
 = 
	`˛as£nd
(
ms
, 
p
);

487 i‡(!
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
)) {

488 i‡(*
ï
 == '*' || *ep == '?' || *ep == '-') {

489 
p
 = 
ï
 + 1; 
öô
;

492 
s
 = 
NULL
;

495 *
ï
) {

497 c⁄° *
ªs
;

498 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
 + 1, 
ï
 + 1)Ë!
NULL
)

499 
s
 = 
ªs
;

501 
p
 = 
ï
 + 1; 
öô
;

506 
s
++;

509 
s
 = 
	`max_ex∑nd
(
ms
, s, 
p
, 
ï
);

512 
s
 = 
	`mö_ex∑nd
(
ms
, s, 
p
, 
ï
);

515 
s
++; 
p
 = 
ï
; 
öô
;

522 
ms
->
m©chdïth
++;

523  
s
;

524 
	}
}

528 c⁄° *
	$lmemföd
 (c⁄° *
s1
, 
size_t
 
l1
,

529 c⁄° *
s2
, 
size_t
 
l2
) {

530 i‡(
l2
 =0Ë 
s1
;

531 i‡(
l2
 > 
l1
Ë 
NULL
;

533 c⁄° *
öô
;

534 
l2
--;

535 
l1
 =Ü1-
l2
;

536 
l1
 > 0 && (
öô
 = (c⁄° *)
	`memchr
(
s1
, *
s2
,Ü1)Ë!
NULL
) {

537 
öô
++;

538 i‡(
	`memcmp
(
öô
, 
s2
+1, 
l2
) == 0)

539  
öô
-1;

541 
l1
 -
öô
-
s1
;

542 
s1
 = 
öô
;

545  
NULL
;

547 
	}
}

550 
	$push_⁄eˇ±uª
 (
M©chSèã
 *
ms
, 
i
, c⁄° *
s
,

551 c⁄° *
e
) {

552 i‡(
i
 >
ms
->
Àvñ
) {

553 i‡(
i
 == 0)

554 
	`lua_pushl°rög
(
ms
->
L
, 
s
, 
e
 - s);

556 
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
i
 + 1);

559 
±rdiff_t
 
l
 = 
ms
->
ˇ±uª
[
i
].
Àn
;

560 i‡(
l
 =
CAP_UNFINISHED
Ë
	`luaL_îr‹
(
ms
->
L
, "unfinished capture");

561 i‡(
l
 =
CAP_POSITION
)

562 
	`lua_pushöãgî
(
ms
->
L
, (ms->
ˇ±uª
[
i
].
öô
 - ms->
§c_öô
) + 1);

564 
	`lua_pushl°rög
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
, 
l
);

566 
	}
}

569 
	$push_ˇ±uªs
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
e
) {

570 
i
;

571 
∆evñs
 = (
ms
->
Àvñ
 =0 && 
s
) ? 1 : ms->level;

572 
	`luaL_check°ack
(
ms
->
L
, 
∆evñs
, "too many captures");

573 
i
 = 0; i < 
∆evñs
; i++)

574 
	`push_⁄eˇ±uª
(
ms
, 
i
, 
s
, 
e
);

575  
∆evñs
;

576 
	}
}

580 
	$no•ecüls
 (c⁄° *
p
, 
size_t
 
l
) {

581 
size_t
 
u±o
 = 0;

583 i‡(
	`°Ωbrk
(
p
 + 
u±o
, 
SPECIALS
))

585 
u±o
 +
	`°æí
(
p
 + upto) + 1;

586 } 
u±o
 <
l
);

588 
	}
}

591 
	$¥ï°©e
 (
M©chSèã
 *
ms
, 
lua_Sèã
 *
L
,

592 c⁄° *
s
, 
size_t
 
ls
, c⁄° *
p
, size_à
Õ
) {

593 
ms
->
L
 = L;

594 
ms
->
m©chdïth
 = 
MAXCCALLS
;

595 
ms
->
§c_öô
 = 
s
;

596 
ms
->
§c_íd
 = 
s
 + 
ls
;

597 
ms
->
p_íd
 = 
p
 + 
Õ
;

598 
	}
}

601 
	$ª¥ï°©e
 (
M©chSèã
 *
ms
) {

602 
ms
->
Àvñ
 = 0;

603 
	`lua_as£π
(
ms
->
m©chdïth
 =
MAXCCALLS
);

604 
	}
}

607 
	$°r_föd_aux
 (
lua_Sèã
 *
L
, 
föd
) {

608 
size_t
 
ls
, 
Õ
;

609 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

610 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

611 
lua_I¡egî
 
öô
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ls
);

612 i‡(
öô
 < 1) init = 1;

613 i‡(
öô
 > (
lua_I¡egî
)
ls
 + 1) {

614 
	`lua_pushnû
(
L
);

618 i‡(
föd
 && (
	`lua_toboﬁón
(
L
, 4Ë|| 
	`no•ecüls
(
p
, 
Õ
))) {

620 c⁄° *
s2
 = 
	`lmemföd
(
s
 + 
öô
 - 1, 
ls
 - (
size_t
)öô + 1, 
p
, 
Õ
);

621 i‡(
s2
) {

622 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
) + 1);

623 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
Ë+ 
Õ
);

628 
M©chSèã
 
ms
;

629 c⁄° *
s1
 = 
s
 + 
öô
 - 1;

630 
™ch‹
 = (*
p
 == '^');

631 i‡(
™ch‹
) {

632 
p
++; 
Õ
--;

634 
	`¥ï°©e
(&
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

636 c⁄° *
ªs
;

637 
	`ª¥ï°©e
(&
ms
);

638 i‡((
ªs
=
	`m©ch
(&
ms
, 
s1
, 
p
)Ë!
NULL
) {

639 i‡(
föd
) {

640 
	`lua_pushöãgî
(
L
, (
s1
 - 
s
) + 1);

641 
	`lua_pushöãgî
(
L
, 
ªs
 - 
s
);

642  
	`push_ˇ±uªs
(&
ms
, 
NULL
, 0) + 2;

645  
	`push_ˇ±uªs
(&
ms
, 
s1
, 
ªs
);

647 } 
s1
++ < 
ms
.
§c_íd
 && !
™ch‹
);

649 
	`lua_pushnû
(
L
);

651 
	}
}

654 
	$°r_föd
 (
lua_Sèã
 *
L
) {

655  
	`°r_föd_aux
(
L
, 1);

656 
	}
}

659 
	$°r_m©ch
 (
lua_Sèã
 *
L
) {

660  
	`°r_föd_aux
(
L
, 0);

661 
	}
}

665 
	sGM©chSèã
 {

666 c⁄° *
	m§c
;

667 c⁄° *
	mp
;

668 c⁄° *
	mœ°m©ch
;

669 
M©chSèã
 
	mms
;

670 } 
	tGM©chSèã
;

673 
	$gm©ch_aux
 (
lua_Sèã
 *
L
) {

674 
GM©chSèã
 *
gm
 = (GM©chSèã *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(3));

675 c⁄° *
§c
;

676 
gm
->
ms
.
L
 = L;

677 
§c
 = 
gm
->§c; sr¯<gm->
ms
.
§c_íd
; src++) {

678 c⁄° *
e
;

679 
	`ª¥ï°©e
(&
gm
->
ms
);

680 i‡((
e
 = 
	`m©ch
(&
gm
->
ms
, 
§c
, gm->
p
)Ë!
NULL
 &&É !gm->
œ°m©ch
) {

681 
gm
->
§c
 = gm->
œ°m©ch
 = 
e
;

682  
	`push_ˇ±uªs
(&
gm
->
ms
, 
§c
, 
e
);

686 
	}
}

689 
	$gm©ch
 (
lua_Sèã
 *
L
) {

690 
size_t
 
ls
, 
Õ
;

691 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

692 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

693 
GM©chSèã
 *
gm
;

694 
	`lua_£â›
(
L
, 2);

695 
gm
 = (
GM©chSèã
 *)
	`lua_√wu£rd©a
(
L
, (GMatchState));

696 
	`¥ï°©e
(&
gm
->
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

697 
gm
->
§c
 = 
s
; gm->
p
 =Ö; gm->
œ°m©ch
 = 
NULL
;

698 
	`lua_pushc˛osuª
(
L
, 
gm©ch_aux
, 3);

700 
	}
}

703 
	$add_s
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

704 c⁄° *
e
) {

705 
size_t
 
l
, 
i
;

706 
lua_Sèã
 *
L
 = 
ms
->L;

707 c⁄° *
√ws
 = 
	`lua_tﬁ°rög
(
L
, 3, &
l
);

708 
i
 = 0; i < 
l
; i++) {

709 i‡(
√ws
[
i
] !
L_ESC
)

710 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

712 
i
++;

713 i‡(!
	`isdigô
(
	`uch¨
(
√ws
[
i
]))) {

714 i‡(
√ws
[
i
] !
L_ESC
)

715 
	`luaL_îr‹
(
L
, "övÆid u£ o‡'%c' i¿ª∂a˚míà°rög", 
L_ESC
);

716 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

718 i‡(
√ws
[
i
] == '0')

719 
	`luaL_addl°rög
(
b
, 
s
, 
e
 - s);

721 
	`push_⁄eˇ±uª
(
ms
, 
√ws
[
i
] - '1', 
s
, 
e
);

722 
	`luaL_tﬁ°rög
(
L
, -1, 
NULL
);

723 
	`lua_ªmove
(
L
, -2);

724 
	`luaL_addvÆue
(
b
);

728 
	}
}

731 
	$add_vÆue
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

732 c⁄° *
e
, 
å
) {

733 
lua_Sèã
 *
L
 = 
ms
->L;

734 
å
) {

735 
LUA_TFUNCTION
: {

736 
n
;

737 
	`lua_pushvÆue
(
L
, 3);

738 
n
 = 
	`push_ˇ±uªs
(
ms
, 
s
, 
e
);

739 
	`lua_ˇŒ
(
L
, 
n
, 1);

742 
LUA_TTABLE
: {

743 
	`push_⁄eˇ±uª
(
ms
, 0, 
s
, 
e
);

744 
	`lua_gëèbÀ
(
L
, 3);

748 
	`add_s
(
ms
, 
b
, 
s
, 
e
);

752 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

753 
	`lua_p›
(
L
, 1);

754 
	`lua_pushl°rög
(
L
, 
s
, 
e
 - s);

756 i‡(!
	`lua_is°rög
(
L
, -1))

757 
	`luaL_îr‹
(
L
, "övÆidÑïœ˚míàvÆuê◊ %s)", 
	`luaL_ty≥«me
(L, -1));

758 
	`luaL_addvÆue
(
b
);

759 
	}
}

762 
	$°r_gsub
 (
lua_Sèã
 *
L
) {

763 
size_t
 
§˛
, 
Õ
;

764 c⁄° *
§c
 = 
	`luaL_checkl°rög
(
L
, 1, &
§˛
);

765 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

766 c⁄° *
œ°m©ch
 = 
NULL
;

767 
å
 = 
	`lua_ty≥
(
L
, 3);

768 
lua_I¡egî
 
max_s
 = 
	`luaL_›töãgî
(
L
, 4, 
§˛
 + 1);

769 
™ch‹
 = (*
p
 == '^');

770 
lua_I¡egî
 
n
 = 0;

771 
M©chSèã
 
ms
;

772 
luaL_Buf„r
 
b
;

773 
	`luaL_¨gcheck
(
L
, 
å
 =
LUA_TNUMBER
 ||Å∏=
LUA_TSTRING
 ||

774 
å
 =
LUA_TFUNCTION
 ||Å∏=
LUA_TTABLE
, 3,

776 
	`luaL_bufföô
(
L
, &
b
);

777 i‡(
™ch‹
) {

778 
p
++; 
Õ
--;

780 
	`¥ï°©e
(&
ms
, 
L
, 
§c
, 
§˛
, 
p
, 
Õ
);

781 
n
 < 
max_s
) {

782 c⁄° *
e
;

783 
	`ª¥ï°©e
(&
ms
);

784 i‡((
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
)Ë!
NULL
 &&É !
œ°m©ch
) {

785 
n
++;

786 
	`add_vÆue
(&
ms
, &
b
, 
§c
, 
e
, 
å
);

787 
§c
 = 
œ°m©ch
 = 
e
;

789 i‡(
§c
 < 
ms
.
§c_íd
)

790 
	`luaL_addch¨
(&
b
, *
§c
++);

792 i‡(
™ch‹
) ;

794 
	`luaL_addl°rög
(&
b
, 
§c
, 
ms
.
§c_íd
-src);

795 
	`luaL_pushªsu…
(&
b
);

796 
	`lua_pushöãgî
(
L
, 
n
);

798 
	}
}

810 #i‡!
deföed
(
lua_numbî2°rx
)

816 
	~<m©h.h
>

818 
	#SIZELENMOD
 ((
LUA_NUMBER_FRMLEN
)/())

	)

827 
	#L_NBFD
 ((
	`l_m©hlim
(
MANT_DIG
Ë- 1)%4 + 1)

	)

833 
lua_Numbî
 
	$adddigô
 (*
buff
, 
n
, 
lua_Numbî
 
x
) {

834 
lua_Numbî
 
dd
 = 
	`l_m©h›
(
Êo‹
)(
x
);

835 
d
 = ()
dd
;

836 
buff
[
n
] = (
d
 < 10 ? d + '0' : d - 10 + 'a');

837  
x
 - 
dd
;

838 
	}
}

841 
	$num2°øux
 (*
buff
, 
sz
, 
lua_Numbî
 
x
) {

843 i‡(
x
 !x || x =(
lua_Numbî
)
HUGE_VAL
 || x == -(lua_Number)HUGE_VAL)

844  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
, (
LUAI_UACNUMBER
)
x
);

845 i‡(
x
 == 0) {

847  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
 "x0p+0", (
LUAI_UACNUMBER
)
x
);

850 
e
;

851 
lua_Numbî
 
m
 = 
	`l_m©h›
(
‰exp
)(
x
, &
e
);

852 
n
 = 0;

853 i‡(
m
 < 0) {

854 
buff
[
n
++] = '-';

855 
m
 = -m;

857 
buff
[
n
++] = '0'; buff[n++] = 'x';

858 
m
 = 
	`adddigô
(
buff
, 
n
++, m * (1 << 
L_NBFD
));

859 
e
 -
L_NBFD
;

860 i‡(
m
 > 0) {

861 
buff
[
n
++] = 
	`lua_gëloˇÀde˝oöt
();

863 
m
 = 
	`adddigô
(
buff
, 
n
++, m * 16);

864 } 
m
 > 0);

866 
n
 +
	`l_•rötf
(
buff
 +Ç, 
sz
 -Ç, "p%+d", 
e
);

867 
	`lua_as£π
(
n
 < 
sz
);

868  
n
;

870 
	}
}

873 
	$lua_numbî2°rx
 (
lua_Sèã
 *
L
, *
buff
, 
sz
,

874 c⁄° *
fmt
, 
lua_Numbî
 
x
) {

875 
n
 = 
	`num2°øux
(
buff
, 
sz
, 
x
);

876 i‡(
fmt
[
SIZELENMOD
] == 'A') {

877 
i
;

878 
i
 = 0; i < 
n
; i++)

879 
buff
[
i
] = 
	`touµî
(
	`uch¨
(buff[i]));

881 i‡(
fmt
[
SIZELENMOD
] != 'a')

882  
	`luaL_îr‹
(
L
, "modifiers for format '%%a'/'%%A'Çot implemented");

883  
n
;

884 
	}
}

896 
	#MAX_ITEM
 (120 + 
	`l_m©hlim
(
MAX_10_EXP
))

	)

900 
	#FLAGS
 "-+ #0"

	)

905 
	#MAX_FORMAT
 32

	)

908 
	$addquŸed
 (
luaL_Buf„r
 *
b
, c⁄° *
s
, 
size_t
 
Àn
) {

909 
	`luaL_addch¨
(
b
, '"');

910 
Àn
--) {

911 i‡(*
s
 == '"' || *s == '\\' || *s == '\n') {

912 
	`luaL_addch¨
(
b
, '\\');

913 
	`luaL_addch¨
(
b
, *
s
);

915 i‡(
	`is˙ål
(
	`uch¨
(*
s
))) {

916 
buff
[10];

917 i‡(!
	`isdigô
(
	`uch¨
(*(
s
+1))))

918 
	`l_•rötf
(
buff
, (buff), "\\%d", ()
	`uch¨
(*
s
));

920 
	`l_•rötf
(
buff
, (buff), "\\%03d", ()
	`uch¨
(*
s
));

921 
	`luaL_add°rög
(
b
, 
buff
);

924 
	`luaL_addch¨
(
b
, *
s
);

925 
s
++;

927 
	`luaL_addch¨
(
b
, '"');

928 
	}
}

934 
	$checkdp
 (*
buff
, 
nb
) {

935 i‡(
	`memchr
(
buff
, '.', 
nb
Ë=
NULL
) {

936 
poöt
 = 
	`lua_gëloˇÀde˝oöt
();

937 *
µoöt
 = (*)
	`memchr
(
buff
, 
poöt
, 
nb
);

938 i‡(
µoöt
) *ppoint = '.';

940 
	}
}

943 
	$addlôîÆ
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
¨g
) {

944 
	`lua_ty≥
(
L
, 
¨g
)) {

945 
LUA_TSTRING
: {

946 
size_t
 
Àn
;

947 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, &
Àn
);

948 
	`addquŸed
(
b
, 
s
, 
Àn
);

951 
LUA_TNUMBER
: {

952 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
MAX_ITEM
);

953 
nb
;

954 i‡(!
	`lua_isöãgî
(
L
, 
¨g
)) {

955 
lua_Numbî
 
n
 = 
	`lua_t⁄umbî
(
L
, 
¨g
);

956 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, "%" 
LUA_NUMBER_FRMLEN
 "a", 
n
);

957 
	`checkdp
(
buff
, 
nb
);

960 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 
¨g
);

961 c⁄° *
f‹m©
 = (
n
 =
LUA_MININTEGER
)

962 ? "0x%" 
LUA_INTEGER_FRMLEN
 "x"

963 : 
LUA_INTEGER_FMT
;

964 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m©
, (
LUAI_UACINT
)
n
);

966 
	`luaL_addsize
(
b
, 
nb
);

969 
LUA_TNIL
: 
LUA_TBOOLEAN
: {

970 
	`luaL_tﬁ°rög
(
L
, 
¨g
, 
NULL
);

971 
	`luaL_addvÆue
(
b
);

975 
	`luaL_¨gîr‹
(
L
, 
¨g
, "value hasÇoÜiteral form");

978 
	}
}

981 c⁄° *
	$sˇnf‹m©
 (
lua_Sèã
 *
L
, c⁄° *
°r‰mt
, *
f‹m
) {

982 c⁄° *
p
 = 
°r‰mt
;

983 *
p
 !'\0' && 
	`°rchr
(
FLAGS
, *pË!
NULL
)Ö++;

984 i‡((
size_t
)(
p
 - 
°r‰mt
Ë>(
FLAGS
)/())

985 
	`luaL_îr‹
(
L
, "invalid format (repeated flags)");

986 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

987 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

988 i‡(*
p
 == '.') {

989 
p
++;

990 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

991 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

993 i‡(
	`isdigô
(
	`uch¨
(*
p
)))

994 
	`luaL_îr‹
(
L
, "invalid format (width orÖrecisionÅooÜong)");

995 *(
f‹m
++) = '%';

996 
	`mem˝y
(
f‹m
, 
°r‰mt
, ((
p
 - strfrmt) + 1) * ());

997 
f‹m
 +(
p
 - 
°r‰mt
) + 1;

998 *
f‹m
 = '\0';

999  
p
;

1000 
	}
}

1006 
	$addÀnmod
 (*
f‹m
, c⁄° *
Ànmod
) {

1007 
size_t
 
l
 = 
	`°æí
(
f‹m
);

1008 
size_t
 
lm
 = 
	`°æí
(
Ànmod
);

1009 
•ec
 = 
f‹m
[
l
 - 1];

1010 
	`°r˝y
(
f‹m
 + 
l
 - 1, 
Ànmod
);

1011 
f‹m
[
l
 + 
lm
 - 1] = 
•ec
;

1012 
f‹m
[
l
 + 
lm
] = '\0';

1013 
	}
}

1016 
	$°r_f‹m©
 (
lua_Sèã
 *
L
) {

1017 
t›
 = 
	`lua_gët›
(
L
);

1018 
¨g
 = 1;

1019 
size_t
 
sÊ
;

1020 c⁄° *
°r‰mt
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
sÊ
);

1021 c⁄° *
°r‰mt_íd
 = 
°r‰mt
+
sÊ
;

1022 
luaL_Buf„r
 
b
;

1023 
	`luaL_bufföô
(
L
, &
b
);

1024 
°r‰mt
 < 
°r‰mt_íd
) {

1025 i‡(*
°r‰mt
 !
L_ESC
)

1026 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

1027 i‡(*++
°r‰mt
 =
L_ESC
)

1028 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

1030 
f‹m
[
MAX_FORMAT
];

1031 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
MAX_ITEM
);

1032 
nb
 = 0;

1033 i‡(++
¨g
 > 
t›
)

1034 
	`luaL_¨gîr‹
(
L
, 
¨g
, "no value");

1035 
°r‰mt
 = 
	`sˇnf‹m©
(
L
, så‰mt, 
f‹m
);

1036 *
°r‰mt
++) {

1038 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, ()
	`luaL_checköãgî
(
L
, 
¨g
));

1043 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1044 
	`addÀnmod
(
f‹m
, 
LUA_INTEGER_FRMLEN
);

1045 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, (
LUAI_UACINT
)
n
);

1049 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1050 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, 
f‹m
,

1051 
	`luaL_checknumbî
(
L
, 
¨g
));

1055 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1056 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1057 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, (
LUAI_UACNUMBER
)
n
);

1061 
	`addlôîÆ
(
L
, &
b
, 
¨g
);

1065 
size_t
 
l
;

1066 c⁄° *
s
 = 
	`luaL_tﬁ°rög
(
L
, 
¨g
, &
l
);

1067 i‡(
f‹m
[2] == '\0')

1068 
	`luaL_addvÆue
(&
b
);

1070 
	`luaL_¨gcheck
(
L
, 
l
 =
	`°æí
(
s
), 
¨g
, "string contains zeros");

1071 i‡(!
	`°rchr
(
f‹m
, '.'Ë&& 
l
 >= 100) {

1073 
	`luaL_addvÆue
(&
b
);

1076 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
s
);

1077 
	`lua_p›
(
L
, 1);

1083  
	`luaL_îr‹
(
L
, "invalid option '%%%c'Åo 'format'",

1084 *(
°r‰mt
 - 1));

1087 
	`lua_as£π
(
nb
 < 
MAX_ITEM
);

1088 
	`luaL_addsize
(&
b
, 
nb
);

1091 
	`luaL_pushªsu…
(&
b
);

1093 
	}
}

1106 #i‡!
deföed
(
LUAL_PACKPADBYTE
)

1107 
	#LUAL_PACKPADBYTE
 0x00

	)

1111 
	#MAXINTSIZE
 16

	)

1114 
	#NB
 
CHAR_BIT


	)

1117 
	#MC
 ((1 << 
NB
Ë- 1)

	)

1120 
	#SZINT
 (()(
lua_I¡egî
))

	)

1125 
	mdummy
;

1126 
	mlôée
;

1127 } 
	g«tivìndün
 = {1};

1131 
	scD
 {

1132 
	mc
;

1133 uni⁄ { 
	md
; *
	mp
; 
lua_I¡egî
 
	mi
; 
lua_Numbî
 
	mn
; } 
	mu
;

1136 
	#MAXALIGN
 (
	`off£tof
(
cD
, 
u
))

	)

1142 
	uFty≥s
 {

1143 
	mf
;

1144 
	md
;

1145 
lua_Numbî
 
	mn
;

1146 
	mbuff
[5 * (
lua_Numbî
)];

1147 } 
	tFty≥s
;

1153 
	sHódî
 {

1154 
lua_Sèã
 *
	mL
;

1155 
	mi¶ôée
;

1156 
	mmaxÆign
;

1157 } 
	tHódî
;

1163 
	eKO±i⁄
 {

1164 
	mKöt
,

1165 
	mKuöt
,

1166 
	mKÊﬂt
,

1167 
	mKch¨
,

1168 
	mK°rög
,

1169 
	mKz°r
,

1170 
	mK∑ddög
,

1171 
	mK∑ddÆign
,

1172 
	mKn›


1173 } 
	tKO±i⁄
;

1180 
	$digô
 (
c
Ë{  '0' <¯&& c <'9'; 
	}
}

1182 
	$gënum
 (c⁄° **
fmt
, 
df
) {

1183 i‡(!
	`digô
(**
fmt
))

1184  
df
;

1186 
a
 = 0;

1188 
a
 =á*10 + (*((*
fmt
)++) - '0');

1189 } 
	`digô
(**
fmt
Ë&& 
a
 <(()
MAXSIZE
 - 9)/10);

1190  
a
;

1192 
	}
}

1199 
	$gënumlimô
 (
Hódî
 *
h
, c⁄° **
fmt
, 
df
) {

1200 
sz
 = 
	`gënum
(
fmt
, 
df
);

1201 i‡(
sz
 > 
MAXINTSIZE
 || sz <= 0)

1202  
	`luaL_îr‹
(
h
->
L
, "integral size (%d) out ofÜimits [1,%d]",

1203 
sz
, 
MAXINTSIZE
);

1204  
sz
;

1205 
	}
}

1211 
	$öôhódî
 (
lua_Sèã
 *
L
, 
Hódî
 *
h
) {

1212 
h
->
L
 = L;

1213 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
;

1214 
h
->
maxÆign
 = 1;

1215 
	}
}

1221 
KO±i⁄
 
	$gë›ti⁄
 (
Hódî
 *
h
, c⁄° **
fmt
, *
size
) {

1222 
›t
 = *((*
fmt
)++);

1223 *
size
 = 0;

1224 
›t
) {

1225 'b': *
size
 = ();  
Köt
;

1226 'B': *
size
 = ();  
Kuöt
;

1227 'h': *
size
 = ();  
Köt
;

1228 'H': *
size
 = ();  
Kuöt
;

1229 'l': *
size
 = ();  
Köt
;

1230 'L': *
size
 = ();  
Kuöt
;

1231 'j': *
size
 = (
lua_I¡egî
);  
Köt
;

1232 'J': *
size
 = (
lua_I¡egî
);  
Kuöt
;

1233 'T': *
size
 = (
size_t
);  
Kuöt
;

1234 'f': *
size
 = ();  
KÊﬂt
;

1235 'd': *
size
 = ();  
KÊﬂt
;

1236 'n': *
size
 = (
lua_Numbî
);  
KÊﬂt
;

1237 'i': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Köt
;

1238 'I': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Kuöt
;

1239 's': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, (
size_t
));  
K°rög
;

1241 *
size
 = 
	`gënum
(
fmt
, -1);

1242 i‡(*
size
 == -1)

1243 
	`luaL_îr‹
(
h
->
L
, "missing size for format option 'c'");

1244  
Kch¨
;

1245 'z':  
Kz°r
;

1246 'x': *
size
 = 1;  
K∑ddög
;

1247 'X':  
K∑ddÆign
;

1249 '<': 
h
->
i¶ôée
 = 1; ;

1250 '>': 
h
->
i¶ôée
 = 0; ;

1251 '=': 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
; ;

1252 '!': 
h
->
maxÆign
 = 
	`gënumlimô
(h, 
fmt
, 
MAXALIGN
); ;

1253 : 
	`luaL_îr‹
(
h
->
L
, "övÆid f‹m© o±i⁄ '%c'", 
›t
);

1255  
Kn›
;

1256 
	}
}

1268 
KO±i⁄
 
	$gëdëaûs
 (
Hódî
 *
h
, 
size_t
 
tŸÆsize
,

1269 c⁄° **
fmt
, *
psize
, *
¡ﬂlign
) {

1270 
KO±i⁄
 
›t
 = 
	`gë›ti⁄
(
h
, 
fmt
, 
psize
);

1271 
Æign
 = *
psize
;

1272 i‡(
›t
 =
K∑ddÆign
) {

1273 i‡(**
fmt
 ='\0' || 
	`gë›ti⁄
(
h
, fmt, &
Æign
Ë=
Kch¨
 ||álign == 0)

1274 
	`luaL_¨gîr‹
(
h
->
L
, 1, "invalidÇext option for option 'X'");

1276 i‡(
Æign
 <1 || 
›t
 =
Kch¨
)

1277 *
¡ﬂlign
 = 0;

1279 i‡(
Æign
 > 
h
->
maxÆign
)

1280 
Æign
 = 
h
->
maxÆign
;

1281 i‡((
Æign
 & (align - 1)) != 0)

1282 
	`luaL_¨gîr‹
(
h
->
L
, 1, "formatásks forálignmentÇotÖower of 2");

1283 *
¡ﬂlign
 = (
Æign
 - ()(
tŸÆsize
 & (align - 1))) & (align - 1);

1285  
›t
;

1286 
	}
}

1295 
	$∑cköt
 (
luaL_Buf„r
 *
b
, 
lua_Unsig√d
 
n
,

1296 
i¶ôée
, 
size
, 
√g
) {

1297 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
size
);

1298 
i
;

1299 
buff
[
i¶ôée
 ? 0 : 
size
 - 1] = ()(
n
 & 
MC
);

1300 
i
 = 1; i < 
size
; i++) {

1301 
n
 >>
NB
;

1302 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()(
n
 & 
MC
);

1304 i‡(
√g
 && 
size
 > 
SZINT
) {

1305 
i
 = 
SZINT
; i < 
size
; i++)

1306 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()
MC
;

1308 
	`luaL_addsize
(
b
, 
size
);

1309 
	}
}

1316 
	$c›ywôhídün
 (vﬁ©ûê*
de°
, vﬁ©ûêc⁄° *
§c
,

1317 
size
, 
i¶ôée
) {

1318 i‡(
i¶ôée
 =
«tivìndün
.
lôée
) {

1319 
size
-- != 0)

1320 *(
de°
++Ë*(
§c
++);

1323 
de°
 +
size
 - 1;

1324 
size
-- != 0)

1325 *(
de°
--Ë*(
§c
++);

1327 
	}
}

1330 
	$°r_∑ck
 (
lua_Sèã
 *
L
) {

1331 
luaL_Buf„r
 
b
;

1332 
Hódî
 
h
;

1333 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1334 
¨g
 = 1;

1335 
size_t
 
tŸÆsize
 = 0;

1336 
	`öôhódî
(
L
, &
h
);

1337 
	`lua_pushnû
(
L
);

1338 
	`luaL_bufföô
(
L
, &
b
);

1339 *
fmt
 != '\0') {

1340 
size
, 
¡ﬂlign
;

1341 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1342 
tŸÆsize
 +
¡ﬂlign
 + 
size
;

1343 
¡ﬂlign
-- > 0)

1344 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1345 
¨g
++;

1346 
›t
) {

1347 
Köt
: {

1348 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1349 i‡(
size
 < 
SZINT
) {

1350 
lua_I¡egî
 
lim
 = (lua_I¡egî)1 << ((
size
 * 
NB
) - 1);

1351 
	`luaL_¨gcheck
(
L
, -
lim
 <
n
 &&Ç <Üim, 
¨g
, "integer overflow");

1353 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, (n < 0));

1356 
Kuöt
: {

1357 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1358 i‡(
size
 < 
SZINT
)

1359 
	`luaL_¨gcheck
(
L
, (
lua_Unsig√d
)
n
 < (÷ua_Unsig√d)1 << (
size
 * 
NB
)),

1360 
¨g
, "unsigned overflow");

1361 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, 0);

1364 
KÊﬂt
: {

1365 vﬁ©ûê
Fty≥s
 
u
;

1366 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
size
);

1367 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1368 i‡(
size
 =(
u
.
f
)Ëu.‡()
n
;

1369 i‡(
size
 =(
u
.
d
)Ëu.d = ()
n
;

1370 
u
.
n
 =Ç;

1372 
	`c›ywôhídün
(
buff
, 
u
.buff, 
size
, 
h
.
i¶ôée
);

1373 
	`luaL_addsize
(&
b
, 
size
);

1376 
Kch¨
: {

1377 
size_t
 
Àn
;

1378 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1379 
	`luaL_¨gcheck
(
L
, 
Àn
 <(
size_t
)
size
, 
¨g
,

1381 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1382 
Àn
++ < (
size_t
)
size
)

1383 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1386 
K°rög
: {

1387 
size_t
 
Àn
;

1388 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1389 
	`luaL_¨gcheck
(
L
, 
size
 >()(
size_t
) ||

1390 
Àn
 < ((
size_t
)1 << (
size
 * 
NB
)),

1391 
¨g
, "stringÜength doesÇot fit in given size");

1392 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
Àn
, 
h
.
i¶ôée
, 
size
, 0);

1393 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1394 
tŸÆsize
 +
Àn
;

1397 
Kz°r
: {

1398 
size_t
 
Àn
;

1399 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1400 
	`luaL_¨gcheck
(
L
, 
	`°æí
(
s
Ë=
Àn
, 
¨g
, "string contains zeros");

1401 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1402 
	`luaL_addch¨
(&
b
, '\0');

1403 
tŸÆsize
 +
Àn
 + 1;

1406 
K∑ddög
: 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1407 
K∑ddÆign
: 
Kn›
:

1408 
¨g
--;

1412 
	`luaL_pushªsu…
(&
b
);

1414 
	}
}

1417 
	$°r_∑cksize
 (
lua_Sèã
 *
L
) {

1418 
Hódî
 
h
;

1419 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1420 
size_t
 
tŸÆsize
 = 0;

1421 
	`öôhódî
(
L
, &
h
);

1422 *
fmt
 != '\0') {

1423 
size
, 
¡ﬂlign
;

1424 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1425 
size
 +
¡ﬂlign
;

1426 
	`luaL_¨gcheck
(
L
, 
tŸÆsize
 <
MAXSIZE
 - 
size
, 1,

1428 
tŸÆsize
 +
size
;

1429 
›t
) {

1430 
K°rög
:

1431 
Kz°r
:

1432 
	`luaL_¨gîr‹
(
L
, 1, "variable-length format");

1437 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
tŸÆsize
);

1439 
	}
}

1450 
lua_I¡egî
 
	$u≈acköt
 (
lua_Sèã
 *
L
, c⁄° *
°r
,

1451 
i¶ôée
, 
size
, 
issig√d
) {

1452 
lua_Unsig√d
 
ªs
 = 0;

1453 
i
;

1454 
limô
 = (
size
 <
SZINT
) ? size : SZINT;

1455 
i
 = 
limô
 - 1; i >= 0; i--) {

1456 
ªs
 <<
NB
;

1457 
ªs
 |(
lua_Unsig√d
)()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i];

1459 i‡(
size
 < 
SZINT
) {

1460 i‡(
issig√d
) {

1461 
lua_Unsig√d
 
mask
 = (lua_Unsig√d)1 << (
size
*
NB
 - 1);

1462 
ªs
 = (‘e†^ 
mask
) - mask);

1465 i‡(
size
 > 
SZINT
) {

1466 
mask
 = (!
issig√d
 || (
lua_I¡egî
)
ªs
 >0Ë? 0 : 
MC
;

1467 
i
 = 
limô
; i < 
size
; i++) {

1468 i‡(()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] !
mask
)

1469 
	`luaL_îr‹
(
L
, "%d-byã i¡egî d€†nŸ fô i¡ÿLu®I¡egî", 
size
);

1472  (
lua_I¡egî
)
ªs
;

1473 
	}
}

1476 
	$°r_u≈ack
 (
lua_Sèã
 *
L
) {

1477 
Hódî
 
h
;

1478 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1479 
size_t
 
ld
;

1480 c⁄° *
d©a
 = 
	`luaL_checkl°rög
(
L
, 2, &
ld
);

1481 
size_t
 
pos
 = (size_t)
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ld
) - 1;

1482 
n
 = 0;

1483 
	`luaL_¨gcheck
(
L
, 
pos
 <
ld
, 3, "initialÖosition out of string");

1484 
	`öôhódî
(
L
, &
h
);

1485 *
fmt
 != '\0') {

1486 
size
, 
¡ﬂlign
;

1487 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
pos
, &
fmt
, &
size
, &
¡ﬂlign
);

1488 i‡((
size_t
)
¡ﬂlign
 + 
size
 > ~
pos
 ||Öo†+Çtﬂlig¿+ sizê> 
ld
)

1489 
	`luaL_¨gîr‹
(
L
, 2, "data stringÅoo short");

1490 
pos
 +
¡ﬂlign
;

1492 
	`luaL_check°ack
(
L
, 2, "too manyÑesults");

1493 
n
++;

1494 
›t
) {

1495 
Köt
:

1496 
Kuöt
: {

1497 
lua_I¡egî
 
ªs
 = 
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
,

1498 (
›t
 =
Köt
));

1499 
	`lua_pushöãgî
(
L
, 
ªs
);

1502 
KÊﬂt
: {

1503 vﬁ©ûê
Fty≥s
 
u
;

1504 
lua_Numbî
 
num
;

1505 
	`c›ywôhídün
(
u
.
buff
, 
d©a
 + 
pos
, 
size
, 
h
.
i¶ôée
);

1506 i‡(
size
 =(
u
.
f
)Ë
num
 = (
lua_Numbî
)u.f;

1507 i‡(
size
 =(
u
.
d
)Ë
num
 = (
lua_Numbî
)u.d;

1508 
num
 = 
u
.
n
;

1509 
	`lua_pushnumbî
(
L
, 
num
);

1512 
Kch¨
: {

1513 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
size
);

1516 
K°rög
: {

1517 
size_t
 
Àn
 = (size_t)
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
, 0);

1518 
	`luaL_¨gcheck
(
L
, 
pos
 + 
Àn
 + 
size
 <
ld
, 2, "data stringÅoo short");

1519 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
 + 
size
, 
Àn
);

1520 
pos
 +
Àn
;

1523 
Kz°r
: {

1524 
size_t
 
Àn
 = ()
	`°æí
(
d©a
 + 
pos
);

1525 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
Àn
);

1526 
pos
 +
Àn
 + 1;

1529 
K∑ddÆign
: 
K∑ddög
: 
Kn›
:

1530 
n
--;

1533 
pos
 +
size
;

1535 
	`lua_pushöãgî
(
L
, 
pos
 + 1);

1536  
n
 + 1;

1537 
	}
}

1542 c⁄° 
luaL_Reg
 
	g°æib
[] = {

1543 {"byã", 
°r_byã
},

1544 {"ch¨", 
°r_ch¨
},

1545 {"dump", 
°r_dump
},

1546 {"föd", 
°r_föd
},

1547 {"f‹m©", 
°r_f‹m©
},

1548 {"gm©ch", 
gm©ch
},

1549 {"gsub", 
°r_gsub
},

1550 {"Àn", 
°r_Àn
},

1551 {"lowî", 
°r_lowî
},

1552 {"m©ch", 
°r_m©ch
},

1553 {"ªp", 
°r_ªp
},

1554 {"ªvî£", 
°r_ªvî£
},

1555 {"sub", 
°r_sub
},

1556 {"uµî", 
°r_uµî
},

1557 {"∑ck", 
°r_∑ck
},

1558 {"∑cksize", 
°r_∑cksize
},

1559 {"u≈ack", 
°r_u≈ack
},

1560 {
NULL
, NULL}

1564 
	$¸óãmë©abÀ
 (
lua_Sèã
 *
L
) {

1565 
	`lua_¸óãèbÀ
(
L
, 0, 1);

1566 
	`lua_pushlôîÆ
(
L
, "");

1567 
	`lua_pushvÆue
(
L
, -2);

1568 
	`lua_£tmë©abÀ
(
L
, -2);

1569 
	`lua_p›
(
L
, 1);

1570 
	`lua_pushvÆue
(
L
, -2);

1571 
	`lua_£tfõld
(
L
, -2, "__index");

1572 
	`lua_p›
(
L
, 1);

1573 
	}
}

1579 
LUAMOD_API
 
	$lua›í_°rög
 (
lua_Sèã
 *
L
) {

1580 
	`luaL_√wlib
(
L
, 
°æib
);

1581 
	`¸óãmë©abÀ
(
L
);

1583 
	}
}

	@ltable.c

7 
	#…abÀ_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

26 
	~<m©h.h
>

27 
	~<limôs.h
>

29 
	~"lua.h
"

31 
	~"ldebug.h
"

32 
	~"ldo.h
"

33 
	~"lgc.h
"

34 
	~"lmem.h
"

35 
	~"lobje˘.h
"

36 
	~"l°©e.h
"

37 
	~"l°rög.h
"

38 
	~"…abÀ.h
"

39 
	~"lvm.h
"

46 
	#MAXABITS
 
	`ˇ°_öt
((Ë* 
CHAR_BIT
 - 1)

	)

47 
	#MAXASIZE
 (1u << 
MAXABITS
)

	)

55 
	#MAXHBITS
 (
MAXABITS
 - 1)

	)

58 
	#hashpow2
(
t
,
n
Ë(
	`gnode
—, 
	`lmod
(“), 
	`sizíode
—))))

	)

60 
	#hash°r
(
t
,
°r
Ë
	`hashpow2
—, (°r)->
hash
)

	)

61 
	#hashboﬁón
(
t
,
p
Ë
	`hashpow2
—,Ö)

	)

62 
	#hashöt
(
t
,
i
Ë
	`hashpow2
—, i)

	)

69 
	#hashmod
(
t
,
n
Ë(
	`gnode
—, (“Ë% ((
	`sizíode
—)-1)|1))))

	)

72 
	#hashpoöãr
(
t
,
p
Ë
	`hashmod
—, 
	`poöt2uöt
’))

	)

75 
	#dummynode
 (&
dummynode_
)

	)

77 c⁄° 
Node
 
	gdummynode_
 = {

78 {
NILCONSTANT
},

79 {{
NILCONSTANT
, 0}}

96 #i‡!
deföed
(
l_hashÊﬂt
)

97 
	$l_hashÊﬂt
 (
lua_Numbî
 
n
) {

98 
i
;

99 
lua_I¡egî
 
ni
;

100 
n
 = 
	`l_m©h›
(
‰exp
)“, &
i
Ë* -
	`ˇ°_num
(
INT_MIN
);

101 i‡(!
	`lua_numbîtoöãgî
(
n
, &
ni
)) {

102 
	`lua_as£π
(
	`luai_numi¢™
(
n
Ë|| 
	`l_m©h›
(
Ábs
)“Ë=
	`ˇ°_num
(
HUGE_VAL
));

106 
u
 = 
	`ˇ°
(, 
i
Ë+ ca°(, 
ni
);

107  
	`ˇ°_öt
(
u
 <
	`ˇ°
(, 
INT_MAX
) ? u : ~u);

109 
	}
}

117 
Node
 *
	$maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

118 
	`ây≥
(
key
)) {

119 
LUA_TNUMINT
:

120  
	`hashöt
(
t
, 
	`ivÆue
(
key
));

121 
LUA_TNUMFLT
:

122  
	`hashmod
(
t
, 
	`l_hashÊﬂt
(
	`ÊtvÆue
(
key
)));

123 
LUA_TSHRSTR
:

124  
	`hash°r
(
t
, 
	`tsvÆue
(
key
));

125 
LUA_TLNGSTR
:

126  
	`hashpow2
(
t
, 
	`luaS_hashl⁄g°r
(
	`tsvÆue
(
key
)));

127 
LUA_TBOOLEAN
:

128  
	`hashboﬁón
(
t
, 
	`bvÆue
(
key
));

129 
LUA_TLIGHTUSERDATA
:

130  
	`hashpoöãr
(
t
, 
	`pvÆue
(
key
));

131 
LUA_TLCF
:

132  
	`hashpoöãr
(
t
, 
	`fvÆue
(
key
));

134 
	`lua_as£π
(!
	`âisdódkey
(
key
));

135  
	`hashpoöãr
(
t
, 
	`gcvÆue
(
key
));

137 
	}
}

144 
	$¨øyödex
 (c⁄° 
TVÆue
 *
key
) {

145 i‡(
	`âisöãgî
(
key
)) {

146 
lua_I¡egî
 
k
 = 
	`ivÆue
(
key
);

147 i‡(0 < 
k
 && (
lua_Unsig√d
)k <
MAXASIZE
)

148  
	`ˇ°
(, 
k
);

151 
	}
}

159 
	$födödex
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

160 
i
;

161 i‡(
	`âi¢û
(
key
))  0;

162 
i
 = 
	`¨øyödex
(
key
);

163 i‡(
i
 !0 && i <
t
->
sizóºay
)

164  
i
;

166 
nx
;

167 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

170 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
) ||

171 (
	`âisdódkey
(
	`gkey
(
n
)Ë&& 
	`iscﬁÀ˘abÀ
(
key
) &&

172 
	`dódvÆue
(
	`gkey
(
n
)Ë=
	`gcvÆue
(
key
))) {

173 
i
 = 
	`ˇ°_öt
(
n
 - 
	`gnode
(
t
, 0));

175  (
i
 + 1Ë+ 
t
->
sizóºay
;

177 
nx
 = 
	`g√xt
(
n
);

178 i‡(
nx
 == 0)

179 
	`luaG_ru√º‹
(
L
, "invalid keyÅo 'next'");

180 
n
 +
nx
;

183 
	}
}

186 
	$luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

187 
i
 = 
	`födödex
(
L
, 
t
, 
key
);

188 ; 
i
 < 
t
->
sizóºay
; i++) {

189 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
])) {

190 
	`£tivÆue
(
key
, 
i
 + 1);

191 
	`£tobj2s
(
L
, 
key
+1, &
t
->
¨øy
[
i
]);

195 
i
 -
t
->
sizóºay
; 
	`ˇ°_öt
(iË< 
	`sizíode
(t); i++) {

196 i‡(!
	`âi¢û
(
	`gvÆ
(
	`gnode
(
t
, 
i
)))) {

197 
	`£tobj2s
(
L
, 
key
, 
	`gkey
(
	`gnode
(
t
, 
i
)));

198 
	`£tobj2s
(
L
, 
key
+1, 
	`gvÆ
(
	`gnode
(
t
, 
i
)));

203 
	}
}

219 
	$compuãsizes
 (
nums
[], *
≤a
) {

220 
i
;

221 
twŸoi
;

222 
a
 = 0;

223 
«
 = 0;

224 
›timÆ
 = 0;

226 
i
 = 0, 
twŸoi
 = 1;

227 
twŸoi
 > 0 && *
≤a
 >Åwotoi / 2;

228 
i
++, 
twŸoi
 *= 2) {

229 i‡(
nums
[
i
] > 0) {

230 
a
 +
nums
[
i
];

231 i‡(
a
 > 
twŸoi
/2) {

232 
›timÆ
 = 
twŸoi
;

233 
«
 = 
a
;

237 
	`lua_as£π
((
›timÆ
 =0 || o±imÆ / 2 < 
«
) &&Ça <= optimal);

238 *
≤a
 = 
«
;

239  
›timÆ
;

240 
	}
}

243 
	$cou¡öt
 (c⁄° 
TVÆue
 *
key
, *
nums
) {

244 
k
 = 
	`¨øyödex
(
key
);

245 i‡(
k
 != 0) {

246 
nums
[
	`luaO_˚ûlog2
(
k
)]++;

251 
	}
}

259 
	$numu£¨øy
 (c⁄° 
TabÀ
 *
t
, *
nums
) {

260 
lg
;

261 
âlg
;

262 
au£
 = 0;

263 
i
 = 1;

265 
lg
 = 0, 
âlg
 = 1;Üg <
MAXABITS
;Üg++,Åtlg *= 2) {

266 
lc
 = 0;

267 
lim
 = 
âlg
;

268 i‡(
lim
 > 
t
->
sizóºay
) {

269 
lim
 = 
t
->
sizóºay
;

270 i‡(
i
 > 
lim
)

274 ; 
i
 <
lim
; i++) {

275 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
-1]))

276 
lc
++;

278 
nums
[
lg
] +
lc
;

279 
au£
 +
lc
;

281  
au£
;

282 
	}
}

285 
	$numu£hash
 (c⁄° 
TabÀ
 *
t
, *
nums
, *
≤a
) {

286 
tŸÆu£
 = 0;

287 
au£
 = 0;

288 
i
 = 
	`sizíode
(
t
);

289 
i
--) {

290 
Node
 *
n
 = &
t
->
node
[
i
];

291 i‡(!
	`âi¢û
(
	`gvÆ
(
n
))) {

292 
au£
 +
	`cou¡öt
(
	`gkey
(
n
), 
nums
);

293 
tŸÆu£
++;

296 *
≤a
 +
au£
;

297  
tŸÆu£
;

298 
	}
}

301 
	$£èºayve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

302 
i
;

303 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
,Å->
sizóºay
, 
size
, 
TVÆue
);

304 
i
=
t
->
sizóºay
; i<
size
; i++)

305 
	`£äûvÆue
(&
t
->
¨øy
[
i
]);

306 
t
->
sizóºay
 = 
size
;

307 
	}
}

310 
	$£äodeve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

311 i‡(
size
 == 0) {

312 
t
->
node
 = 
	`ˇ°
(
Node
 *, 
dummynode
);

313 
t
->
lsizíode
 = 0;

314 
t
->
œ°‰ì
 = 
NULL
;

317 
i
;

318 
lsize
 = 
	`luaO_˚ûlog2
(
size
);

319 i‡(
lsize
 > 
MAXHBITS
)

320 
	`luaG_ru√º‹
(
L
, "table overflow");

321 
size
 = 
	`twŸo
(
lsize
);

322 
t
->
node
 = 
	`luaM_√wve˘‹
(
L
, 
size
, 
Node
);

323 
i
 = 0; i < ()
size
; i++) {

324 
Node
 *
n
 = 
	`gnode
(
t
, 
i
);

325 
	`g√xt
(
n
) = 0;

326 
	`£äûvÆue
(
	`wgkey
(
n
));

327 
	`£äûvÆue
(
	`gvÆ
(
n
));

329 
t
->
lsizíode
 = 
	`ˇ°_byã
(
lsize
);

330 
t
->
œ°‰ì
 = 
	`gnode
—, 
size
);

332 
	}
}

336 
TabÀ
 *
	mt
;

337 
	mnhsize
;

338 } 
	tAux£äodeT
;

341 
	$aux£äode
 (
lua_Sèã
 *
L
, *
ud
) {

342 
Aux£äodeT
 *
a¢
 = 
	`ˇ°
(Aux£äodeT *, 
ud
);

343 
	`£äodeve˘‹
(
L
, 
a¢
->
t
,á¢->
nhsize
);

344 
	}
}

347 
	$luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

348 
nhsize
) {

349 
i
;

350 
j
;

351 
Aux£äodeT
 
a¢
;

352 
ﬁdasize
 = 
t
->
sizóºay
;

353 
ﬁdhsize
 = 
	`Ælocsizíode
(
t
);

354 
Node
 *
nﬁd
 = 
t
->
node
;

355 i‡(
«size
 > 
ﬁdasize
)

356 
	`£èºayve˘‹
(
L
, 
t
, 
«size
);

358 
a¢
.
t
 =Å;á¢.
nhsize
 =Çhsize;

359 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
aux£äode
, &
a¢
Ë!
LUA_OK
) {

360 
	`£èºayve˘‹
(
L
, 
t
, 
ﬁdasize
);

361 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

363 i‡(
«size
 < 
ﬁdasize
) {

364 
t
->
sizóºay
 = 
«size
;

366 
i
=
«size
; i<
ﬁdasize
; i++) {

367 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
]))

368 
	`luaH_£töt
(
L
, 
t
, 
i
 + 1, &t->
¨øy
[i]);

371 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
, 
ﬁdasize
, 
«size
, 
TVÆue
);

374 
j
 = 
ﬁdhsize
 - 1; j >= 0; j--) {

375 
Node
 *
ﬁd
 = 
nﬁd
 + 
j
;

376 i‡(!
	`âi¢û
(
	`gvÆ
(
ﬁd
))) {

379 
	`£tobjt2t
(
L
, 
	`luaH_£t
(L, 
t
, 
	`gkey
(
ﬁd
)), 
	`gvÆ
(old));

382 i‡(
ﬁdhsize
 > 0)

383 
	`luaM_‰ì¨øy
(
L
, 
nﬁd
, 
	`ˇ°
(
size_t
, 
ﬁdhsize
));

384 
	}
}

387 
	$luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
) {

388 
nsize
 = 
	`Ælocsizíode
(
t
);

389 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
nsize
);

390 
	}
}

395 
	$ªhash
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
ek
) {

396 
asize
;

397 
«
;

398 
nums
[
MAXABITS
 + 1];

399 
i
;

400 
tŸÆu£
;

401 
i
 = 0; i <
MAXABITS
; i++Ë
nums
[i] = 0;

402 
«
 = 
	`numu£¨øy
(
t
, 
nums
);

403 
tŸÆu£
 = 
«
;

404 
tŸÆu£
 +
	`numu£hash
(
t
, 
nums
, &
«
);

406 
«
 +
	`cou¡öt
(
ek
, 
nums
);

407 
tŸÆu£
++;

409 
asize
 = 
	`compuãsizes
(
nums
, &
«
);

411 
	`luaH_ªsize
(
L
, 
t
, 
asize
, 
tŸÆu£
 - 
«
);

412 
	}
}

421 
TabÀ
 *
	$luaH_√w
 (
lua_Sèã
 *
L
) {

422 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TTABLE
, (
TabÀ
));

423 
TabÀ
 *
t
 = 
	`gco2t
(
o
);

424 
t
->
më©abÀ
 = 
NULL
;

425 
t
->
Êags
 = 
	`ˇ°_byã
(~0);

426 
t
->
¨øy
 = 
NULL
;

427 
t
->
sizóºay
 = 0;

428 
	`£äodeve˘‹
(
L
, 
t
, 0);

429  
t
;

430 
	}
}

433 
	$luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

434 i‡(!
	`isdummy
(
t
))

435 
	`luaM_‰ì¨øy
(
L
, 
t
->
node
, 
	`ˇ°
(
size_t
, 
	`sizíode
(t)));

436 
	`luaM_‰ì¨øy
(
L
, 
t
->
¨øy
,Å->
sizóºay
);

437 
	`luaM_‰ì
(
L
, 
t
);

438 
	}
}

441 
Node
 *
	$gë‰ìpos
 (
TabÀ
 *
t
) {

442 i‡(!
	`isdummy
(
t
)) {

443 
t
->
œ°‰ì
 >Å->
node
) {

444 
t
->
œ°‰ì
--;

445 i‡(
	`âi¢û
(
	`gkey
(
t
->
œ°‰ì
)))

446  
t
->
œ°‰ì
;

449  
NULL
;

450 
	}
}

461 
TVÆue
 *
	$luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

462 
Node
 *
mp
;

463 
TVÆue
 
aux
;

464 i‡(
	`âi¢û
(
key
)Ë
	`luaG_ru√º‹
(
L
, "table index isÇil");

465 i‡(
	`âisÊﬂt
(
key
)) {

466 
lua_I¡egî
 
k
;

467 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0)) {

468 
	`£tivÆue
(&
aux
, 
k
);

469 
key
 = &
aux
;

471 i‡(
	`luai_numi¢™
(
	`ÊtvÆue
(
key
)))

472 
	`luaG_ru√º‹
(
L
, "table index is NaN");

474 
mp
 = 
	`maöposôi⁄
(
t
, 
key
);

475 i‡(!
	`âi¢û
(
	`gvÆ
(
mp
)Ë|| 
	`isdummy
(
t
)) {

476 
Node
 *
Ÿhîn
;

477 
Node
 *
f
 = 
	`gë‰ìpos
(
t
);

478 i‡(
f
 =
NULL
) {

479 
	`ªhash
(
L
, 
t
, 
key
);

481  
	`luaH_£t
(
L
, 
t
, 
key
);

483 
	`lua_as£π
(!
	`isdummy
(
t
));

484 
Ÿhîn
 = 
	`maöposôi⁄
(
t
, 
	`gkey
(
mp
));

485 i‡(
Ÿhîn
 !
mp
) {

487 
Ÿhîn
 + 
	`g√xt
(ŸhînË!
mp
)

488 
Ÿhîn
 +
	`g√xt
(othern);

489 
	`g√xt
(
Ÿhîn
Ë
	`ˇ°_öt
(
f
 - othern);

490 *
f
 = *
mp
;

491 i‡(
	`g√xt
(
mp
) != 0) {

492 
	`g√xt
(
f
Ë+
	`ˇ°_öt
(
mp
 - f);

493 
	`g√xt
(
mp
) = 0;

495 
	`£äûvÆue
(
	`gvÆ
(
mp
));

499 i‡(
	`g√xt
(
mp
) != 0)

500 
	`g√xt
(
f
Ë
	`ˇ°_öt
((
mp
 + gnext(mp)) - f);

501 
	`lua_as£π
(
	`g√xt
(
f
) == 0);

502 
	`g√xt
(
mp
Ë
	`ˇ°_öt
(
f
 - mp);

503 
mp
 = 
f
;

506 
	`£äodekey
(
L
, &
mp
->
i_key
, 
key
);

507 
	`luaC_b¨rõrback
(
L
, 
t
, 
key
);

508 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
mp
)));

509  
	`gvÆ
(
mp
);

510 
	}
}

516 c⁄° 
TVÆue
 *
	$luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
) {

518 i‡(
	`l_ˇ°S2U
(
key
Ë- 1 < 
t
->
sizóºay
)

519  &
t
->
¨øy
[
key
 - 1];

521 
Node
 *
n
 = 
	`hashöt
(
t
, 
key
);

523 i‡(
	`âisöãgî
(
	`gkey
(
n
)Ë&& 
	`ivÆue
(gkey“)Ë=
key
)

524  
	`gvÆ
(
n
);

526 
nx
 = 
	`g√xt
(
n
);

527 i‡(
nx
 == 0) ;

528 
n
 +
nx
;

531  
luaO_nûobje˘
;

533 
	}
}

539 c⁄° 
TVÆue
 *
	$luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

540 
Node
 *
n
 = 
	`hash°r
(
t
, 
key
);

541 
	`lua_as£π
(
key
->
â
 =
LUA_TSHRSTR
);

543 c⁄° 
TVÆue
 *
k
 = 
	`gkey
(
n
);

544 i‡(
	`âisshr°rög
(
k
Ë&& 
	`eqshr°r
(
	`tsvÆue
(k), 
key
))

545  
	`gvÆ
(
n
);

547 
nx
 = 
	`g√xt
(
n
);

548 i‡(
nx
 == 0)

549  
luaO_nûobje˘
;

550 
n
 +
nx
;

553 
	}
}

560 c⁄° 
TVÆue
 *
	$gëgíîic
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

561 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

563 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
))

564  
	`gvÆ
(
n
);

566 
nx
 = 
	`g√xt
(
n
);

567 i‡(
nx
 == 0)

568  
luaO_nûobje˘
;

569 
n
 +
nx
;

572 
	}
}

575 c⁄° 
TVÆue
 *
	$luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

576 i‡(
key
->
â
 =
LUA_TSHRSTR
)

577  
	`luaH_gësh‹t°r
(
t
, 
key
);

579 
TVÆue
 
ko
;

580 
	`£tsvÆue
(
	`ˇ°
(
lua_Sèã
 *, 
NULL
), &
ko
, 
key
);

581  
	`gëgíîic
(
t
, &
ko
);

583 
	}
}

589 c⁄° 
TVÆue
 *
	$luaH_gë
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

590 
	`ây≥
(
key
)) {

591 
LUA_TSHRSTR
:  
	`luaH_gësh‹t°r
(
t
, 
	`tsvÆue
(
key
));

592 
LUA_TNUMINT
:  
	`luaH_gëöt
(
t
, 
	`ivÆue
(
key
));

593 
LUA_TNIL
:  
luaO_nûobje˘
;

594 
LUA_TNUMFLT
: {

595 
lua_I¡egî
 
k
;

596 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0))

597  
	`luaH_gëöt
(
t
, 
k
);

601  
	`gëgíîic
(
t
, 
key
);

603 
	}
}

610 
TVÆue
 *
	$luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

611 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gë
(
t
, 
key
);

612 i‡(
p
 !
luaO_nûobje˘
)

613  
	`ˇ°
(
TVÆue
 *, 
p
);

614  
	`luaH_√wkey
(
L
, 
t
, 
key
);

615 
	}
}

618 
	$luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
, 
TVÆue
 *
vÆue
) {

619 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gëöt
(
t
, 
key
);

620 
TVÆue
 *
˚Œ
;

621 i‡(
p
 !
luaO_nûobje˘
)

622 
˚Œ
 = 
	`ˇ°
(
TVÆue
 *, 
p
);

624 
TVÆue
 
k
;

625 
	`£tivÆue
(&
k
, 
key
);

626 
˚Œ
 = 
	`luaH_√wkey
(
L
, 
t
, &
k
);

628 
	`£tobj2t
(
L
, 
˚Œ
, 
vÆue
);

629 
	}
}

632 
lua_Unsig√d
 
	$unbound_£¨ch
 (
TabÀ
 *
t
, 
lua_Unsig√d
 
j
) {

633 
lua_Unsig√d
 
i
 = 
j
;

634 
j
++;

636 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
j
))) {

637 
i
 = 
j
;

638 i‡(
j
 > 
	`l_ˇ°S2U
(
LUA_MAXINTEGER
) / 2) {

640 
i
 = 1;

641 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
i
))) i++;

642  
i
 - 1;

644 
j
 *= 2;

647 
j
 - 
i
 > 1) {

648 
lua_Unsig√d
 
m
 = (
i
+
j
)/2;

649 i‡(
	`âi¢û
(
	`luaH_gëöt
(
t
, 
m
))Ë
j
 = m;

650 
i
 = 
m
;

652  
i
;

653 
	}
}

660 
lua_Unsig√d
 
	$luaH_gën
 (
TabÀ
 *
t
) {

661 
j
 = 
t
->
sizóºay
;

662 i‡(
j
 > 0 && 
	`âi¢û
(&
t
->
¨øy
[j - 1])) {

664 
i
 = 0;

665 
j
 - 
i
 > 1) {

666 
m
 = (
i
+
j
)/2;

667 i‡(
	`âi¢û
(&
t
->
¨øy
[
m
 - 1])Ë
j
 = m;

668 
i
 = 
m
;

670  
i
;

673 i‡(
	`isdummy
(
t
))

674  
j
;

675  
	`unbound_£¨ch
(
t
, 
j
);

676 
	}
}

680 #i‡
deföed
(
LUA_DEBUG
)

682 
Node
 *
	$luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

683  
	`maöposôi⁄
(
t
, 
key
);

684 
	}
}

686 
	$luaH_isdummy
 (c⁄° 
TabÀ
 *
t
Ë{  
	`isdummy
—); 
	}
}

	@ltable.h

7 #i‚de‡
…abÀ_h


8 
	#…abÀ_h


	)

10 
	~"lobje˘.h
"

13 
	#gnode
(
t
,
i
Ë(&—)->
node
[i])

	)

14 
	#gvÆ
(
n
Ë(&“)->
i_vÆ
)

	)

15 
	#g√xt
(
n
Ë(“)->
i_key
.
nk
.
√xt
)

	)

19 
	#gkey
(
n
Ë
	`ˇ°
(c⁄° 
TVÆue
*, (&“)->
i_key
.
tvk
))

	)

25 
	#wgkey
(
n
Ë(&“)->
i_key
.
nk
)

	)

27 
	#övÆid©eTMˇche
(
t
Ë(—)->
Êags
 = 0)

	)

31 
	#isdummy
(
t
Ë(—)->
œ°‰ì
 =
NULL
)

	)

35 
	#Ælocsizíode
(
t
Ë(
	`isdummy
—Ë? 0 : 
	`sizíode
—))

	)

39 
	#key‰omvÆ
(
v
) \

40 (
	`gkey
(
	`ˇ°
(
Node
 *, ca°(*, (
v
)Ë- 
	`off£tof
(Node, 
i_vÆ
))))

	)

43 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
);

44 
LUAI_FUNC
 
luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
,

45 
TVÆue
 *
vÆue
);

46 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

47 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

48 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë
 (
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

49 
LUAI_FUNC
 
TVÆue
 *
luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

50 
LUAI_FUNC
 
TVÆue
 *
luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

51 
LUAI_FUNC
 
TabÀ
 *
luaH_√w
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

53 
nhsize
);

54 
LUAI_FUNC
 
luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
);

55 
LUAI_FUNC
 
luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
);

56 
LUAI_FUNC
 
luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
);

57 
LUAI_FUNC
 
lua_Unsig√d
 
luaH_gën
 (
TabÀ
 *
t
);

60 #i‡
deföed
(
LUA_DEBUG
)

61 
LUAI_FUNC
 
Node
 *
luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
);

62 
LUAI_FUNC
 
luaH_isdummy
 (c⁄° 
TabÀ
 *
t
);

	@ltablib.c

7 
	#…ablib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<limôs.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 
	#TAB_R
 1

	)

28 
	#TAB_W
 2

	)

29 
	#TAB_L
 4

	)

30 
	#TAB_RW
 (
TAB_R
 | 
TAB_W
Ë

	)

33 
	#aux_gën
(
L
,
n
,
w
Ë(
	`checkèb
(L,Ç, (wË| 
TAB_L
), 
	`luaL_Àn
(L,Ç))

	)

36 
	$checkfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
n
) {

37 
	`lua_push°rög
(
L
, 
key
);

38  (
	`lua_øwgë
(
L
, -
n
Ë!
LUA_TNIL
);

39 
	}
}

46 
	$checkèb
 (
lua_Sèã
 *
L
, 
¨g
, 
wh©
) {

47 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
LUA_TTABLE
) {

48 
n
 = 1;

49 i‡(
	`lua_gëmë©abÀ
(
L
, 
¨g
) &&

50 (!(
wh©
 & 
TAB_R
Ë|| 
	`checkfõld
(
L
, "__ödex", ++
n
)) &&

51 (!(
wh©
 & 
TAB_W
Ë|| 
	`checkfõld
(
L
, "__√wödex", ++
n
)) &&

52 (!(
wh©
 & 
TAB_L
Ë|| 
	`checkfõld
(
L
, "__Àn", ++
n
))) {

53 
	`lua_p›
(
L
, 
n
);

56 
	`luaL_checkty≥
(
L
, 
¨g
, 
LUA_TTABLE
);

58 
	}
}

61 #i‡
deföed
(
LUA_COMPAT_MAXN
)

62 
	$maxn
 (
lua_Sèã
 *
L
) {

63 
lua_Numbî
 
max
 = 0;

64 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

65 
	`lua_pushnû
(
L
);

66 
	`lua_√xt
(
L
, 1)) {

67 
	`lua_p›
(
L
, 1);

68 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TNUMBER
) {

69 
lua_Numbî
 
v
 = 
	`lua_t⁄umbî
(
L
, -1);

70 i‡(
v
 > 
max
) max = v;

73 
	`lua_pushnumbî
(
L
, 
max
);

75 
	}
}

79 
	$tö£π
 (
lua_Sèã
 *
L
) {

80 
lua_I¡egî
 
e
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
) + 1;

81 
lua_I¡egî
 
pos
;

82 
	`lua_gët›
(
L
)) {

84 
pos
 = 
e
;

88 
lua_I¡egî
 
i
;

89 
pos
 = 
	`luaL_checköãgî
(
L
, 2);

90 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
e
, 2, "position out of bounds");

91 
i
 = 
e
; i > 
pos
; i--) {

92 
	`lua_gëi
(
L
, 1, 
i
 - 1);

93 
	`lua_£ti
(
L
, 1, 
i
);

98  
	`luaL_îr‹
(
L
, "wrongÇumber ofárgumentsÅo 'insert'");

101 
	`lua_£ti
(
L
, 1, 
pos
);

103 
	}
}

106 
	$åemove
 (
lua_Sèã
 *
L
) {

107 
lua_I¡egî
 
size
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

108 
lua_I¡egî
 
pos
 = 
	`luaL_›töãgî
(
L
, 2, 
size
);

109 i‡(
pos
 !
size
)

110 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
size
 + 1, 1, "position out of bounds");

111 
	`lua_gëi
(
L
, 1, 
pos
);

112  ; 
pos
 < 
size
;Öos++) {

113 
	`lua_gëi
(
L
, 1, 
pos
 + 1);

114 
	`lua_£ti
(
L
, 1, 
pos
);

116 
	`lua_pushnû
(
L
);

117 
	`lua_£ti
(
L
, 1, 
pos
);

119 
	}
}

128 
	$tmove
 (
lua_Sèã
 *
L
) {

129 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 2);

130 
lua_I¡egî
 
e
 = 
	`luaL_checköãgî
(
L
, 3);

131 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 4);

132 
â
 = !
	`lua_i¢⁄e‹nû
(
L
, 5) ? 5 : 1;

133 
	`checkèb
(
L
, 1, 
TAB_R
);

134 
	`checkèb
(
L
, 
â
, 
TAB_W
);

135 i‡(
e
 >
f
) {

136 
lua_I¡egî
 
n
, 
i
;

137 
	`luaL_¨gcheck
(
L
, 
f
 > 0 || 
e
 < 
LUA_MAXINTEGER
 + f, 3,

139 
n
 = 
e
 - 
f
 + 1;

140 
	`luaL_¨gcheck
(
L
, 
t
 <
LUA_MAXINTEGER
 - 
n
 + 1, 4,

142 i‡(
t
 > 
e
 ||Å <
f
 || (
â
 !1 && !
	`lua_com∑ª
(
L
, 1,Åt, 
LUA_OPEQ
))) {

143 
i
 = 0; i < 
n
; i++) {

144 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

145 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

149 
i
 = 
n
 - 1; i >= 0; i--) {

150 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

151 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

155 
	`lua_pushvÆue
(
L
, 
â
);

157 
	}
}

160 
	$addfõld
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
lua_I¡egî
 
i
) {

161 
	`lua_gëi
(
L
, 1, 
i
);

162 i‡(!
	`lua_is°rög
(
L
, -1))

163 
	`luaL_îr‹
(
L
, "invalid value (%s)át index %d inÅable for 'concat'",

164 
	`luaL_ty≥«me
(
L
, -1), 
i
);

165 
	`luaL_addvÆue
(
b
);

166 
	}
}

169 
	$tc⁄ˇt
 (
lua_Sèã
 *
L
) {

170 
luaL_Buf„r
 
b
;

171 
lua_I¡egî
 
œ°
 = 
	`aux_gën
(
L
, 1, 
TAB_R
);

172 
size_t
 
l£p
;

173 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 2, "", &
l£p
);

174 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 3, 1);

175 
œ°
 = 
	`luaL_›töãgî
(
L
, 4,Üast);

176 
	`luaL_bufföô
(
L
, &
b
);

177 ; 
i
 < 
œ°
; i++) {

178 
	`addfõld
(
L
, &
b
, 
i
);

179 
	`luaL_addl°rög
(&
b
, 
£p
, 
l£p
);

181 i‡(
i
 =
œ°
)

182 
	`addfõld
(
L
, &
b
, 
i
);

183 
	`luaL_pushªsu…
(&
b
);

185 
	}
}

194 
	$∑ck
 (
lua_Sèã
 *
L
) {

195 
i
;

196 
n
 = 
	`lua_gët›
(
L
);

197 
	`lua_¸óãèbÀ
(
L
, 
n
, 1);

198 
	`lua_ö£π
(
L
, 1);

199 
i
 = 
n
; i >= 1; i--)

200 
	`lua_£ti
(
L
, 1, 
i
);

201 
	`lua_pushöãgî
(
L
, 
n
);

202 
	`lua_£tfõld
(
L
, 1, "n");

204 
	}
}

207 
	$u≈ack
 (
lua_Sèã
 *
L
) {

208 
lua_Unsig√d
 
n
;

209 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 2, 1);

210 
lua_I¡egî
 
e
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 3, 
	`luaL_Àn
(L, 1));

211 i‡(
i
 > 
e
)  0;

212 
n
 = (
lua_Unsig√d
)
e
 - 
i
;

213 i‡(
n
 >()
INT_MAX
 || !
	`lua_check°ack
(
L
, ()(++n)))

214  
	`luaL_îr‹
(
L
, "too manyÑesultsÅo unpack");

215 ; 
i
 < 
e
; i++) {

216 
	`lua_gëi
(
L
, 1, 
i
);

218 
	`lua_gëi
(
L
, 1, 
e
);

219  ()
n
;

220 
	}
}

236 
	tIdxT
;

245 #i‡!
deföed
(
l_øndomizePivŸ
)

247 
	~<time.h
>

250 
	#sof
(
e
Ë(”Ë/ ())

	)

258 
	$l_øndomizePivŸ
 () {

259 
˛ock_t
 
c
 = 
	`˛ock
();

260 
time_t
 
t
 = 
	`time
(
NULL
);

261 
buff
[
	`sof
(
c
Ë+ sof(
t
)];

262 
i
, 
∫d
 = 0;

263 
	`mem˝y
(
buff
, &
c
, 
	`sof
(c) * ());

264 
	`mem˝y
(
buff
 + 
	`sof
(
c
), &
t
, sof(t) * ());

265 
i
 = 0; i < 
	`sof
(
buff
); i++)

266 
∫d
 +
buff
[
i
];

267  
∫d
;

268 
	}
}

274 
	#RANLIMIT
 100u

	)

277 
	$£t2
 (
lua_Sèã
 *
L
, 
IdxT
 
i
, IdxT 
j
) {

278 
	`lua_£ti
(
L
, 1, 
i
);

279 
	`lua_£ti
(
L
, 1, 
j
);

280 
	}
}

287 
	$s‹t_comp
 (
lua_Sèã
 *
L
, 
a
, 
b
) {

288 i‡(
	`lua_i¢û
(
L
, 2))

289  
	`lua_com∑ª
(
L
, 
a
, 
b
, 
LUA_OPLT
);

291 
ªs
;

292 
	`lua_pushvÆue
(
L
, 2);

293 
	`lua_pushvÆue
(
L
, 
a
-1);

294 
	`lua_pushvÆue
(
L
, 
b
-2);

295 
	`lua_ˇŒ
(
L
, 2, 1);

296 
ªs
 = 
	`lua_toboﬁón
(
L
, -1);

297 
	`lua_p›
(
L
, 1);

298  
ªs
;

300 
	}
}

310 
IdxT
 
	$∑πôi⁄
 (
lua_Sèã
 *
L
, 
IdxT
 
lo
, IdxT 
up
) {

311 
IdxT
 
i
 = 
lo
;

312 
IdxT
 
j
 = 
up
 - 1;

316 
	`lua_gëi
(
L
, 1, ++
i
), 
	`s‹t_comp
(L, -1, -2)) {

317 i‡(
i
 =
up
 - 1)

318 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

319 
	`lua_p›
(
L
, 1);

323 
	`lua_gëi
(
L
, 1, --
j
), 
	`s‹t_comp
(L, -3, -1)) {

324 i‡(
j
 < 
i
)

325 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

326 
	`lua_p›
(
L
, 1);

329 i‡(
j
 < 
i
) {

331 
	`lua_p›
(
L
, 1);

333 
	`£t2
(
L
, 
up
 - 1, 
i
);

334  
i
;

337 
	`£t2
(
L
, 
i
, 
j
);

339 
	}
}

346 
IdxT
 
	$choo£PivŸ
 (
IdxT
 
lo
, IdxT 
up
, 
∫d
) {

347 
IdxT
 
r4
 = (
up
 - 
lo
) / 4;

348 
IdxT
 
p
 = 
∫d
 % (
r4
 * 2Ë+ (
lo
 +Ñ4);

349 
	`lua_as£π
(
lo
 + 
r4
 <
p
 &&Ö <
up
 -Ñ4);

350  
p
;

351 
	}
}

357 
	$auxs‹t
 (
lua_Sèã
 *
L
, 
IdxT
 
lo
, IdxT 
up
,

358 
∫d
) {

359 
lo
 < 
up
) {

360 
IdxT
 
p
;

361 
IdxT
 
n
;

363 
	`lua_gëi
(
L
, 1, 
lo
);

364 
	`lua_gëi
(
L
, 1, 
up
);

365 i‡(
	`s‹t_comp
(
L
, -1, -2))

366 
	`£t2
(
L
, 
lo
, 
up
);

368 
	`lua_p›
(
L
, 2);

369 i‡(
up
 - 
lo
 == 1)

371 i‡(
up
 - 
lo
 < 
RANLIMIT
 || 
∫d
 == 0)

372 
p
 = (
lo
 + 
up
)/2;

374 
p
 = 
	`choo£PivŸ
(
lo
, 
up
, 
∫d
);

375 
	`lua_gëi
(
L
, 1, 
p
);

376 
	`lua_gëi
(
L
, 1, 
lo
);

377 i‡(
	`s‹t_comp
(
L
, -2, -1))

378 
	`£t2
(
L
, 
p
, 
lo
);

380 
	`lua_p›
(
L
, 1);

381 
	`lua_gëi
(
L
, 1, 
up
);

382 i‡(
	`s‹t_comp
(
L
, -1, -2))

383 
	`£t2
(
L
, 
p
, 
up
);

385 
	`lua_p›
(
L
, 2);

387 i‡(
up
 - 
lo
 == 2)

389 
	`lua_gëi
(
L
, 1, 
p
);

390 
	`lua_pushvÆue
(
L
, -1);

391 
	`lua_gëi
(
L
, 1, 
up
 - 1);

392 
	`£t2
(
L
, 
p
, 
up
 - 1);

393 
p
 = 
	`∑πôi⁄
(
L
, 
lo
, 
up
);

395 i‡(
p
 - 
lo
 < 
up
 -Ö) {

396 
	`auxs‹t
(
L
, 
lo
, 
p
 - 1, 
∫d
);

397 
n
 = 
p
 - 
lo
;

398 
lo
 = 
p
 + 1;

401 
	`auxs‹t
(
L
, 
p
 + 1, 
up
, 
∫d
);

402 
n
 = 
up
 - 
p
;

403 
up
 = 
p
 - 1;

405 i‡((
up
 - 
lo
Ë/ 128 > 
n
)

406 
∫d
 = 
	`l_øndomizePivŸ
();

408 
	}
}

411 
	$s‹t
 (
lua_Sèã
 *
L
) {

412 
lua_I¡egî
 
n
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

413 i‡(
n
 > 1) {

414 
	`luaL_¨gcheck
(
L
, 
n
 < 
INT_MAX
, 1, "arrayÅoo big");

415 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

416 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

417 
	`lua_£â›
(
L
, 2);

418 
	`auxs‹t
(
L
, 1, (
IdxT
)
n
, 0);

421 
	}
}

426 c⁄° 
luaL_Reg
 
	gèb_funcs
[] = {

427 {"c⁄ˇt", 
tc⁄ˇt
},

428 #i‡
deföed
(
LUA_COMPAT_MAXN
)

429 {"maxn", 
maxn
},

431 {"ö£π", 
tö£π
},

432 {"∑ck", 
∑ck
},

433 {"u≈ack", 
u≈ack
},

434 {"ªmove", 
åemove
},

435 {"move", 
tmove
},

436 {"s‹t", 
s‹t
},

437 {
NULL
, NULL}

441 
LUAMOD_API
 
	$lua›í_èbÀ
 (
lua_Sèã
 *
L
) {

442 
	`luaL_√wlib
(
L
, 
èb_funcs
);

443 #i‡
	`deföed
(
LUA_COMPAT_UNPACK
)

445 
	`lua_gëfõld
(
L
, -1, "unpack");

446 
	`lua_£tglobÆ
(
L
, "unpack");

449 
	}
}

	@ltm.c

7 
	#…m_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lobje˘.h
"

20 
	~"l°©e.h
"

21 
	~"l°rög.h
"

22 
	~"…abÀ.h
"

23 
	~"…m.h
"

24 
	~"lvm.h
"

27 c⁄° 
	gud©©y≥«me
[] = "userdata";

29 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
] = {

31 "nû", "boﬁón", 
ud©©y≥«me
, "number",

32 "°rög", "èbÀ", "fun˘i⁄", 
ud©©y≥«me
, "thread",

37 
	$luaT_öô
 (
lua_Sèã
 *
L
) {

38 c⁄° *c⁄° 
luaT_evíäame
[] = {

47 
i
;

48 
i
=0; i<
TM_N
; i++) {

49 
	`G
(
L
)->
tm«me
[
i
] = 
	`luaS_√w
(L, 
luaT_evíäame
[i]);

50 
	`luaC_fix
(
L
, 
	`obj2gco
(
	`G
(L)->
tm«me
[
i
]));

52 
	}
}

59 c⁄° 
TVÆue
 *
	$luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
) {

60 c⁄° 
TVÆue
 *
tm
 = 
	`luaH_gësh‹t°r
(
evíts
, 
íame
);

61 
	`lua_as£π
(
evít
 <
TM_EQ
);

62 i‡(
	`âi¢û
(
tm
)) {

63 
evíts
->
Êags
 |
	`ˇ°_byã
(1u<<
evít
);

64  
NULL
;

66  
tm
;

67 
	}
}

70 c⁄° 
TVÆue
 *
	$luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, 
TMS
 
evít
) {

71 
TabÀ
 *
mt
;

72 
	`ânov
(
o
)) {

73 
LUA_TTABLE
:

74 
mt
 = 
	`hvÆue
(
o
)->
më©abÀ
;

76 
LUA_TUSERDATA
:

77 
mt
 = 
	`uvÆue
(
o
)->
më©abÀ
;

80 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
o
)];

82  (
mt
 ? 
	`luaH_gësh‹t°r
(mt, 
	`G
(
L
)->
tm«me
[
evít
]Ë: 
luaO_nûobje˘
);

83 
	}
}

90 c⁄° *
	$luaT_objty≥«me
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

91 
TabÀ
 *
mt
;

92 i‡((
	`âi°abÀ
(
o
Ë&& (
mt
 = 
	`hvÆue
(o)->
më©abÀ
Ë!
NULL
) ||

93 (
	`âisfuŒu£rd©a
(
o
Ë&& (
mt
 = 
	`uvÆue
(o)->
më©abÀ
Ë!
NULL
)) {

94 c⁄° 
TVÆue
 *
«me
 = 
	`luaH_gësh‹t°r
(
mt
, 
	`luaS_√w
(
L
, "__name"));

95 i‡(
	`âis°rög
(
«me
))

96  
	`gë°r
(
	`tsvÆue
(
«me
));

98  
	`ây≥«me
(
	`ânov
(
o
));

99 
	}
}

102 
	$luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

103 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
) {

104 
±rdiff_t
 
ªsu…
 = 
	`ßve°ack
(
L
, 
p3
);

105 
StkId
 
func
 = 
L
->
t›
;

106 
	`£tobj2s
(
L
, 
func
, 
f
);

107 
	`£tobj2s
(
L
, 
func
 + 1, 
p1
);

108 
	`£tobj2s
(
L
, 
func
 + 2, 
p2
);

109 
L
->
t›
 += 3;

110 i‡(!
ha§es
)

111 
	`£tobj2s
(
L
, L->
t›
++, 
p3
);

113 i‡(
	`isLua
(
L
->
ci
))

114 
	`luaD_ˇŒ
(
L
, 
func
, 
ha§es
);

116 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ha§es
);

117 i‡(
ha§es
) {

118 
p3
 = 
	`ª°‹e°ack
(
L
, 
ªsu…
);

119 
	`£tobjs2s
(
L
, 
p3
, --L->
t›
);

121 
	}
}

124 
	$luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

125 
StkId
 
ªs
, 
TMS
 
evít
) {

126 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p1
, 
evít
);

127 i‡(
	`âi¢û
(
tm
))

128 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p2
, 
evít
);

129 i‡(
	`âi¢û
(
tm
))  0;

130 
	`luaT_ˇŒTM
(
L
, 
tm
, 
p1
, 
p2
, 
ªs
, 1);

132 
	}
}

135 
	$luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

136 
StkId
 
ªs
, 
TMS
 
evít
) {

137 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
evít
)) {

138 
evít
) {

139 
TM_CONCAT
:

140 
	`luaG_c⁄ˇãº‹
(
L
, 
p1
, 
p2
);

142 
TM_BAND
: 
TM_BOR
: 
TM_BXOR
:

143 
TM_SHL
: 
TM_SHR
: 
TM_BNOT
: {

144 
lua_Numbî
 
dummy
;

145 i‡(
	`t⁄umbî
(
p1
, &
dummy
Ë&&Å⁄umbî(
p2
, &dummy))

146 
	`luaG_toöãº‹
(
L
, 
p1
, 
p2
);

148 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "perform bitwise operation on");

152 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "performárithmetic on");

155 
	}
}

158 
	$luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

159 
TMS
 
evít
) {

160 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, L->
t›
, 
evít
))

163  !
	`l_isÁl£
(
L
->
t›
);

164 
	}
}

	@ltm.h

7 #i‚de‡
…m_h


8 
	#…m_h


	)

11 
	~"lobje˘.h
"

19 
	mTM_INDEX
,

20 
	mTM_NEWINDEX
,

21 
	mTM_GC
,

22 
	mTM_MODE
,

23 
	mTM_LEN
,

24 
	mTM_EQ
,

25 
	mTM_ADD
,

26 
	mTM_SUB
,

27 
	mTM_MUL
,

28 
	mTM_MOD
,

29 
	mTM_POW
,

30 
	mTM_DIV
,

31 
	mTM_IDIV
,

32 
	mTM_BAND
,

33 
	mTM_BOR
,

34 
	mTM_BXOR
,

35 
	mTM_SHL
,

36 
	mTM_SHR
,

37 
	mTM_UNM
,

38 
	mTM_BNOT
,

39 
	mTM_LT
,

40 
	mTM_LE
,

41 
	mTM_CONCAT
,

42 
	mTM_CALL
,

43 
	mTM_N


44 } 
	tTMS
;

48 
	#gÁ°tm
(
g
,
ë
,
e
Ë(”tË=
NULL
 ? NULL : \

49 ((
ë
)->
Êags
 & (1u<<(
e
))Ë? 
NULL
 : 
	`luaT_gëtm
”t,É, (
g
)->
tm«me
[e]))

	)

51 
	#Á°tm
(
l
,
ë
,
e
Ë
	`gÁ°tm
(
	`G
÷),Ét,É)

	)

53 
	#ây≥«me
(
x
Ë
luaT_ty≥«mes_
[(xË+ 1]

	)

55 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
];

58 
LUAI_FUNC
 c⁄° *
luaT_objty≥«me
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
);

60 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
);

61 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° TVÆuê*
o
,

62 
TMS
 
evít
);

63 
LUAI_FUNC
 
luaT_öô
 (
lua_Sèã
 *
L
);

65 
LUAI_FUNC
 
luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

66 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
);

67 
LUAI_FUNC
 
luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

68 
StkId
 
ªs
, 
TMS
 
evít
);

69 
LUAI_FUNC
 
luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

70 
StkId
 
ªs
, 
TMS
 
evít
);

71 
LUAI_FUNC
 
luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

72 c⁄° 
TVÆue
 *
p2
, 
TMS
 
evít
);

	@lua.c

7 
	#lua_c


	)

9 
	~"Õªfix.h
"

12 
	~<sig«l.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

24 #i‡!
deföed
(
LUA_PROMPT
)

25 
	#LUA_PROMPT
 "> "

	)

26 
	#LUA_PROMPT2
 ">> "

	)

29 #i‡!
deföed
(
LUA_PROGNAME
)

30 
	#LUA_PROGNAME
 "lua"

	)

33 #i‡!
deföed
(
LUA_MAXINPUT
)

34 
	#LUA_MAXINPUT
 512

	)

37 #i‡!
deföed
(
LUA_INIT_VAR
)

38 
	#LUA_INIT_VAR
 "LUA_INIT"

	)

41 
	#LUA_INITVARVERSION
 
LUA_INIT_VAR
 
LUA_VERSUFFIX


	)

48 #i‡!
deföed
(
lua_°dö_is_ây
)

50 #i‡
deföed
(
LUA_USE_POSIX
)

52 
	~<uni°d.h
>

53 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

55 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

57 
	~<io.h
>

58 
	~<wödows.h
>

60 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

65 
	#lua_°dö_is_ây
(Ë1

	)

78 #i‡!
deföed
(
lua_ªadlöe
)

80 #i‡
deföed
(
LUA_USE_READLINE
)

82 
	~<ªadlöe/ªadlöe.h
>

83 
	~<ªadlöe/hi°‹y.h
>

84 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

85 
	#lua_ßvñöe
(
L
,
löe
Ë(()L, 
	`add_hi°‹y
÷öe))

	)

86 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

90 
	#lua_ªadlöe
(
L
,
b
,
p
) \

91 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

92 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

93 
	#lua_ßvñöe
(
L
,
löe
Ë{ ()L; (Óöe; }

	)

94 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

103 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

105 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

111 
	$l°›
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

112 ()
¨
;

113 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

114 
	`luaL_îr‹
(
L
, "interrupted!");

115 
	}
}

124 
	$œ˘i⁄
 (
i
) {

125 
	`sig«l
(
i
, 
SIG_DFL
);

126 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

127 
	}
}

130 
	$¥öt_ußge
 (c⁄° *
bad›ti⁄
) {

131 
	`lua_wrôe°rögîr‹
("%s: ", 
¥og«me
);

132 i‡(
bad›ti⁄
[1] == 'e' || badoption[1] == 'l')

133 
	`lua_wrôe°rögîr‹
("'%s'Çìd†¨gumít\n", 
bad›ti⁄
);

135 
	`lua_wrôe°rögîr‹
("uƒecognized o±i⁄ '%s'\n", 
bad›ti⁄
);

136 
	`lua_wrôe°rögîr‹
(

147 
¥og«me
);

148 
	}
}

155 
	$l_mesßge
 (c⁄° *
≤ame
, c⁄° *
msg
) {

156 i‡(
≤ame
Ë
	`lua_wrôe°rögîr‹
("%s: ",Öname);

157 
	`lua_wrôe°rögîr‹
("%s\n", 
msg
);

158 
	}
}

166 
	$ªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

167 i‡(
°©us
 !
LUA_OK
) {

168 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

169 
	`l_mesßge
(
¥og«me
, 
msg
);

170 
	`lua_p›
(
L
, 1);

172  
°©us
;

173 
	}
}

179 
	$msgh™dÀr
 (
lua_Sèã
 *
L
) {

180 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

181 i‡(
msg
 =
NULL
) {

182 i‡(
	`luaL_ˇŒmëa
(
L
, 1, "__tostring") &&

183 
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
)

186 
msg
 = 
	`lua_pushf°rög
(
L
, "(error object isá %s value)",

187 
	`luaL_ty≥«me
(
L
, 1));

189 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

191 
	}
}

198 
	$doˇŒ
 (
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

199 
°©us
;

200 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

201 
	`lua_pushcfun˘i⁄
(
L
, 
msgh™dÀr
);

202 
	`lua_ö£π
(
L
, 
ba£
);

203 
globÆL
 = 
L
;

204 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

205 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

206 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

207 
	`lua_ªmove
(
L
, 
ba£
);

208  
°©us
;

209 
	}
}

212 
	$¥öt_vîsi⁄
 () {

213 
	`lua_wrôe°rög
(
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

214 
	`lua_wrôñöe
();

215 
	}
}

226 
	$¸óã¨gèbÀ
 (
lua_Sèã
 *
L
, **
¨gv
, 
¨gc
, 
s¸ùt
) {

227 
i
, 
«rg
;

228 i‡(
s¸ùt
 =
¨gc
) script = 0;

229 
«rg
 = 
¨gc
 - (
s¸ùt
 + 1);

230 
	`lua_¸óãèbÀ
(
L
, 
«rg
, 
s¸ùt
 + 1);

231 
i
 = 0; i < 
¨gc
; i++) {

232 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

233 
	`lua_øw£ti
(
L
, -2, 
i
 - 
s¸ùt
);

235 
	`lua_£tglobÆ
(
L
, "arg");

236 
	}
}

239 
	$dochunk
 (
lua_Sèã
 *
L
, 
°©us
) {

240 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

241  
	`ªp‹t
(
L
, 
°©us
);

242 
	}
}

245 
	$dofûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

246  
	`dochunk
(
L
, 
	`luaL_lﬂdfûe
(L, 
«me
));

247 
	}
}

250 
	$do°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

251  
	`dochunk
(
L
, 
	`luaL_lﬂdbuf„r
(L, 
s
, 
	`°æí
(s), 
«me
));

252 
	}
}

259 
	$dﬁibøry
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

260 
°©us
;

261 
	`lua_gëglobÆ
(
L
, "require");

262 
	`lua_push°rög
(
L
, 
«me
);

263 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

264 i‡(
°©us
 =
LUA_OK
)

265 
	`lua_£tglobÆ
(
L
, 
«me
);

266  
	`ªp‹t
(
L
, 
°©us
);

267 
	}
}

273 c⁄° *
	$gë_¥om±
 (
lua_Sèã
 *
L
, 
fú°löe
) {

274 c⁄° *
p
;

275 
	`lua_gëglobÆ
(
L
, 
fú°löe
 ? "_PROMPT" : "_PROMPT2");

276 
p
 = 
	`lua_to°rög
(
L
, -1);

277 i‡(
p
 =
NULL
Ë∞(
fú°löe
 ? 
LUA_PROMPT
 : 
LUA_PROMPT2
);

278  
p
;

279 
	}
}

282 
	#EOFMARK
 "<eof>"

	)

283 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

291 
	$öcom∂ëe
 (
lua_Sèã
 *
L
, 
°©us
) {

292 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

293 
size_t
 
lmsg
;

294 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

295 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

296 
	`lua_p›
(
L
, 1);

301 
	}
}

307 
	$pushlöe
 (
lua_Sèã
 *
L
, 
fú°löe
) {

308 
buf„r
[
LUA_MAXINPUT
];

309 *
b
 = 
buf„r
;

310 
size_t
 
l
;

311 c⁄° *
¥mt
 = 
	`gë_¥om±
(
L
, 
fú°löe
);

312 
ªad°©us
 = 
	`lua_ªadlöe
(
L
, 
b
, 
¥mt
);

313 i‡(
ªad°©us
 == 0)

315 
	`lua_p›
(
L
, 1);

316 
l
 = 
	`°æí
(
b
);

317 i‡(
l
 > 0 && 
b
[l-1] == '\n')

318 
b
[--
l
] = '\0';

319 i‡(
fú°löe
 && 
b
[0] == '=')

320 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

322 
	`lua_pushl°rög
(
L
, 
b
, 
l
);

323 
	`lua_‰ìlöe
(
L
, 
b
);

325 
	}
}

332 
	$addªtu∫
 (
lua_Sèã
 *
L
) {

333 c⁄° *
löe
 = 
	`lua_to°rög
(
L
, -1);

334 c⁄° *
ªéöe
 = 
	`lua_pushf°rög
(
L
, "ªtu∫ %s;", 
löe
);

335 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
ªéöe
, 
	`°æí
(retline), "=stdin");

336 i‡(
°©us
 =
LUA_OK
) {

337 
	`lua_ªmove
(
L
, -2);

338 i‡(
löe
[0] != '\0')

339 
	`lua_ßvñöe
(
L
, 
löe
);

342 
	`lua_p›
(
L
, 2);

343  
°©us
;

344 
	}
}

350 
	$mu…ûöe
 (
lua_Sèã
 *
L
) {

352 
size_t
 
Àn
;

353 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
Àn
);

354 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
Àn
, "=stdin");

355 i‡(!
	`öcom∂ëe
(
L
, 
°©us
Ë|| !
	`pushlöe
(L, 0)) {

356 
	`lua_ßvñöe
(
L
, 
löe
);

357  
°©us
;

359 
	`lua_pushlôîÆ
(
L
, "\n");

360 
	`lua_ö£π
(
L
, -2);

361 
	`lua_c⁄ˇt
(
L
, 3);

363 
	}
}

372 
	$lﬂdlöe
 (
lua_Sèã
 *
L
) {

373 
°©us
;

374 
	`lua_£â›
(
L
, 0);

375 i‡(!
	`pushlöe
(
L
, 1))

377 i‡((
°©us
 = 
	`addªtu∫
(
L
)Ë!
LUA_OK
)

378 
°©us
 = 
	`mu…ûöe
(
L
);

379 
	`lua_ªmove
(
L
, 1);

380 
	`lua_as£π
(
	`lua_gët›
(
L
) == 1);

381  
°©us
;

382 
	}
}

388 
	$l_¥öt
 (
lua_Sèã
 *
L
) {

389 
n
 = 
	`lua_gët›
(
L
);

390 i‡(
n
 > 0) {

391 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

392 
	`lua_gëglobÆ
(
L
, "print");

393 
	`lua_ö£π
(
L
, 1);

394 i‡(
	`lua_pˇŒ
(
L
, 
n
, 0, 0Ë!
LUA_OK
)

395 
	`l_mesßge
(
¥og«me
, 
	`lua_pushf°rög
(
L
, "error calling 'print' (%s)",

396 
	`lua_to°rög
(
L
, -1)));

398 
	}
}

405 
	$doREPL
 (
lua_Sèã
 *
L
) {

406 
°©us
;

407 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

408 
¥og«me
 = 
NULL
;

409 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

410 i‡(
°©us
 =
LUA_OK
)

411 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

412 i‡(
°©us
 =
LUA_OK
Ë
	`l_¥öt
(
L
);

413 
	`ªp‹t
(
L
, 
°©us
);

415 
	`lua_£â›
(
L
, 0);

416 
	`lua_wrôñöe
();

417 
¥og«me
 = 
ﬁd¥og«me
;

418 
	}
}

424 
	$push¨gs
 (
lua_Sèã
 *
L
) {

425 
i
, 
n
;

426 i‡(
	`lua_gëglobÆ
(
L
, "¨g"Ë!
LUA_TTABLE
)

427 
	`luaL_îr‹
(
L
, "'arg' isÇotáÅable");

428 
n
 = ()
	`luaL_Àn
(
L
, -1);

429 
	`luaL_check°ack
(
L
, 
n
 + 3, "too manyárgumentsÅo script");

430 
i
 = 1; i <
n
; i++)

431 
	`lua_øwgëi
(
L
, -
i
, i);

432 
	`lua_ªmove
(
L
, -
i
);

433  
n
;

434 
	}
}

437 
	$h™dÀ_s¸ùt
 (
lua_Sèã
 *
L
, **
¨gv
) {

438 
°©us
;

439 c⁄° *
‚ame
 = 
¨gv
[0];

440 i‡(
	`°rcmp
(
‚ame
, "-"Ë=0 && såcmp(
¨gv
[-1], "--") != 0)

441 
‚ame
 = 
NULL
;

442 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
‚ame
);

443 i‡(
°©us
 =
LUA_OK
) {

444 
n
 = 
	`push¨gs
(
L
);

445 
°©us
 = 
	`doˇŒ
(
L
, 
n
, 
LUA_MULTRET
);

447  
	`ªp‹t
(
L
, 
°©us
);

448 
	}
}

453 
	#has_îr‹
 1

	)

454 
	#has_i
 2

	)

455 
	#has_v
 4

	)

456 
	#has_e
 8

	)

457 
	#has_E
 16

	)

465 
	$cﬁÀ˘¨gs
 (**
¨gv
, *
fú°
) {

466 
¨gs
 = 0;

467 
i
;

468 
i
 = 1; 
¨gv
[i] !
NULL
; i++) {

469 *
fú°
 = 
i
;

470 i‡(
¨gv
[
i
][0] != '-')

471  
¨gs
;

472 
¨gv
[
i
][1]) {

474 i‡(
¨gv
[
i
][2] != '\0')

475  
has_îr‹
;

476 *
fú°
 = 
i
 + 1;

477  
¨gs
;

479  
¨gs
;

481 i‡(
¨gv
[
i
][2] != '\0')

482  
has_îr‹
;

483 
¨gs
 |
has_E
;

486 
¨gs
 |
has_i
;

488 i‡(
¨gv
[
i
][2] != '\0')

489  
has_îr‹
;

490 
¨gs
 |
has_v
;

493 
¨gs
 |
has_e
;

495 i‡(
¨gv
[
i
][2] == '\0') {

496 
i
++;

497 i‡(
¨gv
[
i
] =
NULL
 ||árgv[i][0] == '-')

498  
has_îr‹
;

502  
has_îr‹
;

505 *
fú°
 = 
i
;

506  
¨gs
;

507 
	}
}

514 
	$ru«rgs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

515 
i
;

516 
i
 = 1; i < 
n
; i++) {

517 
›ti⁄
 = 
¨gv
[
i
][1];

518 
	`lua_as£π
(
¨gv
[
i
][0] == '-');

519 i‡(
›ti⁄
 == 'e' || option == 'l') {

520 
°©us
;

521 c⁄° *
exåa
 = 
¨gv
[
i
] + 2;

522 i‡(*
exåa
 ='\0'Ëexå®
¨gv
[++
i
];

523 
	`lua_as£π
(
exåa
 !
NULL
);

524 
°©us
 = (
›ti⁄
 == 'e')

525 ? 
	`do°rög
(
L
, 
exåa
, "=(commandÜine)")

526 : 
	`dﬁibøry
(
L
, 
exåa
);

527 i‡(
°©us
 !
LUA_OK
)  0;

531 
	}
}

535 
	$h™dÀ_luaöô
 (
lua_Sèã
 *
L
) {

536 c⁄° *
«me
 = "=" 
LUA_INITVARVERSION
;

537 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

538 i‡(
öô
 =
NULL
) {

539 
«me
 = "=" 
LUA_INIT_VAR
;

540 
öô
 = 
	`gëív
(
«me
 + 1);

542 i‡(
öô
 =
NULL
Ë 
LUA_OK
;

543 i‡(
öô
[0] == '@')

544  
	`dofûe
(
L
, 
öô
+1);

546  
	`do°rög
(
L
, 
öô
, 
«me
);

547 
	}
}

554 
	$pmaö
 (
lua_Sèã
 *
L
) {

555 
¨gc
 = ()
	`lua_toöãgî
(
L
, 1);

556 **
¨gv
 = (**)
	`lua_tou£rd©a
(
L
, 2);

557 
s¸ùt
;

558 
¨gs
 = 
	`cﬁÀ˘¨gs
(
¨gv
, &
s¸ùt
);

559 
	`luaL_checkvîsi⁄
(
L
);

560 i‡(
¨gv
[0] &&árgv[0][0]Ë
¥og«me
 =árgv[0];

561 i‡(
¨gs
 =
has_îr‹
) {

562 
	`¥öt_ußge
(
¨gv
[
s¸ùt
]);

565 i‡(
¨gs
 & 
has_v
)

566 
	`¥öt_vîsi⁄
();

567 i‡(
¨gs
 & 
has_E
) {

568 
	`lua_pushboﬁón
(
L
, 1);

569 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

571 
	`luaL_›ílibs
(
L
);

572 
	`¸óã¨gèbÀ
(
L
, 
¨gv
, 
¨gc
, 
s¸ùt
);

573 i‡(!(
¨gs
 & 
has_E
)) {

574 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

577 i‡(!
	`ru«rgs
(
L
, 
¨gv
, 
s¸ùt
))

579 i‡(
s¸ùt
 < 
¨gc
 &&

580 
	`h™dÀ_s¸ùt
(
L
, 
¨gv
 + 
s¸ùt
Ë!
LUA_OK
)

582 i‡(
¨gs
 & 
has_i
)

583 
	`doREPL
(
L
);

584 i‡(
s¸ùt
 =
¨gc
 && !(
¨gs
 & (
has_e
 | 
has_v
))) {

585 i‡(
	`lua_°dö_is_ây
()) {

586 
	`¥öt_vîsi⁄
();

587 
	`doREPL
(
L
);

589 
	`dofûe
(
L
, 
NULL
);

591 
	`lua_pushboﬁón
(
L
, 1);

593 
	}
}

596 
	$maö
 (
¨gc
, **
¨gv
) {

597 
°©us
, 
ªsu…
;

598 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

599 i‡(
L
 =
NULL
) {

600 
	`l_mesßge
(
¨gv
[0], "cannot create state:ÇotÉnough memory");

601  
EXIT_FAILURE
;

603 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

604 
	`lua_pushöãgî
(
L
, 
¨gc
);

605 
	`lua_pushlightu£rd©a
(
L
, 
¨gv
);

606 
°©us
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

607 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

608 
	`ªp‹t
(
L
, 
°©us
);

609 
	`lua_˛o£
(
L
);

610  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

611 
	}
}

	@lua.h

9 #i‚de‡
lua_h


10 
	#lua_h


	)

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

16 
	~"luac⁄f.h
"

19 
	#LUA_VERSION_MAJOR
 "5"

	)

20 
	#LUA_VERSION_MINOR
 "3"

	)

21 
	#LUA_VERSION_NUM
 503

	)

22 
	#LUA_VERSION_RELEASE
 "5"

	)

24 
	#LUA_VERSION
 "Lu®" 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

25 
	#LUA_RELEASE
 
LUA_VERSION
 "." 
LUA_VERSION_RELEASE


	)

26 
	#LUA_COPYRIGHT
 
LUA_RELEASE
 " C›yrighà(CË1994-2018 Lua.‹g, PUC-Rio"

	)

27 
	#LUA_AUTHORS
 "R. Iîußlimschy, L. H. dêFigueúedo, W. Cñes"

	)

31 
	#LUA_SIGNATURE
 "\x1bLua"

	)

34 
	#LUA_MULTRET
 (-1)

	)

42 
	#LUA_REGISTRYINDEX
 (-
LUAI_MAXSTACK
 - 1000)

	)

43 
	#lua_upvÆueödex
(
i
Ë(
LUA_REGISTRYINDEX
 - (i))

	)

47 
	#LUA_OK
 0

	)

48 
	#LUA_YIELD
 1

	)

49 
	#LUA_ERRRUN
 2

	)

50 
	#LUA_ERRSYNTAX
 3

	)

51 
	#LUA_ERRMEM
 4

	)

52 
	#LUA_ERRGCMM
 5

	)

53 
	#LUA_ERRERR
 6

	)

56 
lua_Sèã
 
	tlua_Sèã
;

62 
	#LUA_TNONE
 (-1)

	)

64 
	#LUA_TNIL
 0

	)

65 
	#LUA_TBOOLEAN
 1

	)

66 
	#LUA_TLIGHTUSERDATA
 2

	)

67 
	#LUA_TNUMBER
 3

	)

68 
	#LUA_TSTRING
 4

	)

69 
	#LUA_TTABLE
 5

	)

70 
	#LUA_TFUNCTION
 6

	)

71 
	#LUA_TUSERDATA
 7

	)

72 
	#LUA_TTHREAD
 8

	)

74 
	#LUA_NUMTAGS
 9

	)

79 
	#LUA_MINSTACK
 20

	)

83 
	#LUA_RIDX_MAINTHREAD
 1

	)

84 
	#LUA_RIDX_GLOBALS
 2

	)

85 
	#LUA_RIDX_LAST
 
LUA_RIDX_GLOBALS


	)

89 
LUA_NUMBER
 
	tlua_Numbî
;

93 
LUA_INTEGER
 
	tlua_I¡egî
;

96 
LUA_UNSIGNED
 
	tlua_Unsig√d
;

99 
LUA_KCONTEXT
 
	tlua_KC⁄ãxt
;

105 (*
	tlua_CFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
);

110 (*
	tlua_KFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
, 
	t°©us
, 
	tlua_KC⁄ãxt
 
	t˘x
);

116 c⁄° * (*
	tlua_Ródî
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
, 
	tsize_t
 *
	tsz
);

118 (*
	tlua_Wrôî
Ë(
	tlua_Sèã
 *
	tL
, c⁄° *
	tp
, 
	tsize_t
 
	tsz
, *
	tud
);

124 * (*
	tlua_AŒoc
Ë(*
	tud
, *
	t±r
, 
	tsize_t
 
	tosize
, size_à
	tnsize
);

131 #i‡
	`deföed
(
LUA_USER_H
)

132 #ö˛udê
LUA_USER_H


139 c⁄° 
lua_idít
[];

145 
LUA_API
 
lua_Sèã
 *(
lua_√w°©e
Ë(
lua_AŒoc
 
f
, *
ud
);

146 
LUA_API
 (
lua_˛o£
Ë(
lua_Sèã
 *
L
);

147 
LUA_API
 
lua_Sèã
 *(
lua_√wthªad
Ë÷ua_Sèã *
L
);

149 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_©∑nic
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
);

152 
LUA_API
 c⁄° 
lua_Numbî
 *(
lua_vîsi⁄
Ë(
lua_Sèã
 *
L
);

158 
LUA_API
 (
lua_absödex
Ë(
lua_Sèã
 *
L
, 
idx
);

159 
LUA_API
 (
lua_gët›
Ë(
lua_Sèã
 *
L
);

160 
LUA_API
 (
lua_£â›
Ë(
lua_Sèã
 *
L
, 
idx
);

161 
LUA_API
 (
lua_pushvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

162 
LUA_API
 (
lua_rŸ©e
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

163 
LUA_API
 (
lua_c›y
Ë(
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
);

164 
LUA_API
 (
lua_check°ack
Ë(
lua_Sèã
 *
L
, 
n
);

166 
LUA_API
 (
lua_xmove
Ë(
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
);

173 
LUA_API
 (
lua_i¢umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

174 
LUA_API
 (
lua_is°rög
Ë(
lua_Sèã
 *
L
, 
idx
);

175 
LUA_API
 (
lua_iscfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

176 
LUA_API
 (
lua_isöãgî
Ë(
lua_Sèã
 *
L
, 
idx
);

177 
LUA_API
 (
lua_isu£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

178 
LUA_API
 (
lua_ty≥
Ë(
lua_Sèã
 *
L
, 
idx
);

179 
LUA_API
 c⁄° *(
lua_ty≥«me
Ë(
lua_Sèã
 *
L
, 
ç
);

181 
LUA_API
 
	$lua_Numbî
 (
lua_t⁄umbîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

182 
LUA_API
 
	$lua_I¡egî
 (
lua_toöãgîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

183 
LUA_API
 (
lua_toboﬁón
Ë(
lua_Sèã
 *
L
, 
idx
);

184 
LUA_API
 c⁄° *(
lua_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

185 
LUA_API
 
	$size_t
 (
lua_øwÀn
Ë(
lua_Sèã
 *
L
, 
idx
);

186 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_tocfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

187 
LUA_API
 *(
lua_tou£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

188 
LUA_API
 
lua_Sèã
 *(
lua_tŸhªad
Ë÷ua_Sèã *
L
, 
idx
);

189 
LUA_API
 c⁄° *(
lua_t›oöãr
Ë(
lua_Sèã
 *
L
, 
idx
);

196 
	#LUA_OPADD
 0

	)

197 
	#LUA_OPSUB
 1

	)

198 
	#LUA_OPMUL
 2

	)

199 
	#LUA_OPMOD
 3

	)

200 
	#LUA_OPPOW
 4

	)

201 
	#LUA_OPDIV
 5

	)

202 
	#LUA_OPIDIV
 6

	)

203 
	#LUA_OPBAND
 7

	)

204 
	#LUA_OPBOR
 8

	)

205 
	#LUA_OPBXOR
 9

	)

206 
	#LUA_OPSHL
 10

	)

207 
	#LUA_OPSHR
 11

	)

208 
	#LUA_OPUNM
 12

	)

209 
	#LUA_OPBNOT
 13

	)

211 
LUA_API
 (
lua_¨ôh
Ë(
lua_Sèã
 *
L
, 
›
);

213 
	#LUA_OPEQ
 0

	)

214 
	#LUA_OPLT
 1

	)

215 
	#LUA_OPLE
 2

	)

217 
LUA_API
 (
lua_øwequÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

218 
LUA_API
 (
lua_com∑ª
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
, 
›
);

224 
LUA_API
 (
lua_pushnû
Ë(
lua_Sèã
 *
L
);

225 
LUA_API
 (
lua_pushnumbî
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
n
);

226 
LUA_API
 (
lua_pushöãgî
Ë(
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
);

227 
LUA_API
 c⁄° *(
lua_pushl°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
);

228 
LUA_API
 c⁄° *(
lua_push°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

229 
LUA_API
 c⁄° *(
lua_pushvf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
,

230 
va_li°
 
¨gp
);

231 
LUA_API
 c⁄° *(
lua_pushf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

232 
LUA_API
 (
lua_pushc˛osuª
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
);

233 
LUA_API
 (
lua_pushboﬁón
Ë(
lua_Sèã
 *
L
, 
b
);

234 
LUA_API
 (
lua_pushlightu£rd©a
Ë(
lua_Sèã
 *
L
, *
p
);

235 
LUA_API
 (
lua_pushthªad
Ë(
lua_Sèã
 *
L
);

241 
LUA_API
 (
lua_gëglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

242 
LUA_API
 (
lua_gëèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

243 
LUA_API
 (
lua_gëfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

244 
LUA_API
 (
lua_gëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

245 
LUA_API
 (
lua_øwgë
Ë(
lua_Sèã
 *
L
, 
idx
);

246 
LUA_API
 (
lua_øwgëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

247 
LUA_API
 (
lua_øwgëp
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

249 
LUA_API
 (
lua_¸óãèbÀ
Ë(
lua_Sèã
 *
L
, 
«º
, 
ƒec
);

250 
LUA_API
 *(
lua_√wu£rd©a
Ë(
lua_Sèã
 *
L
, 
size_t
 
sz
);

251 
LUA_API
 (
lua_gëmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

252 
LUA_API
 (
lua_gëu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

258 
LUA_API
 (
lua_£tglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

259 
LUA_API
 (
lua_£âabÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

260 
LUA_API
 (
lua_£tfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

261 
LUA_API
 (
lua_£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

262 
LUA_API
 (
lua_øw£t
Ë(
lua_Sèã
 *
L
, 
idx
);

263 
LUA_API
 (
lua_øw£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

264 
LUA_API
 (
lua_øw£ç
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

265 
LUA_API
 (
lua_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

266 
LUA_API
 (
lua_£tu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

272 
LUA_API
 (
lua_ˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

273 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

274 
	#lua_ˇŒ
(
L
,
n
,
r
Ë
	`lua_ˇŒk
(L, (n), (r), 0, 
NULL
)

	)

276 
LUA_API
 (
lua_pˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

277 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

278 
	#lua_pˇŒ
(
L
,
n
,
r
,
f
Ë
	`lua_pˇŒk
(L, (n), (r), (f), 0, 
NULL
)

	)

280 
LUA_API
 (
lua_lﬂd
Ë(
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
dt
,

281 c⁄° *
chunk«me
, c⁄° *
mode
);

283 
LUA_API
 (
lua_dump
Ë(
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
);

289 
LUA_API
 (
lua_yõldk
Ë(
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

290 
lua_KFun˘i⁄
 
k
);

291 
LUA_API
 (
lua_ªsume
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rg
);

292 
LUA_API
 (
lua_°©us
Ë(
lua_Sèã
 *
L
);

293 
LUA_API
 (
lua_isyõldabÀ
Ë(
lua_Sèã
 *
L
);

295 
	#lua_yõld
(
L
,
n
Ë
	`lua_yõldk
(L, (n), 0, 
NULL
)

	)

302 
	#LUA_GCSTOP
 0

	)

303 
	#LUA_GCRESTART
 1

	)

304 
	#LUA_GCCOLLECT
 2

	)

305 
	#LUA_GCCOUNT
 3

	)

306 
	#LUA_GCCOUNTB
 4

	)

307 
	#LUA_GCSTEP
 5

	)

308 
	#LUA_GCSETPAUSE
 6

	)

309 
	#LUA_GCSETSTEPMUL
 7

	)

310 
	#LUA_GCISRUNNING
 9

	)

312 
LUA_API
 (
lua_gc
Ë(
lua_Sèã
 *
L
, 
wh©
, 
d©a
);

319 
LUA_API
 (
lua_îr‹
Ë(
lua_Sèã
 *
L
);

321 
LUA_API
 (
lua_√xt
Ë(
lua_Sèã
 *
L
, 
idx
);

323 
LUA_API
 (
lua_c⁄ˇt
Ë(
lua_Sèã
 *
L
, 
n
);

324 
LUA_API
 (
lua_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

326 
LUA_API
 
	$size_t
 (
lua_°rögt⁄umbî
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

328 
LUA_API
 
	$lua_AŒoc
 (
lua_gëÆlocf
Ë(
lua_Sèã
 *
L
, **
ud
);

329 
LUA_API
 (
lua_£èŒocf
Ë(
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
);

339 
	#lua_gëexåa•a˚
(
L
Ë((*)((*)(LË- 
LUA_EXTRASPACE
))

	)

341 
	#lua_t⁄umbî
(
L
,
i
Ë
	`lua_t⁄umbîx
(L,(i),
NULL
)

	)

342 
	#lua_toöãgî
(
L
,
i
Ë
	`lua_toöãgîx
(L,(i),
NULL
)

	)

344 
	#lua_p›
(
L
,
n
Ë
	`lua_£â›
(L, -“)-1)

	)

346 
	#lua_√wèbÀ
(
L
Ë
	`lua_¸óãèbÀ
(L, 0, 0)

	)

348 
	#lua_ªgi°î
(
L
,
n
,
f
Ë(
	`lua_pushcfun˘i⁄
(L, (f)), 
	`lua_£tglobÆ
(L, (n)))

	)

350 
	#lua_pushcfun˘i⁄
(
L
,
f
Ë
	`lua_pushc˛osuª
(L, (f), 0)

	)

352 
	#lua_isfun˘i⁄
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TFUNCTION
)

	)

353 
	#lua_i°abÀ
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTABLE
)

	)

354 
	#lua_i¶ightu£rd©a
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TLIGHTUSERDATA
)

	)

355 
	#lua_i¢û
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNIL
)

	)

356 
	#lua_isboﬁón
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TBOOLEAN
)

	)

357 
	#lua_i°hªad
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTHREAD
)

	)

358 
	#lua_i¢⁄e
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNONE
)

	)

359 
	#lua_i¢⁄e‹nû
(
L
, 
n
Ë(
	`lua_ty≥
(L, (n)Ë<0)

	)

361 
	#lua_pushlôîÆ
(
L
, 
s
Ë
	`lua_push°rög
(L, "" s)

	)

363 
	#lua_pushglobÆèbÀ
(
L
) \

364 (()
	`lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_RIDX_GLOBALS
))

	)

366 
	#lua_to°rög
(
L
,
i
Ë
	`lua_tﬁ°rög
(L, (i), 
NULL
)

	)

369 
	#lua_ö£π
(
L
,
idx
Ë
	`lua_rŸ©e
(L, (idx), 1)

	)

371 
	#lua_ªmove
(
L
,
idx
Ë(
	`lua_rŸ©e
(L, (idx), -1), 
	`lua_p›
(L, 1))

	)

373 
	#lua_ª∂a˚
(
L
,
idx
Ë(
	`lua_c›y
(L, -1, (idx)), 
	`lua_p›
(L, 1))

	)

383 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

385 
	#lua_pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

386 
	#lua_tounsig√dx
(
L
,
i
,
is
Ë((
lua_Unsig√d
)
	`lua_toöãgîx
(L,i,is))

	)

387 
	#lua_tounsig√d
(
L
,
i
Ë
	`lua_tounsig√dx
(L,(i),
NULL
)

	)

402 
	#LUA_HOOKCALL
 0

	)

403 
	#LUA_HOOKRET
 1

	)

404 
	#LUA_HOOKLINE
 2

	)

405 
	#LUA_HOOKCOUNT
 3

	)

406 
	#LUA_HOOKTAILCALL
 4

	)

412 
	#LUA_MASKCALL
 (1 << 
LUA_HOOKCALL
)

	)

413 
	#LUA_MASKRET
 (1 << 
LUA_HOOKRET
)

	)

414 
	#LUA_MASKLINE
 (1 << 
LUA_HOOKLINE
)

	)

415 
	#LUA_MASKCOUNT
 (1 << 
LUA_HOOKCOUNT
)

	)

417 
lua_Debug
 
	tlua_Debug
;

421 (*
	tlua_Hook
Ë(
	tlua_Sèã
 *
	tL
, 
	tlua_Debug
 *
	t¨
);

424 
LUA_API
 (
lua_gë°ack
Ë(
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
);

425 
LUA_API
 (
lua_gëöfo
Ë(
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
);

426 
LUA_API
 c⁄° *(
lua_gëloˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

427 
LUA_API
 c⁄° *(
lua_£éoˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

428 
LUA_API
 c⁄° *(
lua_gëupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

429 
LUA_API
 c⁄° *(
lua_£tupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

431 
LUA_API
 *(
lua_upvÆueid
Ë(
lua_Sèã
 *
L
, 
fidx
, 
n
);

432 
LUA_API
 (
lua_upvÆuejoö
Ë(
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

433 
fidx2
, 
n2
);

435 
LUA_API
 (
lua_£thook
Ë(
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
);

436 
LUA_API
 
	$lua_Hook
 (
lua_gëhook
Ë(
lua_Sèã
 *
L
);

437 
LUA_API
 (
lua_gëhookmask
Ë(
lua_Sèã
 *
L
);

438 
LUA_API
 (
lua_gëhookcou¡
Ë(
lua_Sèã
 *
L
);

441 
	slua_Debug
 {

442 
evít
;

443 c⁄° *
«me
;

444 c⁄° *
«mewh©
;

445 c⁄° *
wh©
;

446 c⁄° *
sour˚
;

447 
cuºíéöe
;

448 
löedeföed
;

449 
œ°löedeföed
;

450 
nups
;

451 
≈¨ams
;

452 
isv¨¨g
;

453 
i°aûˇŒ
;

454 
sh‹t_§c
[
LUA_IDSIZE
];

456 
CÆlInfo
 *
i_ci
;

	@lua.hpp

6 
	~"lua.h
"

7 
	~"luÆib.h
"

8 
	~"œuxlib.h
"

	@luac.c

7 
	#luac_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

19 
	~"œuxlib.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

23 
	~"lundump.h
"

25 
PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
);

26 
	#luaU_¥öt
 
PrötFun˘i⁄


	)

28 
	#PROGNAME
 "luac"

	)

29 
	#OUTPUT
 
PROGNAME
 ".out"

	)

31 
	gli°ög
=0;

32 
	gdumpög
=1;

33 
	g°rùpög
=0;

34 
	gOuçut
[]={ 
OUTPUT
 };

35 c⁄° * 
	gouçut
=
Ouçut
;

36 c⁄° * 
	g¥og«me
=
PROGNAME
;

38 
	$Áèl
(c⁄° * 
mesßge
)

40 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

41 
	`exô
(
EXIT_FAILURE
);

42 
	}
}

44 
	$ˇ¬Ÿ
(c⁄° * 
wh©
)

46 
	`Ârötf
(
°dîr
,"%s: c™nŸ %†%s: %s\n",
¥og«me
,
wh©
,
ouçut
,
	`°ªº‹
(
î∫o
));

47 
	`exô
(
EXIT_FAILURE
);

48 
	}
}

50 
	$ußge
(c⁄° * 
mesßge
)

52 i‡(*
mesßge
=='-')

53 
	`Ârötf
(
°dîr
,"%s: uƒecognized o±i⁄ '%s'\n",
¥og«me
,
mesßge
);

55 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

56 
	`Ârötf
(
°dîr
,

66 ,
¥og«me
,
Ouçut
);

67 
	`exô
(
EXIT_FAILURE
);

68 
	}
}

70 
	#IS
(
s
Ë(
	`°rcmp
(
¨gv
[
i
],s)==0)

	)

72 
	$dﬂrgs
(
¨gc
, * 
¨gv
[])

74 
i
;

75 
vîsi⁄
=0;

76 i‡(
¨gv
[0]!=
NULL
 && *¨gv[0]!=0Ë
¥og«me
=argv[0];

77 
i
=1; i<
¨gc
; i++)

79 i‡(*
¨gv
[
i
]!='-')

81 i‡(
	`IS
("--"))

83 ++
i
;

84 i‡(
vîsi⁄
) ++version;

87 i‡(
	`IS
("-"))

89 i‡(
	`IS
("-l"))

90 ++
li°ög
;

91 i‡(
	`IS
("-o"))

93 
ouçut
=
¨gv
[++
i
];

94 i‡(
ouçut
==
NULL
 || *output==0 || (*output=='-' && output[1]!=0))

95 
	`ußge
("'-o'Çeedsárgument");

96 i‡(
	`IS
("-")Ë
ouçut
=
NULL
;

98 i‡(
	`IS
("-p"))

99 
dumpög
=0;

100 i‡(
	`IS
("-s"))

101 
°rùpög
=1;

102 i‡(
	`IS
("-v"))

103 ++
vîsi⁄
;

105 
	`ußge
(
¨gv
[
i
]);

107 i‡(
i
==
¨gc
 && (
li°ög
 || !
dumpög
))

109 
dumpög
=0;

110 
¨gv
[--
i
]=
Ouçut
;

112 i‡(
vîsi⁄
)

114 
	`¥ötf
("%s\n",
LUA_COPYRIGHT
);

115 i‡(
vîsi⁄
==
¨gc
-1Ë
	`exô
(
EXIT_SUCCESS
);

117  
i
;

118 
	}
}

120 
	#FUNCTION
 "(fun˘i⁄(Înd)();"

	)

122 c⁄° * 
	$ªadî
(
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
)

124 
	`UNUSED
(
L
);

125 i‡((*(*)
ud
)--)

127 *
size
=(
FUNCTION
)-1;

128  
FUNCTION
;

132 *
size
=0;

133  
NULL
;

135 
	}
}

137 
	#t›rŸo
(
L
,
i
Ë
	`gë¥Ÿo
(L->
t›
+(i))

	)

139 c⁄° 
PrŸo
* 
	$comböe
(
lua_Sèã
* 
L
, 
n
)

141 i‡(
n
==1)

142  
	`t›rŸo
(
L
,-1);

145 
PrŸo
* 
f
;

146 
i
=
n
;

147 i‡(
	`lua_lﬂd
(
L
,
ªadî
,&
i
,"=(" 
PROGNAME
 ")",
NULL
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

148 
f
=
	`t›rŸo
(
L
,-1);

149 
i
=0; i<
n
; i++)

151 
f
->
p
[
i
]=
	`t›rŸo
(
L
,i-
n
-1);

152 i‡(
f
->
p
[
i
]->
sizeupvÆues
>0Ëf->p[i]->
upvÆues
[0].
ö°ack
=0;

154 
f
->
sizñöeöfo
=0;

155  
f
;

157 
	}
}

159 
	$wrôî
(
lua_Sèã
* 
L
, c⁄° * 
p
, 
size_t
 
size
, * 
u
)

161 
	`UNUSED
(
L
);

162  (
	`fwrôe
(
p
,
size
,1,(
FILE
*)
u
)!=1) && (size!=0);

163 
	}
}

165 
	$pmaö
(
lua_Sèã
* 
L
)

167 
¨gc
=()
	`lua_toöãgî
(
L
,1);

168 ** 
¨gv
=(**)
	`lua_tou£rd©a
(
L
,2);

169 c⁄° 
PrŸo
* 
f
;

170 
i
;

171 i‡(!
	`lua_check°ack
(
L
,
¨gc
)Ë
	`Áèl
("too many input files");

172 
i
=0; i<
¨gc
; i++)

174 c⁄° * 
fûíame
=
	`IS
("-"Ë? 
NULL
 : 
¨gv
[
i
];

175 i‡(
	`luaL_lﬂdfûe
(
L
,
fûíame
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

177 
f
=
	`comböe
(
L
,
¨gc
);

178 i‡(
li°ög
Ë
	`luaU_¥öt
(
f
,listing>1);

179 i‡(
dumpög
)

181 
FILE
* 
D
(
ouçut
==
NULL
Ë? 
°dout
 : 
	`f›í
(output,"wb");

182 i‡(
D
==
NULL
Ë
	`ˇ¬Ÿ
("open");

183 
	`lua_lock
(
L
);

184 
	`luaU_dump
(
L
,
f
,
wrôî
,
D
,
°rùpög
);

185 
	`lua_u∆ock
(
L
);

186 i‡(
	`„º‹
(
D
)Ë
	`ˇ¬Ÿ
("write");

187 i‡(
	`f˛o£
(
D
)Ë
	`ˇ¬Ÿ
("close");

190 
	}
}

192 
	$maö
(
¨gc
, * 
¨gv
[])

194 
lua_Sèã
* 
L
;

195 
i
=
	`dﬂrgs
(
¨gc
,
¨gv
);

196 
¨gc
-=
i
; 
¨gv
+=i;

197 i‡(
¨gc
<=0Ë
	`ußge
("no input files given");

198 
L
=
	`luaL_√w°©e
();

199 i‡(
L
==
NULL
Ë
	`Áèl
("cannot create state:ÇotÉnough memory");

200 
	`lua_pushcfun˘i⁄
(
L
,&
pmaö
);

201 
	`lua_pushöãgî
(
L
,
¨gc
);

202 
	`lua_pushlightu£rd©a
(
L
,
¨gv
);

203 i‡(
	`lua_pˇŒ
(
L
,2,0,0)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

204 
	`lua_˛o£
(
L
);

205  
EXIT_SUCCESS
;

206 
	}
}

214 
	~<˘y≥.h
>

215 
	~<°dio.h
>

217 
	#luac_c


	)

218 
	#LUA_CORE


	)

220 
	~"ldebug.h
"

221 
	~"lobje˘.h
"

222 
	~"l›codes.h
"

224 
	#VOID
(
p
Ë((c⁄° *)’))

	)

226 
	$PrötSåög
(c⁄° 
TSåög
* 
ts
)

228 c⁄° * 
s
=
	`gë°r
(
ts
);

229 
size_t
 
i
,
n
=
	`ts¶í
(
ts
);

230 
	`¥ötf
("%c",'"');

231 
i
=0; i<
n
; i++)

233 
c
=()()
s
[
i
];

234 
c
)

236 '"': 
	`¥ötf
("\\\""); ;

237 '\\': 
	`¥ötf
("\\\\"); ;

238 '\a': 
	`¥ötf
("\\a"); ;

239 '\b': 
	`¥ötf
("\\b"); ;

240 '\f': 
	`¥ötf
("\\f"); ;

241 '\n': 
	`¥ötf
("\\n"); ;

242 '\r': 
	`¥ötf
("\\r"); ;

243 '\t': 
	`¥ötf
("\\t"); ;

244 '\v': 
	`¥ötf
("\\v"); ;

245 : i‡(
	`i•röt
(
c
))

246 
	`¥ötf
("%c",
c
);

248 
	`¥ötf
("\\%03d",
c
);

251 
	`¥ötf
("%c",'"');

252 
	}
}

254 
	$PrötC⁄°™t
(c⁄° 
PrŸo
* 
f
, 
i
)

256 c⁄° 
TVÆue
* 
o
=&
f
->
k
[
i
];

257 
	`ây≥
(
o
))

259 
LUA_TNIL
:

260 
	`¥ötf
("nil");

262 
LUA_TBOOLEAN
:

263 
	`¥ötf
(
	`bvÆue
(
o
) ? "true" : "false");

265 
LUA_TNUMFLT
:

267 
buff
[100];

268 
	`•rötf
(
buff
,
LUA_NUMBER_FMT
,
	`ÊtvÆue
(
o
));

269 
	`¥ötf
("%s",
buff
);

270 i‡(
buff
[
	`°r•n
(buff,"-0123456789")]=='\0'Ë
	`¥ötf
(".0");

273 
LUA_TNUMINT
:

274 
	`¥ötf
(
LUA_INTEGER_FMT
,
	`ivÆue
(
o
));

276 
LUA_TSHRSTR
: 
LUA_TLNGSTR
:

277 
	`PrötSåög
(
	`tsvÆue
(
o
));

280 
	`¥ötf
("?Åy≥=%d",
	`ây≥
(
o
));

283 
	}
}

285 
	#UPVALNAME
(
x
Ë((
f
->
upvÆues
[x].
«me
Ë? 
	`gë°r
(f->upvÆues[x].«meË: "-")

	)

286 
	#MYK
(
x
Ë(-1-(x))

	)

288 
	$PrötCode
(c⁄° 
PrŸo
* 
f
)

290 c⁄° 
In°ru˘i⁄
* 
code
=
f
->code;

291 
pc
,
n
=
f
->
sizecode
;

292 
pc
=0;Öc<
n
;Öc++)

294 
In°ru˘i⁄
 
i
=
code
[
pc
];

295 
OpCode
 
o
=
	`GET_OPCODE
(
i
);

296 
a
=
	`GETARG_A
(
i
);

297 
b
=
	`GETARG_B
(
i
);

298 
c
=
	`GETARG_C
(
i
);

299 
ax
=
	`GETARG_Ax
(
i
);

300 
bx
=
	`GETARG_Bx
(
i
);

301 
sbx
=
	`GETARG_sBx
(
i
);

302 
löe
=
	`gëfun˛öe
(
f
,
pc
);

303 
	`¥ötf
("\t%d\t",
pc
+1);

304 i‡(
löe
>0Ë
	`¥ötf
("[%d]\t",line); printf("[-]\t");

305 
	`¥ötf
("%-9s\t",
luaP_›«mes
[
o
]);

306 
	`gëOpMode
(
o
))

308 
iABC
:

309 
	`¥ötf
("%d",
a
);

310 i‡(
	`gëBMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
b
Ë? (
	`MYK
(
	`INDEXK
(b))) : b);

311 i‡(
	`gëCMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
c
Ë? (
	`MYK
(
	`INDEXK
(c))) : c);

313 
iABx
:

314 
	`¥ötf
("%d",
a
);

315 i‡(
	`gëBMode
(
o
)==
OpArgK
Ë
	`¥ötf
(" %d",
	`MYK
(
bx
));

316 i‡(
	`gëBMode
(
o
)==
OpArgU
Ë
	`¥ötf
(" %d",
bx
);

318 
iAsBx
:

319 
	`¥ötf
("%d %d",
a
,
sbx
);

321 
iAx
:

322 
	`¥ötf
("%d",
	`MYK
(
ax
));

325 
o
)

327 
OP_LOADK
:

328 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
bx
);

330 
OP_GETUPVAL
:

331 
OP_SETUPVAL
:

332 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

334 
OP_GETTABUP
:

335 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

336 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

338 
OP_SETTABUP
:

339 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
a
));

340 i‡(
	`ISK
(
b
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); }

341 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

343 
OP_GETTABLE
:

344 
OP_SELF
:

345 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

347 
OP_SETTABLE
:

348 
OP_ADD
:

349 
OP_SUB
:

350 
OP_MUL
:

351 
OP_MOD
:

352 
OP_POW
:

353 
OP_DIV
:

354 
OP_IDIV
:

355 
OP_BAND
:

356 
OP_BOR
:

357 
OP_BXOR
:

358 
OP_SHL
:

359 
OP_SHR
:

360 
OP_EQ
:

361 
OP_LT
:

362 
OP_LE
:

363 i‡(
	`ISK
(
b
Ë|| ISK(
c
))

365 
	`¥ötf
("\t; ");

366 i‡(
	`ISK
(
b
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); 
	`¥ötf
("-");

367 
	`¥ötf
(" ");

368 i‡(
	`ISK
(
c
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); 
	`¥ötf
("-");

371 
OP_JMP
:

372 
OP_FORLOOP
:

373 
OP_FORPREP
:

374 
OP_TFORLOOP
:

375 
	`¥ötf
("\t;Åÿ%d",
sbx
+
pc
+2);

377 
OP_CLOSURE
:

378 
	`¥ötf
("\t; %p",
	`VOID
(
f
->
p
[
bx
]));

380 
OP_SETLIST
:

381 i‡(
c
==0Ë
	`¥ötf
("\t; %d",()
code
[++
pc
]); printf("\t; %d",c);

383 
OP_EXTRAARG
:

384 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
ax
);

389 
	`¥ötf
("\n");

391 
	}
}

393 
	#SS
(
x
Ë((x==1)?"":"s")

	)

394 
	#S
(
x
Ë()(x),
	`SS
(x)

	)

396 
	$PrötHódî
(c⁄° 
PrŸo
* 
f
)

398 c⁄° * 
s
=
f
->
sour˚
 ? 
	`gë°r
(f->source) : "=?";

399 i‡(*
s
=='@' || *s=='=')

400 
s
++;

401 i‡(*
s
==
LUA_SIGNATURE
[0])

402 
s
="(bstring)";

404 
s
="(string)";

405 
	`¥ötf
("\n%s <%s:%d,%d> (%d instruction%sát %p)\n",

406 (
f
->
löedeföed
==0)?"maö":"fun˘i⁄",
s
,

407 
f
->
löedeföed
,f->
œ°löedeföed
,

408 
	`S
(
f
->
sizecode
),
	`VOID
(f));

409 
	`¥ötf
("%d%sÖaram%s, %d slot%s, %d upvalue%s, ",

410 ()(
f
->
num∑øms
),f->
is_v¨¨g
?"+":"",
	`SS
(f->numparams),

411 
	`S
(
f
->
max°acksize
),S(f->
sizeupvÆues
));

412 
	`¥ötf
("%dÜocal%s, %d constant%s, %d function%s\n",

413 
	`S
(
f
->
sizñocv¨s
),S(f->
sizek
),S(f->
sizï
));

414 
	}
}

416 
	$PrötDebug
(c⁄° 
PrŸo
* 
f
)

418 
i
,
n
;

419 
n
=
f
->
sizek
;

420 
	`¥ötf
("c⁄°™t†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

421 
i
=0; i<
n
; i++)

423 
	`¥ötf
("\t%d\t",
i
+1);

424 
	`PrötC⁄°™t
(
f
,
i
);

425 
	`¥ötf
("\n");

427 
n
=
f
->
sizñocv¨s
;

428 
	`¥ötf
("loˇl†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

429 
i
=0; i<
n
; i++)

431 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

432 
i
,
	`gë°r
(
f
->
locv¨s
[i].
v¨«me
),f->locv¨s[i].
°¨çc
+1,f->locv¨s[i].
ídpc
+1);

434 
n
=
f
->
sizeupvÆues
;

435 
	`¥ötf
("upvÆue†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

436 
i
=0; i<
n
; i++)

438 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

439 
i
,
	`UPVALNAME
(i),
f
->
upvÆues
[i].
ö°ack
,f->upvÆues[i].
idx
);

441 
	}
}

443 
	$PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
)

445 
i
,
n
=
f
->
sizï
;

446 
	`PrötHódî
(
f
);

447 
	`PrötCode
(
f
);

448 i‡(
fuŒ
Ë
	`PrötDebug
(
f
);

449 
i
=0; i<
n
; i++Ë
	`PrötFun˘i⁄
(
f
->
p
[i],
fuŒ
);

450 
	}
}

	@luaconf.h

8 #i‚de‡
luac⁄f_h


9 
	#luac⁄f_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

50 #i‡!
deföed
(
LUA_USE_C89
Ë&& deföed(
_WIN32
Ë&& !deföed(
_WIN32_WCE
)

51 
	#LUA_USE_WINDOWS


	)

55 #i‡
deföed
(
LUA_USE_WINDOWS
)

56 
	#LUA_DL_DLL


	)

57 
	#LUA_USE_C89


	)

61 #i‡
deföed
(
LUA_USE_LINUX
)

62 
	#LUA_USE_POSIX


	)

63 
	#LUA_USE_DLOPEN


	)

64 
	#LUA_USE_READLINE


	)

68 #i‡
deföed
(
LUA_USE_MACOSX
)

69 
	#LUA_USE_POSIX


	)

70 
	#LUA_USE_DLOPEN


	)

71 
	#LUA_USE_READLINE


	)

80 #i‡
deföed
(
LUA_USE_C89
Ë&& !deföed(
LUA_USE_WINDOWS
)

81 
	#LUA_C89_NUMBERS


	)

90 #i‡((
INT_MAX
 >> 15) >> 15) >= 1

91 
	#LUAI_BITSINT
 32

	)

94 
	#LUAI_BITSINT
 16

	)

109 
	#LUA_INT_INT
 1

	)

110 
	#LUA_INT_LONG
 2

	)

111 
	#LUA_INT_LONGLONG
 3

	)

114 
	#LUA_FLOAT_FLOAT
 1

	)

115 
	#LUA_FLOAT_DOUBLE
 2

	)

116 
	#LUA_FLOAT_LONGDOUBLE
 3

	)

118 #i‡
deföed
(
LUA_32BITS
)

122 #i‡
LUAI_BITSINT
 >= 32

123 
	#LUA_INT_TYPE
 
LUA_INT_INT


	)

125 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

127 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_FLOAT


	)

129 #ñi‡
deföed
(
LUA_C89_NUMBERS
)

133 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

134 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

142 #i‡!
deföed
(
LUA_INT_TYPE
)

143 
	#LUA_INT_TYPE
 
LUA_INT_LONGLONG


	)

146 #i‡!
deföed
(
LUA_FLOAT_TYPE
)

147 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

168 
	#LUA_PATH_SEP
 ";"

	)

169 
	#LUA_PATH_MARK
 "?"

	)

170 
	#LUA_EXEC_DIR
 "!"

	)

182 
	#LUA_VDIR
 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

183 #i‡
deföed
(
_WIN32
)

188 
	#LUA_LDIR
 "!\\lua\\"

	)

189 
	#LUA_CDIR
 "!\\"

	)

190 
	#LUA_SHRDIR
 "!\\..\\sh¨e\\lua\\" 
LUA_VDIR
 "\\"

	)

191 
	#LUA_PATH_DEFAULT
 \

192 
LUA_LDIR
"?.lua;" LUA_LDIR"?\\init.lua;" \

193 
LUA_CDIR
"?.lua;" LUA_CDIR"?\\init.lua;" \

194 
LUA_SHRDIR
"?.lua;" LUA_SHRDIR"?\\init.lua;" \

195 ".\\?.lua;" ".\\?\\öô.lua"

	)

196 
	#LUA_CPATH_DEFAULT
 \

197 
LUA_CDIR
"?.dll;" \

198 
LUA_CDIR
"..\\lib\\lua\\" 
LUA_VDIR
 "\\?.dll;" \

199 
LUA_CDIR
"lﬂdÆl.dŒ;" ".\\?.dŒ"

	)

203 
	#LUA_ROOT
 "/u§/loˇl/"

	)

204 
	#LUA_LDIR
 
LUA_ROOT
 "sh¨e/lua/" 
LUA_VDIR
 "/"

	)

205 
	#LUA_CDIR
 
LUA_ROOT
 "lib/lua/" 
LUA_VDIR
 "/"

	)

206 
	#LUA_PATH_DEFAULT
 \

207 
LUA_LDIR
"?.lua;" LUA_LDIR"?/init.lua;" \

208 
LUA_CDIR
"?.lua;" LUA_CDIR"?/init.lua;" \

209 "./?.lua;" "./?/öô.lua"

	)

210 
	#LUA_CPATH_DEFAULT
 \

211 
LUA_CDIR
"?.so;" LUA_CDIR"lﬂdÆl.so;" "./?.so"

	)

220 #i‡
deföed
(
_WIN32
)

221 
	#LUA_DIRSEP
 "\\"

	)

223 
	#LUA_DIRSEP
 "/"

	)

244 #i‡
deföed
(
LUA_BUILD_AS_DLL
)

246 #i‡
deföed
(
LUA_CORE
Ë|| deföed(
LUA_LIB
)

247 
	#LUA_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

249 
	#LUA_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

254 
	#LUA_API
 

	)

260 
	#LUALIB_API
 
LUA_API


	)

261 
	#LUAMOD_API
 
LUALIB_API


	)

278 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__*100 + 
__GNUC_MINOR__
) >= 302) && \

279 
	$deföed
(
__ELF__
)

280 
	#LUAI_FUNC
 
	`__©åibuã__
((
	`visibûôy
("hiddí"))Ë

	)

282 
	#LUAI_FUNC
 

	)

285 
	#LUAI_DDEC
 
LUAI_FUNC


	)

286 
	#LUAI_DDEF


	)

303 #i‡
	`deföed
(
LUA_COMPAT_5_2
)

309 
	#LUA_COMPAT_MATHLIB


	)

314 
	#LUA_COMPAT_BITLIB


	)

319 
	#LUA_COMPAT_IPAIRS


	)

326 
	#LUA_COMPAT_APIINTCASTS


	)

331 #i‡
	`deföed
(
LUA_COMPAT_5_1
)

334 
	#LUA_COMPAT_MATHLIB


	)

335 
	#LUA_COMPAT_APIINTCASTS


	)

341 
	#LUA_COMPAT_UNPACK


	)

347 
	#LUA_COMPAT_LOADERS


	)

353 
	#lua_˝ˇŒ
(
L
,
f
,
u
) \

354 (
	`lua_pushcfun˘i⁄
(
L
, (
f
)), \

355 
	`lua_pushlightu£rd©a
(
L
,(
u
)), \

356 
	`lua_pˇŒ
(
L
,1,0,0))

	)

363 
	#LUA_COMPAT_LOG10


	)

369 
	#LUA_COMPAT_LOADSTRING


	)

374 
	#LUA_COMPAT_MAXN


	)

381 
	#lua_°æí
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

383 
	#lua_objÀn
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

385 
	#lua_equÆ
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPEQ
)

	)

386 
	#lua_Às°h™
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPLT
)

	)

392 
	#LUA_COMPAT_MODULE


	)

434 
	#l_Êo‹
(
x
Ë(
	`l_m©h›
(
Êo‹
)(x))

	)

436 
	#lua_numbî2°r
(
s
,
sz
,
n
) \

437 
	`l_•rötf
((
s
), 
sz
, 
LUA_NUMBER_FMT
, (
LUAI_UACNUMBER
)(
n
))

	)

447 
	#lua_numbîtoöãgî
(
n
,
p
) \

448 ((
n
Ë>(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

449 (
n
Ë< -(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

450 (*(
p
Ë(
LUA_INTEGER
)(
n
), 1))

	)

455 #i‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_FLOAT


457 
	#LUA_NUMBER
 

	)

459 
	#l_m©hlim
(
n
Ë(
FLT_
##n)

	)

461 
	#LUAI_UACNUMBER
 

	)

463 
	#LUA_NUMBER_FRMLEN
 ""

	)

464 
	#LUA_NUMBER_FMT
 "%.7g"

	)

466 
	#l_m©h›
(
›
Ë›##
f


	)

468 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πof
((s), (p))

	)

471 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_LONGDOUBLE


473 
	#LUA_NUMBER
 

	)

475 
	#l_m©hlim
(
n
Ë(
LDBL_
##n)

	)

477 
	#LUAI_UACNUMBER
 

	)

479 
	#LUA_NUMBER_FRMLEN
 "L"

	)

480 
	#LUA_NUMBER_FMT
 "%.19Lg"

	)

482 
	#l_m©h›
(
›
Ë›##
l


	)

484 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πﬁd
((s), (p))

	)

486 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_DOUBLE


488 
	#LUA_NUMBER
 

	)

490 
	#l_m©hlim
(
n
Ë(
DBL_
##n)

	)

492 
	#LUAI_UACNUMBER
 

	)

494 
	#LUA_NUMBER_FRMLEN
 ""

	)

495 
	#LUA_NUMBER_FMT
 "%.14g"

	)

497 
	#l_m©h›
(
›
Ë
	)
op

499 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πod
((s), (p))

	)

526 
	#LUA_INTEGER_FMT
 "%" 
LUA_INTEGER_FRMLEN
 "d"

	)

528 
	#LUAI_UACINT
 
LUA_INTEGER


	)

530 
	#lua_öãgî2°r
(
s
,
sz
,
n
) \

531 
	`l_•rötf
((
s
), 
sz
, 
LUA_INTEGER_FMT
, (
LUAI_UACINT
)(
n
))

	)

537 
	#LUA_UNSIGNED
 
LUAI_UACINT


	)

542 #i‡
LUA_INT_TYPE
 =
LUA_INT_INT


544 
	#LUA_INTEGER
 

	)

545 
	#LUA_INTEGER_FRMLEN
 ""

	)

547 
	#LUA_MAXINTEGER
 
INT_MAX


	)

548 
	#LUA_MININTEGER
 
INT_MIN


	)

550 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONG


552 
	#LUA_INTEGER
 

	)

553 
	#LUA_INTEGER_FRMLEN
 "l"

	)

555 
	#LUA_MAXINTEGER
 
LONG_MAX


	)

556 
	#LUA_MININTEGER
 
LONG_MIN


	)

558 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONGLONG


561 #i‡
	`deföed
(
LLONG_MAX
)

564 
	#LUA_INTEGER
 

	)

565 
	#LUA_INTEGER_FRMLEN
 "Œ"

	)

567 
	#LUA_MAXINTEGER
 
LLONG_MAX


	)

568 
	#LUA_MININTEGER
 
LLONG_MIN


	)

570 #ñi‡
	`deföed
(
LUA_USE_WINDOWS
)

573 
	#LUA_INTEGER
 
__öt64


	)

574 
	#LUA_INTEGER_FRMLEN
 "I64"

	)

576 
	#LUA_MAXINTEGER
 
_I64_MAX


	)

577 
	#LUA_MININTEGER
 
_I64_MIN


	)

605 #i‡!
	`deföed
(
LUA_USE_C89
)

606 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë
	`¢¥ötf
(s,sz,f,i)

	)

608 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë(()(sz), 
	`•rötf
(s,f,i))

	)

618 #i‡!
	`deföed
(
LUA_USE_C89
)

619 
	#lua_°rx2numbî
(
s
,
p
Ë
	`lua_°r2numbî
(s,p)

	)

627 
	#lua_poöãr2°r
(
buff
,
sz
,
p
Ë
	`l_•rötf
(buff,sz,"%p",p)

	)

636 #i‡!
	`deföed
(
LUA_USE_C89
)

637 
	#lua_numbî2°rx
(
L
,
b
,
sz
,
f
,
n
) \

638 (()
L
, 
	`l_•rötf
(
b
,
sz
,
f
,(
LUAI_UACNUMBER
)(
n
)))

	)

648 #i‡
	`deföed
(
LUA_USE_C89
Ë|| (deföed(
HUGE_VAL
Ë&& !deföed(
HUGE_VALF
))

649 #unde‡
l_m©h›


650 #unde‡
lua_°r2numbî


651 
	#l_m©h›
(
›
Ë(
lua_Numbî
)›

	)

652 
	#lua_°r2numbî
(
s
,
p
Ë((
lua_Numbî
)
	`°πod
((s), (p)))

	)

662 
	#LUA_KCONTEXT
 
±rdiff_t


	)

664 #i‡!
	`deföed
(
LUA_USE_C89
Ë&& deföed(
__STDC_VERSION__
) && \

665 
__STDC_VERSION__
 >= 199901L

666 
	~<°döt.h
>

667 #i‡
	`deföed
(
INTPTR_MAX
)

668 #unde‡
LUA_KCONTEXT


669 
	#LUA_KCONTEXT
 
öçå_t


	)

679 #i‡!
	`deföed
(
lua_gëloˇÀde˝oöt
)

680 
	#lua_gëloˇÀde˝oöt
(Ë(
	`loˇÀc⁄v
()->
decimÆ_poöt
[0])

	)

706 #i‡
	`deföed
(
LUA_USE_APICHECK
)

707 
	~<as£π.h
>

708 
	#luai_≠icheck
(
l
,
e
Ë
	`as£π
”)

	)

728 #i‡
LUAI_BITSINT
 >= 32

729 
	#LUAI_MAXSTACK
 1000000

	)

731 
	#LUAI_MAXSTACK
 15000

	)

740 
	#LUA_EXTRASPACE
 ((*))

	)

748 
	#LUA_IDSIZE
 60

	)

758 #i‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_LONGDOUBLE


759 
	#LUAL_BUFFERSIZE
 8192

	)

761 
	#LUAL_BUFFERSIZE
 (()(0x80 * (*Ë* (
lua_I¡egî
)))

	)

772 
	#LUA_QL
(
x
Ë"'" x "'"

	)

773 
	#LUA_QS
 
	`LUA_QL
("%s")

	)

	@lualib.h

8 #i‚de‡
luÆib_h


9 
	#luÆib_h


	)

11 
	~"lua.h
"

15 
	#LUA_VERSUFFIX
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

18 
LUAMOD_API
 (
lua›í_ba£
Ë(
lua_Sèã
 *
L
);

20 
	#LUA_COLIBNAME
 "c‹outöe"

	)

21 
LUAMOD_API
 (
lua›í_c‹outöe
Ë(
lua_Sèã
 *
L
);

23 
	#LUA_TABLIBNAME
 "èbÀ"

	)

24 
LUAMOD_API
 (
lua›í_èbÀ
Ë(
lua_Sèã
 *
L
);

26 
	#LUA_IOLIBNAME
 "io"

	)

27 
LUAMOD_API
 (
lua›í_io
Ë(
lua_Sèã
 *
L
);

29 
	#LUA_OSLIBNAME
 "os"

	)

30 
LUAMOD_API
 (
lua›í_os
Ë(
lua_Sèã
 *
L
);

32 
	#LUA_STRLIBNAME
 "°rög"

	)

33 
LUAMOD_API
 (
lua›í_°rög
Ë(
lua_Sèã
 *
L
);

35 
	#LUA_UTF8LIBNAME
 "utf8"

	)

36 
LUAMOD_API
 (
lua›í_utf8
Ë(
lua_Sèã
 *
L
);

38 
	#LUA_BITLIBNAME
 "bô32"

	)

39 
LUAMOD_API
 (
lua›í_bô32
Ë(
lua_Sèã
 *
L
);

41 
	#LUA_MATHLIBNAME
 "m©h"

	)

42 
LUAMOD_API
 (
lua›í_m©h
Ë(
lua_Sèã
 *
L
);

44 
	#LUA_DBLIBNAME
 "debug"

	)

45 
LUAMOD_API
 (
lua›í_debug
Ë(
lua_Sèã
 *
L
);

47 
	#LUA_LOADLIBNAME
 "∑ckage"

	)

48 
LUAMOD_API
 (
lua›í_∑ckage
Ë(
lua_Sèã
 *
L
);

52 
LUALIB_API
 (
luaL_›ílibs
Ë(
lua_Sèã
 *
L
);

56 #i‡!
	`deföed
(
lua_as£π
)

57 
	#lua_as£π
(
x
Ë(()0)

	)

	@lundump.c

7 
	#lundump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°rög.h
"

23 
	~"lundump.h
"

24 
	~"lzio.h
"

27 #i‡!
deföed
(
luai_vîifycode
)

28 
	#luai_vîifycode
(
L
,
b
,
f
Ë

	)

33 
lua_Sèã
 *
	mL
;

34 
ZIO
 *
	mZ
;

35 c⁄° *
	m«me
;

36 } 
	tLﬂdSèã
;

39 
l_n‹ë
 
	$îr‹
(
LﬂdSèã
 *
S
, c⁄° *
why
) {

40 
	`luaO_pushf°rög
(
S
->
L
, "%s: %†¥ecompûed chunk", S->
«me
, 
why
);

41 
	`luaD_throw
(
S
->
L
, 
LUA_ERRSYNTAX
);

42 
	}
}

49 
	#LﬂdVe˘‹
(
S
,
b
,
n
Ë
	`LﬂdBlock
(S,b,“)*((b)[0]))

	)

51 
	$LﬂdBlock
 (
LﬂdSèã
 *
S
, *
b
, 
size_t
 
size
) {

52 i‡(
	`luaZ_ªad
(
S
->
Z
, 
b
, 
size
) != 0)

53 
	`îr‹
(
S
, "truncated");

54 
	}
}

57 
	#LﬂdV¨
(
S
,
x
Ë
	`LﬂdVe˘‹
(S,&x,1)

	)

60 
lu_byã
 
	$LﬂdByã
 (
LﬂdSèã
 *
S
) {

61 
lu_byã
 
x
;

62 
	`LﬂdV¨
(
S
, 
x
);

63  
x
;

64 
	}
}

67 
	$LﬂdI¡
 (
LﬂdSèã
 *
S
) {

68 
x
;

69 
	`LﬂdV¨
(
S
, 
x
);

70  
x
;

71 
	}
}

74 
lua_Numbî
 
	$LﬂdNumbî
 (
LﬂdSèã
 *
S
) {

75 
lua_Numbî
 
x
;

76 
	`LﬂdV¨
(
S
, 
x
);

77  
x
;

78 
	}
}

81 
lua_I¡egî
 
	$LﬂdI¡egî
 (
LﬂdSèã
 *
S
) {

82 
lua_I¡egî
 
x
;

83 
	`LﬂdV¨
(
S
, 
x
);

84  
x
;

85 
	}
}

88 
TSåög
 *
	$LﬂdSåög
 (
LﬂdSèã
 *
S
) {

89 
size_t
 
size
 = 
	`LﬂdByã
(
S
);

90 i‡(
size
 == 0xFF)

91 
	`LﬂdV¨
(
S
, 
size
);

92 i‡(
size
 == 0)

93  
NULL
;

94 i‡(--
size
 <
LUAI_MAXSHORTLEN
) {

95 
buff
[
LUAI_MAXSHORTLEN
];

96 
	`LﬂdVe˘‹
(
S
, 
buff
, 
size
);

97  
	`luaS_√wl°r
(
S
->
L
, 
buff
, 
size
);

100 
TSåög
 *
ts
 = 
	`luaS_¸óã g°robj
(
S
->
L
, 
size
);

101 
	`LﬂdVe˘‹
(
S
, 
	`gë°r
(
ts
), 
size
);

102  
ts
;

104 
	}
}

107 
	$LﬂdCode
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

108 
n
 = 
	`LﬂdI¡
(
S
);

109 
f
->
code
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
In°ru˘i⁄
);

110 
f
->
sizecode
 = 
n
;

111 
	`LﬂdVe˘‹
(
S
, 
f
->
code
, 
n
);

112 
	}
}

115 
LﬂdFun˘i⁄
(
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
);

118 
	$LﬂdC⁄°™ts
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

119 
i
;

120 
n
 = 
	`LﬂdI¡
(
S
);

121 
f
->
k
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
TVÆue
);

122 
f
->
sizek
 = 
n
;

123 
i
 = 0; i < 
n
; i++)

124 
	`£äûvÆue
(&
f
->
k
[
i
]);

125 
i
 = 0; i < 
n
; i++) {

126 
TVÆue
 *
o
 = &
f
->
k
[
i
];

127 
t
 = 
	`LﬂdByã
(
S
);

128 
t
) {

129 
LUA_TNIL
:

130 
	`£äûvÆue
(
o
);

132 
LUA_TBOOLEAN
:

133 
	`£tbvÆue
(
o
, 
	`LﬂdByã
(
S
));

135 
LUA_TNUMFLT
:

136 
	`£tÊtvÆue
(
o
, 
	`LﬂdNumbî
(
S
));

138 
LUA_TNUMINT
:

139 
	`£tivÆue
(
o
, 
	`LﬂdI¡egî
(
S
));

141 
LUA_TSHRSTR
:

142 
LUA_TLNGSTR
:

143 
	`£tsvÆue2n
(
S
->
L
, 
o
, 
	`LﬂdSåög
(S));

146 
	`lua_as£π
(0);

149 
	}
}

152 
	$LﬂdPrŸos
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

153 
i
;

154 
n
 = 
	`LﬂdI¡
(
S
);

155 
f
->
p
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
PrŸo
 *);

156 
f
->
sizï
 = 
n
;

157 
i
 = 0; i < 
n
; i++)

158 
f
->
p
[
i
] = 
NULL
;

159 
i
 = 0; i < 
n
; i++) {

160 
f
->
p
[
i
] = 
	`luaF_√w¥Ÿo
(
S
->
L
);

161 
	`LﬂdFun˘i⁄
(
S
, 
f
->
p
[
i
], f->
sour˚
);

163 
	}
}

166 
	$LﬂdUpvÆues
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

167 
i
, 
n
;

168 
n
 = 
	`LﬂdI¡
(
S
);

169 
f
->
upvÆues
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
UpvÆdesc
);

170 
f
->
sizeupvÆues
 = 
n
;

171 
i
 = 0; i < 
n
; i++)

172 
f
->
upvÆues
[
i
].
«me
 = 
NULL
;

173 
i
 = 0; i < 
n
; i++) {

174 
f
->
upvÆues
[
i
].
ö°ack
 = 
	`LﬂdByã
(
S
);

175 
f
->
upvÆues
[
i
].
idx
 = 
	`LﬂdByã
(
S
);

177 
	}
}

180 
	$LﬂdDebug
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

181 
i
, 
n
;

182 
n
 = 
	`LﬂdI¡
(
S
);

183 
f
->
löeöfo
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, );

184 
f
->
sizñöeöfo
 = 
n
;

185 
	`LﬂdVe˘‹
(
S
, 
f
->
löeöfo
, 
n
);

186 
n
 = 
	`LﬂdI¡
(
S
);

187 
f
->
locv¨s
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
LocV¨
);

188 
f
->
sizñocv¨s
 = 
n
;

189 
i
 = 0; i < 
n
; i++)

190 
f
->
locv¨s
[
i
].
v¨«me
 = 
NULL
;

191 
i
 = 0; i < 
n
; i++) {

192 
f
->
locv¨s
[
i
].
v¨«me
 = 
	`LﬂdSåög
(
S
);

193 
f
->
locv¨s
[
i
].
°¨çc
 = 
	`LﬂdI¡
(
S
);

194 
f
->
locv¨s
[
i
].
ídpc
 = 
	`LﬂdI¡
(
S
);

196 
n
 = 
	`LﬂdI¡
(
S
);

197 
i
 = 0; i < 
n
; i++)

198 
f
->
upvÆues
[
i
].
«me
 = 
	`LﬂdSåög
(
S
);

199 
	}
}

202 
	$LﬂdFun˘i⁄
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
) {

203 
f
->
sour˚
 = 
	`LﬂdSåög
(
S
);

204 i‡(
f
->
sour˚
 =
NULL
)

205 
f
->
sour˚
 = 
psour˚
;

206 
f
->
löedeföed
 = 
	`LﬂdI¡
(
S
);

207 
f
->
œ°löedeföed
 = 
	`LﬂdI¡
(
S
);

208 
f
->
num∑øms
 = 
	`LﬂdByã
(
S
);

209 
f
->
is_v¨¨g
 = 
	`LﬂdByã
(
S
);

210 
f
->
max°acksize
 = 
	`LﬂdByã
(
S
);

211 
	`LﬂdCode
(
S
, 
f
);

212 
	`LﬂdC⁄°™ts
(
S
, 
f
);

213 
	`LﬂdUpvÆues
(
S
, 
f
);

214 
	`LﬂdPrŸos
(
S
, 
f
);

215 
	`LﬂdDebug
(
S
, 
f
);

216 
	}
}

219 
	$checklôîÆ
 (
LﬂdSèã
 *
S
, c⁄° *
s
, c⁄° *
msg
) {

220 
buff
[(
LUA_SIGNATURE
Ë+ (
LUAC_DATA
)];

221 
size_t
 
Àn
 = 
	`°æí
(
s
);

222 
	`LﬂdVe˘‹
(
S
, 
buff
, 
Àn
);

223 i‡(
	`memcmp
(
s
, 
buff
, 
Àn
) != 0)

224 
	`îr‹
(
S
, 
msg
);

225 
	}
}

228 
	$fchecksize
 (
LﬂdSèã
 *
S
, 
size_t
 
size
, c⁄° *
äame
) {

229 i‡(
	`LﬂdByã
(
S
Ë!
size
)

230 
	`îr‹
(
S
, 
	`luaO_pushf°rög
(S->
L
, "%†sizêmism©ch in", 
äame
));

231 
	}
}

234 
	#checksize
(
S
,
t
Ë
	`fchecksize
(S,—),#t)

	)

236 
	$checkHódî
 (
LﬂdSèã
 *
S
) {

237 
	`checklôîÆ
(
S
, 
LUA_SIGNATURE
 + 1, "notá");

238 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_VERSION
)

239 
	`îr‹
(
S
, "version mismatch in");

240 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_FORMAT
)

241 
	`îr‹
(
S
, "format mismatch in");

242 
	`checklôîÆ
(
S
, 
LUAC_DATA
, "corrupted");

243 
	`checksize
(
S
, );

244 
	`checksize
(
S
, 
size_t
);

245 
	`checksize
(
S
, 
In°ru˘i⁄
);

246 
	`checksize
(
S
, 
lua_I¡egî
);

247 
	`checksize
(
S
, 
lua_Numbî
);

248 i‡(
	`LﬂdI¡egî
(
S
Ë!
LUAC_INT
)

249 
	`îr‹
(
S
, "endianness mismatch in");

250 i‡(
	`LﬂdNumbî
(
S
Ë!
LUAC_NUM
)

251 
	`îr‹
(
S
, "float format mismatch in");

252 
	}
}

258 
LClosuª
 *
	$luaU_undump
(
lua_Sèã
 *
L
, 
ZIO
 *
Z
, c⁄° *
«me
) {

259 
LﬂdSèã
 
S
;

260 
LClosuª
 *
˛
;

261 i‡(*
«me
 == '@' || *name == '=')

262 
S
.
«me
 =Çame + 1;

263 i‡(*
«me
 =
LUA_SIGNATURE
[0])

264 
S
.
«me
 = "binary string";

266 
S
.
«me
 =Çame;

267 
S
.
L
 = L;

268 
S
.
Z
 = Z;

269 
	`checkHódî
(&
S
);

270 
˛
 = 
	`luaF_√wL˛osuª
(
L
, 
	`LﬂdByã
(&
S
));

271 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

272 
	`luaD_ö˘›
(
L
);

273 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

274 
	`LﬂdFun˘i⁄
(&
S
, 
˛
->
p
, 
NULL
);

275 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

276 
	`luai_vîifycode
(
L
, 
buff
, 
˛
->
p
);

277  
˛
;

278 
	}
}

	@lundump.h

7 #i‚de‡
lundump_h


8 
	#lundump_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

16 
	#LUAC_DATA
 "\x19\x93\r\n\x1a\n"

	)

18 
	#LUAC_INT
 0x5678

	)

19 
	#LUAC_NUM
 
	`ˇ°_num
(370.5)

	)

21 
	#MYINT
(
s
Ë(s[0]-'0')

	)

22 
	#LUAC_VERSION
 (
	`MYINT
(
LUA_VERSION_MAJOR
)*16+MYINT(
LUA_VERSION_MINOR
))

	)

23 
	#LUAC_FORMAT
 0

	)

26 
LUAI_FUNC
 
LClosuª
* 
luaU_undump
 (
lua_Sèã
* 
L
, 
ZIO
* 
Z
, c⁄° * 
«me
);

29 
LUAI_FUNC
 
luaU_dump
 (
lua_Sèã
* 
L
, c⁄° 
PrŸo
* 
f
, 
lua_Wrôî
 
w
,

30 * 
d©a
, 
°rù
);

	@lutf8lib.c

7 
	#lutf8lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<as£π.h
>

14 
	~<limôs.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

23 
	#MAXUNICODE
 0x10FFFF

	)

25 
	#isc⁄t
(
p
Ë((*’Ë& 0xC0Ë=0x80)

	)

30 
lua_I¡egî
 
	$u_po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

31 i‡(
pos
 >= 0) Öos;

32 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

33  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

34 
	}
}

40 c⁄° *
	$utf8_decode
 (c⁄° *
o
, *
vÆ
) {

41 c⁄° 
limôs
[] = {0xFF, 0x7F, 0x7FF, 0xFFFF};

42 c⁄° *
s
 = (c⁄° *)
o
;

43 
c
 = 
s
[0];

44 
ªs
 = 0;

45 i‡(
c
 < 0x80)

46 
ªs
 = 
c
;

48 
cou¡
 = 0;

49 
c
 & 0x40) {

50 
cc
 = 
s
[++
cou¡
];

51 i‡((
cc
 & 0xC0) != 0x80)

52  
NULL
;

53 
ªs
 = (ª†<< 6Ë| (
cc
 & 0x3F);

54 
c
 <<= 1;

56 
ªs
 |((
c
 & 0x7FË<< (
cou¡
 * 5));

57 i‡(
cou¡
 > 3 || 
ªs
 > 
MAXUNICODE
 ||Ñe†<
limôs
[count])

58  
NULL
;

59 
s
 +
cou¡
;

61 i‡(
vÆ
Ë*vÆ = 
ªs
;

62  (c⁄° *)
s
 + 1;

63 
	}
}

71 
	$utÊí
 (
lua_Sèã
 *
L
) {

72 
n
 = 0;

73 
size_t
 
Àn
;

74 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

75 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

76 
lua_I¡egî
 
posj
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
Àn
);

77 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 2,

79 
	`luaL_¨gcheck
(
L
, --
posj
 < (
lua_I¡egî
)
Àn
, 3,

81 
posi
 <
posj
) {

82 c⁄° *
s1
 = 
	`utf8_decode
(
s
 + 
posi
, 
NULL
);

83 i‡(
s1
 =
NULL
) {

84 
	`lua_pushnû
(
L
);

85 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

88 
posi
 = 
s1
 - 
s
;

89 
n
++;

91 
	`lua_pushöãgî
(
L
, 
n
);

93 
	}
}

100 
	$codïoöt
 (
lua_Sèã
 *
L
) {

101 
size_t
 
Àn
;

102 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

103 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

104 
lua_I¡egî
 
po£
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
Àn
);

105 
n
;

106 c⁄° *
£
;

107 
	`luaL_¨gcheck
(
L
, 
posi
 >= 1, 2, "out ofÑange");

108 
	`luaL_¨gcheck
(
L
, 
po£
 <(
lua_I¡egî
)
Àn
, 3, "out ofÑange");

109 i‡(
posi
 > 
po£
)  0;

110 i‡(
po£
 - 
posi
 >
INT_MAX
)

111  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

112 
n
 = ()(
po£
 - 
posi
) + 1;

113 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

114 
n
 = 0;

115 
£
 = 
s
 + 
po£
;

116 
s
 +
posi
 - 1; s < 
£
;) {

117 
code
;

118 
s
 = 
	`utf8_decode
(s, &
code
);

119 i‡(
s
 =
NULL
)

120  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

121 
	`lua_pushöãgî
(
L
, 
code
);

122 
n
++;

124  
n
;

125 
	}
}

128 
	$pushutfch¨
 (
lua_Sèã
 *
L
, 
¨g
) {

129 
lua_I¡egî
 
code
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

130 
	`luaL_¨gcheck
(
L
, 0 <
code
 && codê<
MAXUNICODE
, 
¨g
, "value out ofÑange");

131 
	`lua_pushf°rög
(
L
, "%U", ()
code
);

132 
	}
}

138 
	$utfch¨
 (
lua_Sèã
 *
L
) {

139 
n
 = 
	`lua_gët›
(
L
);

140 i‡(
n
 == 1)

141 
	`pushutfch¨
(
L
, 1);

143 
i
;

144 
luaL_Buf„r
 
b
;

145 
	`luaL_bufföô
(
L
, &
b
);

146 
i
 = 1; i <
n
; i++) {

147 
	`pushutfch¨
(
L
, 
i
);

148 
	`luaL_addvÆue
(&
b
);

150 
	`luaL_pushªsu…
(&
b
);

153 
	}
}

160 
	$byãoff£t
 (
lua_Sèã
 *
L
) {

161 
size_t
 
Àn
;

162 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

163 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

164 
lua_I¡egî
 
posi
 = (
n
 >0Ë? 1 : 
Àn
 + 1;

165 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3,Öosi), 
Àn
);

166 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 3,

168 i‡(
n
 == 0) {

170 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi))Öosi--;

173 i‡(
	`isc⁄t
(
s
 + 
posi
))

174  
	`luaL_îr‹
(
L
, "initialÖosition isá continuation byte");

175 i‡(
n
 < 0) {

176 
n
 < 0 && 
posi
 > 0) {

178 
posi
--;

179 } 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi));

180 
n
++;

184 
n
--;

185 
n
 > 0 && 
posi
 < (
lua_I¡egî
)
Àn
) {

187 
posi
++;

188 } 
	`isc⁄t
(
s
 + 
posi
));

189 
n
--;

193 i‡(
n
 == 0)

194 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

196 
	`lua_pushnû
(
L
);

198 
	}
}

201 
	$ôî_aux
 (
lua_Sèã
 *
L
) {

202 
size_t
 
Àn
;

203 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

204 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 2) - 1;

205 i‡(
n
 < 0)

206 
n
 = 0;

207 i‡(
n
 < (
lua_I¡egî
)
Àn
) {

208 
n
++;

209 
	`isc⁄t
(
s
 + 
n
))Ç++;

211 i‡(
n
 >(
lua_I¡egî
)
Àn
)

214 
code
;

215 c⁄° *
√xt
 = 
	`utf8_decode
(
s
 + 
n
, &
code
);

216 i‡(
√xt
 =
NULL
 || 
	`isc⁄t
(next))

217  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

218 
	`lua_pushöãgî
(
L
, 
n
 + 1);

219 
	`lua_pushöãgî
(
L
, 
code
);

222 
	}
}

225 
	$ôî_codes
 (
lua_Sèã
 *
L
) {

226 
	`luaL_check°rög
(
L
, 1);

227 
	`lua_pushcfun˘i⁄
(
L
, 
ôî_aux
);

228 
	`lua_pushvÆue
(
L
, 1);

229 
	`lua_pushöãgî
(
L
, 0);

231 
	}
}

235 
	#UTF8PATT
 "[\0-\x7F\xC2-\xF4][\x80-\xBF]*"

	)

238 c⁄° 
luaL_Reg
 
	gfuncs
[] = {

239 {"off£t", 
byãoff£t
},

240 {"codïoöt", 
codïoöt
},

241 {"ch¨", 
utfch¨
},

242 {"Àn", 
utÊí
},

243 {"codes", 
ôî_codes
},

245 {"ch¨∑âîn", 
NULL
},

246 {
NULL
, NULL}

250 
LUAMOD_API
 
	$lua›í_utf8
 (
lua_Sèã
 *
L
) {

251 
	`luaL_√wlib
(
L
, 
funcs
);

252 
	`lua_pushl°rög
(
L
, 
UTF8PATT
, (UTF8PATT)/() - 1);

253 
	`lua_£tfõld
(
L
, -2, "charpattern");

255 
	}
}

	@lvm.c

7 
	#lvm_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<Êﬂt.h
>

13 
	~<limôs.h
>

14 
	~<m©h.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

19 
	~"lua.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lgc.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"…abÀ.h
"

30 
	~"…m.h
"

31 
	~"lvm.h
"

35 
	#MAXTAGLOOP
 2000

	)

44 #i‡!
deföed
(
l_ötfôsf
)

47 
	#NBM
 (
	`l_m©hlim
(
MANT_DIG
))

	)

56 #i‡((((
LUA_MAXINTEGER
 >> (
NBM
 / 4)) >> (NBM / 4)) >> (NBM / 4)) \

57 >> (
	gNBM
 - (3 * (NBM / 4)))) > 0

59 
	#l_ötfôsf
(
i
) \

60 (-((
lua_I¡egî
)1 << 
NBM
Ë<(
i
Ë&& (iË<(÷ua_I¡egî)1 << NBM))

	)

72 
	$luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
) {

73 
TVÆue
 
v
;

74 i‡(
	`âisöãgî
(
obj
)) {

75 *
n
 = 
	`ˇ°_num
(
	`ivÆue
(
obj
));

78 i‡(
	`cvt2num
(
obj
) &&

79 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

80 *
n
 = 
	`nvÆue
(&
v
);

85 
	}
}

94 
	$luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
) {

95 
TVÆue
 
v
;

96 
agaö
:

97 i‡(
	`âisÊﬂt
(
obj
)) {

98 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(
obj
);

99 
lua_Numbî
 
f
 = 
	`l_Êo‹
(
n
);

100 i‡(
n
 !
f
) {

101 i‡(
mode
 == 0)  0;

102 i‡(
mode
 > 1)

103 
f
 += 1;

105  
	`lua_numbîtoöãgî
(
f
, 
p
);

107 i‡(
	`âisöãgî
(
obj
)) {

108 *
p
 = 
	`ivÆue
(
obj
);

111 i‡(
	`cvt2num
(
obj
) &&

112 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

113 
obj
 = &
v
;

114 
agaö
;

117 
	}
}

135 
	$f‹limô
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
,Üua_I¡egî 
°ï
,

136 *
°›now
) {

137 *
°›now
 = 0;

138 i‡(!
	`luaV_toöãgî
(
obj
, 
p
, (
°ï
 < 0 ? 2 : 1))) {

139 
lua_Numbî
 
n
;

140 i‡(!
	`t⁄umbî
(
obj
, &
n
))

142 i‡(
	`luai_num…
(0, 
n
)) {

143 *
p
 = 
LUA_MAXINTEGER
;

144 i‡(
°ï
 < 0Ë*
°›now
 = 1;

147 *
p
 = 
LUA_MININTEGER
;

148 i‡(
°ï
 >0Ë*
°›now
 = 1;

152 
	}
}

160 
	$luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
,

161 c⁄° 
TVÆue
 *
¶Ÿ
) {

162 
lo›
;

163 c⁄° 
TVÆue
 *
tm
;

164 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

165 i‡(
¶Ÿ
 =
NULL
) {

166 
	`lua_as£π
(!
	`âi°abÀ
(
t
));

167 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_INDEX
);

168 i‡(
	`âi¢û
(
tm
))

169 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

173 
	`lua_as£π
(
	`âi¢û
(
¶Ÿ
));

174 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t
)->
më©abÀ
, 
TM_INDEX
);

175 i‡(
tm
 =
NULL
) {

176 
	`£äûvÆue
(
vÆ
);

181 i‡(
	`âisfun˘i⁄
(
tm
)) {

182 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 1);

185 
t
 = 
tm
;

186 i‡(
	`luaV_Á°gë
(
L
,
t
,
key
,
¶Ÿ
,
luaH_gë
)) {

187 
	`£tobj2s
(
L
, 
vÆ
, 
¶Ÿ
);

192 
	`luaG_ru√º‹
(
L
, "'__index' chainÅooÜong;ÖossibleÜoop");

193 
	}
}

203 
	$luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

204 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
) {

205 
lo›
;

206 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

207 c⁄° 
TVÆue
 *
tm
;

208 i‡(
¶Ÿ
 !
NULL
) {

209 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

210 
	`lua_as£π
(
	`âi¢û
(
¶Ÿ
));

211 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_NEWINDEX
);

212 i‡(
tm
 =
NULL
) {

213 i‡(
¶Ÿ
 =
luaO_nûobje˘
)

214 
¶Ÿ
 = 
	`luaH_√wkey
(
L
, 
h
, 
key
);

216 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *, 
¶Ÿ
), 
vÆ
);

217 
	`övÆid©eTMˇche
(
h
);

218 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

224 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_NEWINDEX
)))

225 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

228 i‡(
	`âisfun˘i⁄
(
tm
)) {

229 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 0);

232 
t
 = 
tm
;

233 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
key
, 
¶Ÿ
, 
luaH_gë
, 
vÆ
))

237 
	`luaG_ru√º‹
(
L
, "'__newindex' chainÅooÜong;ÖossibleÜoop");

238 
	}
}

248 
	$l_°rcmp
 (c⁄° 
TSåög
 *
ls
, c⁄° TSåög *
rs
) {

249 c⁄° *
l
 = 
	`gë°r
(
ls
);

250 
size_t
 
Œ
 = 
	`ts¶í
(
ls
);

251 c⁄° *
r
 = 
	`gë°r
(
rs
);

252 
size_t
 
Ã
 = 
	`ts¶í
(
rs
);

254 
ãmp
 = 
	`°rcﬁl
(
l
, 
r
);

255 i‡(
ãmp
 != 0)

256  
ãmp
;

258 
size_t
 
Àn
 = 
	`°æí
(
l
);

259 i‡(
Àn
 =
Ã
)

260  (
Àn
 =
Œ
) ? 0 : 1;

261 i‡(
Àn
 =
Œ
)

264 
Àn
++;

265 
l
 +
Àn
; 
Œ
 -Àn; 
r
 +Àn; 
Ã
 -=Üen;

268 
	}
}

281 
	$LTötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

282 #i‡
	`deföed
(
l_ötfôsf
)

283 i‡(!
	`l_ötfôsf
(
i
)) {

284 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

286 i‡(
f
 > 
	`ˇ°_num
(
LUA_MININTEGER
))

287  (
i
 < 
	`ˇ°
(
lua_I¡egî
, 
f
));

292  
	`luai_num…
(
	`ˇ°_num
(
i
), 
f
);

293 
	}
}

300 
	$LEötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

301 #i‡
	`deföed
(
l_ötfôsf
)

302 i‡(!
	`l_ötfôsf
(
i
)) {

303 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

305 i‡(
f
 >
	`ˇ°_num
(
LUA_MININTEGER
))

306  (
i
 <
	`ˇ°
(
lua_I¡egî
, 
f
));

311  
	`luai_numÀ
(
	`ˇ°_num
(
i
), 
f
);

312 
	}
}

318 
	$LTnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

319 i‡(
	`âisöãgî
(
l
)) {

320 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

321 i‡(
	`âisöãgî
(
r
))

322  
li
 < 
	`ivÆue
(
r
);

324  
	`LTötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

327 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

328 i‡(
	`âisÊﬂt
(
r
))

329  
	`luai_num…
(
lf
, 
	`ÊtvÆue
(
r
));

330 i‡(
	`luai_numi¢™
(
lf
))

333  !
	`LEötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

335 
	}
}

341 
	$LEnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

342 i‡(
	`âisöãgî
(
l
)) {

343 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

344 i‡(
	`âisöãgî
(
r
))

345  
li
 <
	`ivÆue
(
r
);

347  
	`LEötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

350 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

351 i‡(
	`âisÊﬂt
(
r
))

352  
	`luai_numÀ
(
lf
, 
	`ÊtvÆue
(
r
));

353 i‡(
	`luai_numi¢™
(
lf
))

356  !
	`LTötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

358 
	}
}

364 
	$luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

365 
ªs
;

366 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

367  
	`LTnum
(
l
, 
r
);

368 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

369  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) < 0;

370 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LT
)) < 0)

371 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

372  
ªs
;

373 
	}
}

384 
	$luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

385 
ªs
;

386 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

387  
	`LEnum
(
l
, 
r
);

388 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

389  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) <= 0;

390 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LE
)) >= 0)

391  
ªs
;

393 
L
->
ci
->
ˇŒ°©us
 |
CIST_LEQ
;

394 
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
r
, 
l
, 
TM_LT
);

395 
L
->
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

396 i‡(
ªs
 < 0)

397 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

398  !
ªs
;

400 
	}
}

407 
	$luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
) {

408 c⁄° 
TVÆue
 *
tm
;

409 i‡(
	`ây≥
(
t1
Ë!ây≥(
t2
)) {

410 i‡(
	`ânov
(
t1
Ë!ânov(
t2
Ë||Åäov—1Ë!
LUA_TNUMBER
)

413 
lua_I¡egî
 
i1
, 
i2
;

414  (
	`toöãgî
(
t1
, &
i1
Ë&&Åoöãgî(
t2
, &
i2
) && i1 == i2);

418 
	`ây≥
(
t1
)) {

419 
LUA_TNIL
:  1;

420 
LUA_TNUMINT
:  (
	`ivÆue
(
t1
Ë=ivÆue(
t2
));

421 
LUA_TNUMFLT
:  
	`luai_numeq
(
	`ÊtvÆue
(
t1
), f…vÆue(
t2
));

422 
LUA_TBOOLEAN
:  
	`bvÆue
(
t1
Ë=bvÆue(
t2
);

423 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
t1
Ë=pvÆue(
t2
);

424 
LUA_TLCF
:  
	`fvÆue
(
t1
Ë=fvÆue(
t2
);

425 
LUA_TSHRSTR
:  
	`eqshr°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

426 
LUA_TLNGSTR
:  
	`luaS_eq g°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

427 
LUA_TUSERDATA
: {

428 i‡(
	`uvÆue
(
t1
Ë=uvÆue(
t2
))  1;

429 i‡(
L
 =
NULL
)  0;

430 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

431 i‡(
tm
 =
NULL
)

432 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

435 
LUA_TTABLE
: {

436 i‡(
	`hvÆue
(
t1
Ë=hvÆue(
t2
))  1;

437 i‡(
L
 =
NULL
)  0;

438 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

439 i‡(
tm
 =
NULL
)

440 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

444  
	`gcvÆue
(
t1
Ë=gcvÆue(
t2
);

446 i‡(
tm
 =
NULL
)

448 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t1
, 
t2
, L->
t›
, 1);

449  !
	`l_isÁl£
(
L
->
t›
);

450 
	}
}

454 
	#to°rög
(
L
,
o
) \

455 (
	`âis°rög
(
o
Ë|| (
	`cvt2°r
(oË&& (
	`luaO_to°rög
(
L
, o), 1)))

	)

457 
	#i£m±y°r
(
o
Ë(
	`âisshr°rög
(oË&& 
	`tsvÆue
(o)->
shæí
 =0)

	)

460 
	$c›y2buff
 (
StkId
 
t›
, 
n
, *
buff
) {

461 
size_t
 
é
 = 0;

463 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
);

464 
	`mem˝y
(
buff
 + 
é
, 
	`svÆue
(
t›
 - 
n
), 
l
 * ());

465 
é
 +
l
;

466 } --
n
 > 0);

467 
	}
}

474 
	$luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
) {

475 
	`lua_as£π
(
tŸÆ
 >= 2);

477 
StkId
 
t›
 = 
L
->top;

478 
n
 = 2;

479 i‡(!(
	`âis°rög
(
t›
-2Ë|| 
	`cvt2°r
—›-2)Ë|| !
	`to°rög
(
L
,Åop-1))

480 
	`luaT_åyböTM
(
L
, 
t›
-2,Å›-1,Å›-2, 
TM_CONCAT
);

481 i‡(
	`i£m±y°r
(
t›
 - 1))

482 
	`ˇ°_void
(
	`to°rög
(
L
, 
t›
 - 2));

483 i‡(
	`i£m±y°r
(
t›
 - 2)) {

484 
	`£tobjs2s
(
L
, 
t›
 - 2,Åop - 1);

488 
size_t
 
é
 = 
	`v¶í
(
t›
 - 1);

489 
TSåög
 *
ts
;

491 
n
 = 1;Ç < 
tŸÆ
 && 
	`to°rög
(
L
, 
t›
 -Ç - 1);Ç++) {

492 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
 - 1);

493 i‡(
l
 >(
MAX_SIZE
/()Ë- 
é
)

494 
	`luaG_ru√º‹
(
L
, "stringÜength overflow");

495 
é
 +
l
;

497 i‡(
é
 <
LUAI_MAXSHORTLEN
) {

498 
buff
[
LUAI_MAXSHORTLEN
];

499 
	`c›y2buff
(
t›
, 
n
, 
buff
);

500 
ts
 = 
	`luaS_√wl°r
(
L
, 
buff
, 
é
);

503 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
é
);

504 
	`c›y2buff
(
t›
, 
n
, 
	`gë°r
(
ts
));

506 
	`£tsvÆue2s
(
L
, 
t›
 - 
n
, 
ts
);

508 
tŸÆ
 -
n
-1;

509 
L
->
t›
 -
n
-1;

510 } 
tŸÆ
 > 1);

511 
	}
}

517 
	$luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
) {

518 c⁄° 
TVÆue
 *
tm
;

519 
	`ây≥
(
rb
)) {

520 
LUA_TTABLE
: {

521 
TabÀ
 *
h
 = 
	`hvÆue
(
rb
);

522 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_LEN
);

523 i‡(
tm
) ;

524 
	`£tivÆue
(
ø
, 
	`luaH_gën
(
h
));

527 
LUA_TSHRSTR
: {

528 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
shæí
);

531 
LUA_TLNGSTR
: {

532 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
u
.
 gÀn
);

536 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
rb
, 
TM_LEN
);

537 i‡(
	`âi¢û
(
tm
))

538 
	`luaG_ty≥îr‹
(
L
, 
rb
, "getÜength of");

542 
	`luaT_ˇŒTM
(
L
, 
tm
, 
rb
,Ñb, 
ø
, 1);

543 
	}
}

552 
lua_I¡egî
 
	$luaV_div
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

553 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

554 i‡(
n
 == 0)

555 
	`luaG_ru√º‹
(
L
, "attemptÅo divide by zero");

556  
	`öt›
(-, 0, 
m
);

559 
lua_I¡egî
 
q
 = 
m
 / 
n
;

560 i‡((
m
 ^ 
n
) < 0 && m %Ç != 0)

561 
q
 -= 1;

562  
q
;

564 
	}
}

572 
lua_I¡egî
 
	$luaV_mod
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

573 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

574 i‡(
n
 == 0)

575 
	`luaG_ru√º‹
(
L
, "attemptÅoÖerform 'n%%0'");

579 
lua_I¡egî
 
r
 = 
m
 % 
n
;

580 i‡(
r
 !0 && (
m
 ^ 
n
) < 0)

581 
r
 +
n
;

582  
r
;

584 
	}
}

588 
	#NBITS
 
	`ˇ°_öt
((
lua_I¡egî
Ë* 
CHAR_BIT
)

	)

593 
lua_I¡egî
 
	$luaV_shi·l
 (
lua_I¡egî
 
x
,Üua_I¡egî 
y
) {

594 i‡(
y
 < 0) {

595 i‡(
y
 <-
NBITS
)  0;

596  
	`öt›
(>>, 
x
, -
y
);

599 i‡(
y
 >
NBITS
)  0;

600  
	`öt›
(<<, 
x
, 
y
);

602 
	}
}

610 
LClosuª
 *
	$gëˇched
 (
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
) {

611 
LClosuª
 *
c
 = 
p
->
ˇche
;

612 i‡(
c
 !
NULL
) {

613 
nup
 = 
p
->
sizeupvÆues
;

614 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

615 
i
;

616 
i
 = 0; i < 
nup
; i++) {

617 
TVÆue
 *
v
 = 
uv
[
i
].
ö°ack
 ? 
ba£
 + uv[i].
idx
 : 
ícup
[uv[i].idx]->v;

618 i‡(
c
->
upvÆs
[
i
]->
v
 != v)

619  
NULL
;

622  
c
;

623 
	}
}

632 
	$push˛osuª
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
,

633 
StkId
 
ø
) {

634 
nup
 = 
p
->
sizeupvÆues
;

635 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

636 
i
;

637 
LClosuª
 *
n˛
 = 
	`luaF_√wL˛osuª
(
L
, 
nup
);

638 
n˛
->
p
 =Ö;

639 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

640 
i
 = 0; i < 
nup
; i++) {

641 i‡(
uv
[
i
].
ö°ack
)

642 
n˛
->
upvÆs
[
i
] = 
	`luaF_födupvÆ
(
L
, 
ba£
 + 
uv
[i].
idx
);

644 
n˛
->
upvÆs
[
i
] = 
ícup
[
uv
[i].
idx
];

645 
n˛
->
upvÆs
[
i
]->
ªfcou¡
++;

648 i‡(!
	`isbœck
(
p
))

649 
p
->
ˇche
 = 
n˛
;

650 
	}
}

656 
	$luaV_föishOp
 (
lua_Sèã
 *
L
) {

657 
CÆlInfo
 *
ci
 = 
L
->ci;

658 
StkId
 
ba£
 = 
ci
->
u
.
l
.base;

659 
In°ru˘i⁄
 
ö°
 = *(
ci
->
u
.
l
.
ßvedpc
 - 1);

660 
OpCode
 
›
 = 
	`GET_OPCODE
(
ö°
);

661 
›
) {

662 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_DIV
: 
OP_IDIV
:

663 
OP_BAND
: 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
:

664 
OP_MOD
: 
OP_POW
:

665 
OP_UNM
: 
OP_BNOT
: 
OP_LEN
:

666 
OP_GETTABUP
: 
OP_GETTABLE
: 
OP_SELF
: {

667 
	`£tobjs2s
(
L
, 
ba£
 + 
	`GETARG_A
(
ö°
), --L->
t›
);

670 
OP_LE
: 
OP_LT
: 
OP_EQ
: {

671 
ªs
 = !
	`l_isÁl£
(
L
->
t›
 - 1);

672 
L
->
t›
--;

673 i‡(
ci
->
ˇŒ°©us
 & 
CIST_LEQ
) {

674 
	`lua_as£π
(
›
 =
OP_LE
);

675 
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

676 
ªs
 = !res;

678 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_JMP
);

679 i‡(
ªs
 !
	`GETARG_A
(
ö°
))

680 
ci
->
u
.
l
.
ßvedpc
++;

683 
OP_CONCAT
: {

684 
StkId
 
t›
 = 
L
->top - 1;

685 
b
 = 
	`GETARG_B
(
ö°
);

686 
tŸÆ
 = 
	`ˇ°_öt
(
t›
 - 1 - (
ba£
 + 
b
));

687 
	`£tobj2s
(
L
, 
t›
 - 2,Åop);

688 i‡(
tŸÆ
 > 1) {

689 
L
->
t›
 =Åop - 1;

690 
	`luaV_c⁄ˇt
(
L
, 
tŸÆ
);

693 
	`£tobj2s
(
L
, 
ci
->
u
.
l
.
ba£
 + 
	`GETARG_A
(
ö°
), L->
t›
 - 1);

694 
L
->
t›
 = 
ci
->top;

697 
OP_TFORCALL
: {

698 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_TFORLOOP
);

699 
L
->
t›
 = 
ci
->top;

702 
OP_CALL
: {

703 i‡(
	`GETARG_C
(
ö°
) - 1 >= 0)

704 
L
->
t›
 = 
ci
->top;

707 
OP_TAILCALL
: 
OP_SETTABUP
: 
OP_SETTABLE
:

709 : 
	`lua_as£π
(0);

711 
	}
}

728 
	#RA
(
i
Ë(
ba£
+
	`GETARG_A
(i))

	)

729 
	#RB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_B
(i))

	)

730 
	#RC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_C
(i))

	)

731 
	#RKB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

732 
	`ISK
(
	`GETARG_B
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_B(i)Ë: 
ba£
+GETARG_B(i))

	)

733 
	#RKC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

734 
	`ISK
(
	`GETARG_C
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_C(i)Ë: 
ba£
+GETARG_C(i))

	)

738 
	#dojump
(
ci
,
i
,
e
) \

739 { 
a
 = 
	`GETARG_A
(
i
); \

740 i‡(
a
 !0Ë
	`luaF_˛o£
(
L
, 
ci
->
u
.
l
.
ba£
 +á - 1); \

741 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
Ë+ 
e
; }

	)

744 
	#d⁄extjump
(
ci
Ë{ 
i
 = *ci->
u
.
l
.
ßvedpc
; 
	`dojump
(ci, i, 1); }

	)

747 
	#PrŸe˘
(
x
Ë{ {x;}; 
ba£
 = 
ci
->
u
.
l
.ba£; }

	)

749 
	#checkGC
(
L
,
c
) \

750 { 
	`luaC_c⁄dGC
(
L
, L->
t›
 = (
c
), \

751 
	`PrŸe˘
(
L
->
t›
 = 
ci
->top)); \

752 
	`luai_thªadyõld
(
L
); }

	)

756 
	#vm„tch
() { \

757 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++); \

758 i‡(
L
->
hookmask
 & (
LUA_MASKLINE
 | 
LUA_MASKCOUNT
)) \

759 
	`PrŸe˘
(
	`luaG_åa˚exec
(
L
)); \

760 
ø
 = 
	`RA
(
i
); \

761 
	`lua_as£π
(
ba£
 =
ci
->
u
.
l
.base); \

762 
	`lua_as£π
(
ba£
 <
L
->
t›
 && L->t› < L->
°ack
 + L->
°acksize
); \

763 }

	)

765 
	#vmdi•©ch
(
o
Ëo)

	)

766 
	#vmˇ£
(
l
Ël:

	)

767 
	#vmbªak
 

	)

774 
	#gëèbÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

775 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
, slot); } \

776 
	`PrŸe˘
(
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

780 
	#£âabÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

781 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

782 
	`PrŸe˘
(
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

786 
	$luaV_execuã
 (
lua_Sèã
 *
L
) {

787 
CÆlInfo
 *
ci
 = 
L
->ci;

788 
LClosuª
 *
˛
;

789 
TVÆue
 *
k
;

790 
StkId
 
ba£
;

791 
ci
->
ˇŒ°©us
 |
CIST_FRESH
;

792 
√w‰ame
:

793 
	`lua_as£π
(
ci
 =
L
->ci);

794 
˛
 = 
	`˛LvÆue
(
ci
->
func
);

795 
k
 = 
˛
->
p
->k;

796 
ba£
 = 
ci
->
u
.
l
.base;

799 
In°ru˘i⁄
 
i
;

800 
StkId
 
ø
;

801 
	`vm„tch
();

802 
	`vmdi•©ch
 (
	`GET_OPCODE
(
i
)) {

803 
	`vmˇ£
(
OP_MOVE
) {

804 
	`£tobjs2s
(
L
, 
ø
, 
	`RB
(
i
));

805 
vmbªak
;

807 
	`vmˇ£
(
OP_LOADK
) {

808 
TVÆue
 *
rb
 = 
k
 + 
	`GETARG_Bx
(
i
);

809 
	`£tobj2s
(
L
, 
ø
, 
rb
);

810 
vmbªak
;

812 
	`vmˇ£
(
OP_LOADKX
) {

813 
TVÆue
 *
rb
;

814 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

815 
rb
 = 
k
 + 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

816 
	`£tobj2s
(
L
, 
ø
, 
rb
);

817 
vmbªak
;

819 
	`vmˇ£
(
OP_LOADBOOL
) {

820 
	`£tbvÆue
(
ø
, 
	`GETARG_B
(
i
));

821 i‡(
	`GETARG_C
(
i
)Ë
ci
->
u
.
l
.
ßvedpc
++;

822 
vmbªak
;

824 
	`vmˇ£
(
OP_LOADNIL
) {

825 
b
 = 
	`GETARG_B
(
i
);

827 
	`£äûvÆue
(
ø
++);

828 } 
b
--);

829 
vmbªak
;

831 
	`vmˇ£
(
OP_GETUPVAL
) {

832 
b
 = 
	`GETARG_B
(
i
);

833 
	`£tobj2s
(
L
, 
ø
, 
˛
->
upvÆs
[
b
]->
v
);

834 
vmbªak
;

836 
	`vmˇ£
(
OP_GETTABUP
) {

837 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)]->
v
;

838 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

839 
	`gëèbÀPrŸe˘ed
(
L
, 
upvÆ
, 
rc
, 
ø
);

840 
vmbªak
;

842 
	`vmˇ£
(
OP_GETTABLE
) {

843 
StkId
 
rb
 = 
	`RB
(
i
);

844 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

845 
	`gëèbÀPrŸe˘ed
(
L
, 
rb
, 
rc
, 
ø
);

846 
vmbªak
;

848 
	`vmˇ£
(
OP_SETTABUP
) {

849 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_A
(
i
)]->
v
;

850 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

851 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

852 
	`£âabÀPrŸe˘ed
(
L
, 
upvÆ
, 
rb
, 
rc
);

853 
vmbªak
;

855 
	`vmˇ£
(
OP_SETUPVAL
) {

856 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)];

857 
	`£tobj
(
L
, 
uv
->
v
, 
ø
);

858 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

859 
vmbªak
;

861 
	`vmˇ£
(
OP_SETTABLE
) {

862 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

863 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

864 
	`£âabÀPrŸe˘ed
(
L
, 
ø
, 
rb
, 
rc
);

865 
vmbªak
;

867 
	`vmˇ£
(
OP_NEWTABLE
) {

868 
b
 = 
	`GETARG_B
(
i
);

869 
c
 = 
	`GETARG_C
(
i
);

870 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

871 
	`£thvÆue
(
L
, 
ø
, 
t
);

872 i‡(
b
 !0 || 
c
 != 0)

873 
	`luaH_ªsize
(
L
, 
t
, 
	`luaO_fb2öt
(
b
),ÜuaO_fb2öt(
c
));

874 
	`checkGC
(
L
, 
ø
 + 1);

875 
vmbªak
;

877 
	`vmˇ£
(
OP_SELF
) {

878 c⁄° 
TVÆue
 *
aux
;

879 
StkId
 
rb
 = 
	`RB
(
i
);

880 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

881 
TSåög
 *
key
 = 
	`tsvÆue
(
rc
);

882 
	`£tobjs2s
(
L
, 
ø
 + 1, 
rb
);

883 i‡(
	`luaV_Á°gë
(
L
, 
rb
, 
key
, 
aux
, 
luaH_gë°r
)) {

884 
	`£tobj2s
(
L
, 
ø
, 
aux
);

886 
	`PrŸe˘
(
	`luaV_föishgë
(
L
, 
rb
, 
rc
, 
ø
, 
aux
));

887 
vmbªak
;

889 
	`vmˇ£
(
OP_ADD
) {

890 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

891 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

892 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

893 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

894 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

895 
	`£tivÆue
(
ø
, 
	`öt›
(+, 
ib
, 
ic
));

897 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

898 
	`£tÊtvÆue
(
ø
, 
	`luai_numadd
(
L
, 
nb
, 
nc
));

900 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_ADD
)); }

901 
vmbªak
;

903 
	`vmˇ£
(
OP_SUB
) {

904 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

905 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

906 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

907 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

908 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

909 
	`£tivÆue
(
ø
, 
	`öt›
(-, 
ib
, 
ic
));

911 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

912 
	`£tÊtvÆue
(
ø
, 
	`luai_numsub
(
L
, 
nb
, 
nc
));

914 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SUB
)); }

915 
vmbªak
;

917 
	`vmˇ£
(
OP_MUL
) {

918 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

919 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

920 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

921 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

922 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

923 
	`£tivÆue
(
ø
, 
	`öt›
(*, 
ib
, 
ic
));

925 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

926 
	`£tÊtvÆue
(
ø
, 
	`luai_nummul
(
L
, 
nb
, 
nc
));

928 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MUL
)); }

929 
vmbªak
;

931 
	`vmˇ£
(
OP_DIV
) {

932 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

933 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

934 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

935 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

936 
	`£tÊtvÆue
(
ø
, 
	`luai_numdiv
(
L
, 
nb
, 
nc
));

938 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_DIV
)); }

939 
vmbªak
;

941 
	`vmˇ£
(
OP_BAND
) {

942 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

943 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

944 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

945 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

946 
	`£tivÆue
(
ø
, 
	`öt›
(&, 
ib
, 
ic
));

948 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BAND
)); }

949 
vmbªak
;

951 
	`vmˇ£
(
OP_BOR
) {

952 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

953 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

954 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

955 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

956 
	`£tivÆue
(
ø
, 
	`öt›
(|, 
ib
, 
ic
));

958 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BOR
)); }

959 
vmbªak
;

961 
	`vmˇ£
(
OP_BXOR
) {

962 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

963 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

964 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

965 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

966 
	`£tivÆue
(
ø
, 
	`öt›
(^, 
ib
, 
ic
));

968 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BXOR
)); }

969 
vmbªak
;

971 
	`vmˇ£
(
OP_SHL
) {

972 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

973 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

974 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

975 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

976 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, 
ic
));

978 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHL
)); }

979 
vmbªak
;

981 
	`vmˇ£
(
OP_SHR
) {

982 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

983 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

984 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

985 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

986 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, -
ic
));

988 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHR
)); }

989 
vmbªak
;

991 
	`vmˇ£
(
OP_MOD
) {

992 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

993 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

994 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

995 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

996 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

997 
	`£tivÆue
(
ø
, 
	`luaV_mod
(
L
, 
ib
, 
ic
));

999 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1000 
lua_Numbî
 
m
;

1001 
	`luai_nummod
(
L
, 
nb
, 
nc
, 
m
);

1002 
	`£tÊtvÆue
(
ø
, 
m
);

1004 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MOD
)); }

1005 
vmbªak
;

1007 
	`vmˇ£
(
OP_IDIV
) {

1008 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1009 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1010 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1011 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

1012 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

1013 
	`£tivÆue
(
ø
, 
	`luaV_div
(
L
, 
ib
, 
ic
));

1015 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1016 
	`£tÊtvÆue
(
ø
, 
	`luai_numidiv
(
L
, 
nb
, 
nc
));

1018 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_IDIV
)); }

1019 
vmbªak
;

1021 
	`vmˇ£
(
OP_POW
) {

1022 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1023 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1024 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1025 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1026 
	`£tÊtvÆue
(
ø
, 
	`luai_numpow
(
L
, 
nb
, 
nc
));

1028 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_POW
)); }

1029 
vmbªak
;

1031 
	`vmˇ£
(
OP_UNM
) {

1032 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1033 
lua_Numbî
 
nb
;

1034 i‡(
	`âisöãgî
(
rb
)) {

1035 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);

1036 
	`£tivÆue
(
ø
, 
	`öt›
(-, 0, 
ib
));

1038 i‡(
	`t⁄umbî
(
rb
, &
nb
)) {

1039 
	`£tÊtvÆue
(
ø
, 
	`luai_numunm
(
L
, 
nb
));

1042 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_UNM
));

1044 
vmbªak
;

1046 
	`vmˇ£
(
OP_BNOT
) {

1047 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1048 
lua_I¡egî
 
ib
;

1049 i‡(
	`toöãgî
(
rb
, &
ib
)) {

1050 
	`£tivÆue
(
ø
, 
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
ib
));

1053 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_BNOT
));

1055 
vmbªak
;

1057 
	`vmˇ£
(
OP_NOT
) {

1058 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1059 
ªs
 = 
	`l_isÁl£
(
rb
);

1060 
	`£tbvÆue
(
ø
, 
ªs
);

1061 
vmbªak
;

1063 
	`vmˇ£
(
OP_LEN
) {

1064 
	`PrŸe˘
(
	`luaV_objÀn
(
L
, 
ø
, 
	`RB
(
i
)));

1065 
vmbªak
;

1067 
	`vmˇ£
(
OP_CONCAT
) {

1068 
b
 = 
	`GETARG_B
(
i
);

1069 
c
 = 
	`GETARG_C
(
i
);

1070 
StkId
 
rb
;

1071 
L
->
t›
 = 
ba£
 + 
c
 + 1;

1072 
	`PrŸe˘
(
	`luaV_c⁄ˇt
(
L
, 
c
 - 
b
 + 1));

1073 
ø
 = 
	`RA
(
i
);

1074 
rb
 = 
ba£
 + 
b
;

1075 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1076 
	`checkGC
(
L
, (
ø
 >
rb
 ?Ña + 1 :Ñb));

1077 
L
->
t›
 = 
ci
->top;

1078 
vmbªak
;

1080 
	`vmˇ£
(
OP_JMP
) {

1081 
	`dojump
(
ci
, 
i
, 0);

1082 
vmbªak
;

1084 
	`vmˇ£
(
OP_EQ
) {

1085 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1086 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1087 
	`PrŸe˘
(

1088 i‡(
	`luaV_equÆobj
(
L
, 
rb
, 
rc
Ë!
	`GETARG_A
(
i
))

1089 
ci
->
u
.
l
.
ßvedpc
++;

1091 
	`d⁄extjump
(
ci
);

1093 
vmbªak
;

1095 
	`vmˇ£
(
OP_LT
) {

1096 
	`PrŸe˘
(

1097 i‡(
	`luaV_Às°h™
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1098 
ci
->
u
.
l
.
ßvedpc
++;

1100 
	`d⁄extjump
(
ci
);

1102 
vmbªak
;

1104 
	`vmˇ£
(
OP_LE
) {

1105 
	`PrŸe˘
(

1106 i‡(
	`luaV_Às£quÆ
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1107 
ci
->
u
.
l
.
ßvedpc
++;

1109 
	`d⁄extjump
(
ci
);

1111 
vmbªak
;

1113 
	`vmˇ£
(
OP_TEST
) {

1114 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
ø
) : !l_isfalse(ra))

1115 
ci
->
u
.
l
.
ßvedpc
++;

1117 
	`d⁄extjump
(
ci
);

1118 
vmbªak
;

1120 
	`vmˇ£
(
OP_TESTSET
) {

1121 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1122 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
rb
) : !l_isfalse(rb))

1123 
ci
->
u
.
l
.
ßvedpc
++;

1125 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1126 
	`d⁄extjump
(
ci
);

1128 
vmbªak
;

1130 
	`vmˇ£
(
OP_CALL
) {

1131 
b
 = 
	`GETARG_B
(
i
);

1132 
ƒesu…s
 = 
	`GETARG_C
(
i
) - 1;

1133 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1134 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
ƒesu…s
)) {

1135 i‡(
ƒesu…s
 >= 0)

1136 
L
->
t›
 = 
ci
->top;

1137 
	`PrŸe˘
(()0);

1140 
ci
 = 
L
->ci;

1141 
√w‰ame
;

1143 
vmbªak
;

1145 
	`vmˇ£
(
OP_TAILCALL
) {

1146 
b
 = 
	`GETARG_B
(
i
);

1147 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1148 
	`lua_as£π
(
	`GETARG_C
(
i
Ë- 1 =
LUA_MULTRET
);

1149 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
LUA_MULTRET
)) {

1150 
	`PrŸe˘
(()0);

1154 
CÆlInfo
 *
nci
 = 
L
->
ci
;

1155 
CÆlInfo
 *
oci
 = 
nci
->
¥evious
;

1156 
StkId
 
nfunc
 = 
nci
->
func
;

1157 
StkId
 
ofunc
 = 
oci
->
func
;

1159 
StkId
 
lim
 = 
nci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
nfunc
)->
num∑øms
;

1160 
aux
;

1162 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
oci
->
u
.
l
.
ba£
);

1164 
aux
 = 0; 
nfunc
 +áux < 
lim
;áux++)

1165 
	`£tobjs2s
(
L
, 
ofunc
 + 
aux
, 
nfunc
 +áux);

1166 
oci
->
u
.
l
.
ba£
 = 
ofunc
 + (
nci
->u.l.ba£ - 
nfunc
);

1167 
oci
->
t›
 = 
L
->t› = 
ofunc
 + (L->t› - 
nfunc
);

1168 
oci
->
u
.
l
.
ßvedpc
 = 
nci
->u.l.savedpc;

1169 
oci
->
ˇŒ°©us
 |
CIST_TAIL
;

1170 
ci
 = 
L
->cò
oci
;

1171 
	`lua_as£π
(
L
->
t›
 =
oci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
ofunc
)->
max°acksize
);

1172 
√w‰ame
;

1174 
vmbªak
;

1176 
	`vmˇ£
(
OP_RETURN
) {

1177 
b
 = 
	`GETARG_B
(
i
);

1178 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
ba£
);

1179 
b
 = 
	`luaD_posˇŒ
(
L
, 
ci
, 
ø
, (b !0 ? b - 1 : 
	`ˇ°_öt
(L->
t›
 -Ña)));

1180 i‡(
ci
->
ˇŒ°©us
 & 
CIST_FRESH
)

1183 
ci
 = 
L
->ci;

1184 i‡(
b
Ë
L
->
t›
 = 
ci
->top;

1185 
	`lua_as£π
(
	`isLua
(
ci
));

1186 
	`lua_as£π
(
	`GET_OPCODE
(*((
ci
)->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_CALL
);

1187 
√w‰ame
;

1190 
	`vmˇ£
(
OP_FORLOOP
) {

1191 i‡(
	`âisöãgî
(
ø
)) {

1192 
lua_I¡egî
 
°ï
 = 
	`ivÆue
(
ø
 + 2);

1193 
lua_I¡egî
 
idx
 = 
	`öt›
(+, 
	`ivÆue
(
ø
), 
°ï
);

1194 
lua_I¡egî
 
limô
 = 
	`ivÆue
(
ø
 + 1);

1195 i‡((0 < 
°ï
Ë? (
idx
 <
limô
) : (limit <= idx)) {

1196 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1197 
	`chgivÆue
(
ø
, 
idx
);

1198 
	`£tivÆue
(
ø
 + 3, 
idx
);

1202 
lua_Numbî
 
°ï
 = 
	`ÊtvÆue
(
ø
 + 2);

1203 
lua_Numbî
 
idx
 = 
	`luai_numadd
(
L
, 
	`ÊtvÆue
(
ø
), 
°ï
);

1204 
lua_Numbî
 
limô
 = 
	`ÊtvÆue
(
ø
 + 1);

1205 i‡(
	`luai_num…
(0, 
°ï
Ë? 
	`luai_numÀ
(
idx
, 
limô
)

1206 : 
	`luai_numÀ
(
limô
, 
idx
)) {

1207 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1208 
	`chgÊtvÆue
(
ø
, 
idx
);

1209 
	`£tÊtvÆue
(
ø
 + 3, 
idx
);

1212 
vmbªak
;

1214 
	`vmˇ£
(
OP_FORPREP
) {

1215 
TVÆue
 *
öô
 = 
ø
;

1216 
TVÆue
 *
∂imô
 = 
ø
 + 1;

1217 
TVÆue
 *
p°ï
 = 
ø
 + 2;

1218 
lua_I¡egî
 
ûimô
;

1219 
°›now
;

1220 i‡(
	`âisöãgî
(
öô
Ë&&Åtisöãgî(
p°ï
) &&

1221 
	`f‹limô
(
∂imô
, &
ûimô
, 
	`ivÆue
(
p°ï
), &
°›now
)) {

1223 
lua_I¡egî
 
öôv
 = (
°›now
 ? 0 : 
	`ivÆue
(
öô
));

1224 
	`£tivÆue
(
∂imô
, 
ûimô
);

1225 
	`£tivÆue
(
öô
, 
	`öt›
(-, 
öôv
, 
	`ivÆue
(
p°ï
)));

1228 
lua_Numbî
 
nöô
;Üua_Numbî 
∆imô
;Üua_Numbî 
n°ï
;

1229 i‡(!
	`t⁄umbî
(
∂imô
, &
∆imô
))

1230 
	`luaG_ru√º‹
(
L
, "'for'Üimit must beáÇumber");

1231 
	`£tÊtvÆue
(
∂imô
, 
∆imô
);

1232 i‡(!
	`t⁄umbî
(
p°ï
, &
n°ï
))

1233 
	`luaG_ru√º‹
(
L
, "'for' step must beáÇumber");

1234 
	`£tÊtvÆue
(
p°ï
, 
n°ï
);

1235 i‡(!
	`t⁄umbî
(
öô
, &
nöô
))

1236 
	`luaG_ru√º‹
(
L
, "'for' initial value must beáÇumber");

1237 
	`£tÊtvÆue
(
öô
, 
	`luai_numsub
(
L
, 
nöô
, 
n°ï
));

1239 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1240 
vmbªak
;

1242 
	`vmˇ£
(
OP_TFORCALL
) {

1243 
StkId
 
cb
 = 
ø
 + 3;

1244 
	`£tobjs2s
(
L
, 
cb
+2, 
ø
+2);

1245 
	`£tobjs2s
(
L
, 
cb
+1, 
ø
+1);

1246 
	`£tobjs2s
(
L
, 
cb
, 
ø
);

1247 
L
->
t›
 = 
cb
 + 3;

1248 
	`PrŸe˘
(
	`luaD_ˇŒ
(
L
, 
cb
, 
	`GETARG_C
(
i
)));

1249 
L
->
t›
 = 
ci
->top;

1250 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

1251 
ø
 = 
	`RA
(
i
);

1252 
	`lua_as£π
(
	`GET_OPCODE
(
i
Ë=
OP_TFORLOOP
);

1253 
l_tf‹lo›
;

1255 
	`vmˇ£
(
OP_TFORLOOP
) {

1256 
l_tf‹lo›
:

1257 i‡(!
	`âi¢û
(
ø
 + 1)) {

1258 
	`£tobjs2s
(
L
, 
ø
,Ña + 1);

1259 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1261 
vmbªak
;

1263 
	`vmˇ£
(
OP_SETLIST
) {

1264 
n
 = 
	`GETARG_B
(
i
);

1265 
c
 = 
	`GETARG_C
(
i
);

1266 
œ°
;

1267 
TabÀ
 *
h
;

1268 i‡(
n
 =0Ë¿
	`ˇ°_öt
(
L
->
t›
 - 
ø
) - 1;

1269 i‡(
c
 == 0) {

1270 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

1271 
c
 = 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

1273 
h
 = 
	`hvÆue
(
ø
);

1274 
œ°
 = ((
c
-1)*
LFIELDS_PER_FLUSH
Ë+ 
n
;

1275 i‡(
œ°
 > 
h
->
sizóºay
)

1276 
	`luaH_ªsizóºay
(
L
, 
h
, 
œ°
);

1277 ; 
n
 > 0;Ç--) {

1278 
TVÆue
 *
vÆ
 = 
ø
+
n
;

1279 
	`luaH_£töt
(
L
, 
h
, 
œ°
--, 
vÆ
);

1280 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

1282 
L
->
t›
 = 
ci
->top;

1283 
vmbªak
;

1285 
	`vmˇ£
(
OP_CLOSURE
) {

1286 
PrŸo
 *
p
 = 
˛
->p->p[
	`GETARG_Bx
(
i
)];

1287 
LClosuª
 *
n˛
 = 
	`gëˇched
(
p
, 
˛
->
upvÆs
, 
ba£
);

1288 i‡(
n˛
 =
NULL
)

1289 
	`push˛osuª
(
L
, 
p
, 
˛
->
upvÆs
, 
ba£
, 
ø
);

1291 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

1292 
	`checkGC
(
L
, 
ø
 + 1);

1293 
vmbªak
;

1295 
	`vmˇ£
(
OP_VARARG
) {

1296 
b
 = 
	`GETARG_B
(
i
) - 1;

1297 
j
;

1298 
n
 = 
	`ˇ°_öt
(
ba£
 - 
ci
->
func
Ë- 
˛
->
p
->
num∑øms
 - 1;

1299 i‡(
n
 < 0)

1300 
n
 = 0;

1301 i‡(
b
 < 0) {

1302 
b
 = 
n
;

1303 
	`PrŸe˘
(
	`luaD_check°ack
(
L
, 
n
));

1304 
ø
 = 
	`RA
(
i
);

1305 
L
->
t›
 = 
ø
 + 
n
;

1307 
j
 = 0; j < 
b
 && j < 
n
; j++)

1308 
	`£tobjs2s
(
L
, 
ø
 + 
j
, 
ba£
 - 
n
 + j);

1309 ; 
j
 < 
b
; j++)

1310 
	`£äûvÆue
(
ø
 + 
j
);

1311 
vmbªak
;

1313 
	`vmˇ£
(
OP_EXTRAARG
) {

1314 
	`lua_as£π
(0);

1315 
vmbªak
;

1319 
	}
}

	@lvm.h

7 #i‚de‡
lvm_h


8 
	#lvm_h


	)

11 
	~"ldo.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

16 #i‡!
deföed
(
LUA_NOCVTN2S
)

17 
	#cvt2°r
(
o
Ë
	`âi¢umbî
(o)

	)

19 
	#cvt2°r
(
o
Ë0

	)

23 #i‡!
deföed
(
LUA_NOCVTS2N
)

24 
	#cvt2num
(
o
Ë
	`âis°rög
(o)

	)

26 
	#cvt2num
(
o
Ë0

	)

35 #i‡!
deföed
(
LUA_FLOORN2I
)

36 
	#LUA_FLOORN2I
 0

	)

40 
	#t⁄umbî
(
o
,
n
) \

41 (
	`âisÊﬂt
(
o
Ë? (*(
n
Ë
	`ÊtvÆue
(o), 1Ë: 
	`luaV_t⁄umbî_
(o,n))

	)

43 
	#toöãgî
(
o
,
i
) \

44 (
	`âisöãgî
(
o
Ë? (*(
i
Ë
	`ivÆue
(o), 1Ë: 
	`luaV_toöãgî
(o,i,
LUA_FLOORN2I
))

	)

46 
	#öt›
(
›
,
v1
,
v2
Ë
	`l_ˇ°U2S
(
	`l_ˇ°S2U
(v1Ë›Ü_ˇ°S2U(v2))

	)

48 
	#luaV_øwequÆobj
(
t1
,
t2
Ë
	`luaV_equÆobj
(
NULL
,t1,t2)

	)

58 
	#luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
f
) \

59 (!
	`âi°abÀ
(
t
) \

60 ? (
¶Ÿ
 = 
NULL
, 0) \

61 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

62 !
	`âi¢û
(
¶Ÿ
))Ë

	)

67 
	#luaV_gëèbÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

68 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
, slot); } \

69 
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

80 
	#luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
f
,
v
) \

81 (!
	`âi°abÀ
(
t
) \

82 ? (
¶Ÿ
 = 
NULL
, 0) \

83 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

84 
	`âi¢û
(
¶Ÿ
) ? 0 \

85 : (
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
t
), 
v
), \

86 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *,
¶Ÿ
), 
v
), \

87 1)))

	)

90 
	#luaV_£âabÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

91 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

92 
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

96 
LUAI_FUNC
 
luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
);

97 
LUAI_FUNC
 
luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

98 
LUAI_FUNC
 
luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

99 
LUAI_FUNC
 
luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
);

100 
LUAI_FUNC
 
luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
);

101 
LUAI_FUNC
 
luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

102 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
);

103 
LUAI_FUNC
 
luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

104 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
);

105 
LUAI_FUNC
 
luaV_föishOp
 (
lua_Sèã
 *
L
);

106 
LUAI_FUNC
 
luaV_execuã
 (
lua_Sèã
 *
L
);

107 
LUAI_FUNC
 
luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
);

108 
LUAI_FUNC
 
lua_I¡egî
 
luaV_div
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

109 
LUAI_FUNC
 
lua_I¡egî
 
luaV_mod
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

110 
LUAI_FUNC
 
lua_I¡egî
 
luaV_shi·l
 (lua_I¡egî 
x
,Üua_I¡egî 
y
);

111 
LUAI_FUNC
 
luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
);

	@lzio.c

7 
	#lzio_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"Œimôs.h
"

18 
	~"lmem.h
"

19 
	~"l°©e.h
"

20 
	~"lzio.h
"

23 
	$luaZ_fûl
 (
ZIO
 *
z
) {

24 
size_t
 
size
;

25 
lua_Sèã
 *
L
 = 
z
->L;

26 c⁄° *
buff
;

27 
	`lua_u∆ock
(
L
);

28 
buff
 = 
z
->
	`ªadî
(
L
, z->
d©a
, &
size
);

29 
	`lua_lock
(
L
);

30 i‡(
buff
 =
NULL
 || 
size
 == 0)

31  
EOZ
;

32 
z
->
n
 = 
size
 - 1;

33 
z
->
p
 = 
buff
;

34  
	`ˇ°_uch¨
(*(
z
->
p
++));

35 
	}
}

38 
	$luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
, *
d©a
) {

39 
z
->
L
 = L;

40 
z
->
ªadî
 =Ñeader;

41 
z
->
d©a
 = data;

42 
z
->
n
 = 0;

43 
z
->
p
 = 
NULL
;

44 
	}
}

48 
size_t
 
	$luaZ_ªad
 (
ZIO
 *
z
, *
b
, 
size_t
 
n
) {

49 
n
) {

50 
size_t
 
m
;

51 i‡(
z
->
n
 == 0) {

52 i‡(
	`luaZ_fûl
(
z
Ë=
EOZ
)

53  
n
;

55 
z
->
n
++;

56 
z
->
p
--;

59 
m
 = (
n
 <
z
->n) ?Ç : z->n;

60 
	`mem˝y
(
b
, 
z
->
p
, 
m
);

61 
z
->
n
 -
m
;

62 
z
->
p
 +
m
;

63 
b
 = (*)b + 
m
;

64 
n
 -
m
;

67 
	}
}

	@lzio.h

8 #i‚de‡
lzio_h


9 
	#lzio_h


	)

11 
	~"lua.h
"

13 
	~"lmem.h
"

16 
	#EOZ
 (-1Ë

	)

18 
Zio
 
	tZIO
;

20 
	#zgëc
(
z
Ë(((z)->
n
--)>0 ? 
	`ˇ°_uch¨
(*(z)->
p
++Ë: 
	`luaZ_fûl
(z))

	)

23 
	sMbuf„r
 {

24 *
	mbuf„r
;

25 
size_t
 
	mn
;

26 
size_t
 
	mbuffsize
;

27 } 
	tMbuf„r
;

29 
	#luaZ_öôbuf„r
(
L
, 
buff
Ë((buff)->
buf„r
 = 
NULL
, (buff)->
buffsize
 = 0)

	)

31 
	#luaZ_buf„r
(
buff
Ë((buff)->
buf„r
)

	)

32 
	#luaZ_sizebuf„r
(
buff
Ë((buff)->
buffsize
)

	)

33 
	#luaZ_bufÊí
(
buff
Ë((buff)->
n
)

	)

35 
	#luaZ_buf‰emove
(
buff
,
i
Ë((buff)->
n
 -(i))

	)

36 
	#luaZ_ª£tbuf„r
(
buff
Ë((buff)->
n
 = 0)

	)

39 
	#luaZ_ªsizebuf„r
(
L
, 
buff
, 
size
) \

40 ((
buff
)->
buf„r
 = 
	`luaM_ªÆlocvch¨
(
L
, (buff)->buffer, \

41 (
buff
)->
buffsize
, 
size
), \

42 (
buff
)->
buffsize
 = 
size
)

	)

44 
	#luaZ_‰ìbuf„r
(
L
, 
buff
Ë
	`luaZ_ªsizebuf„r
(L, buff, 0)

	)

47 
LUAI_FUNC
 
luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
,

48 *
d©a
);

49 
LUAI_FUNC
 
size_t
 
luaZ_ªad
 (
ZIO
* 
z
, *
b
, size_à
n
);

55 
	sZio
 {

56 
size_t
 
	mn
;

57 c⁄° *
	mp
;

58 
lua_Ródî
 
	mªadî
;

59 *
	md©a
;

60 
lua_Sèã
 *
	mL
;

64 
LUAI_FUNC
 
luaZ_fûl
 (
ZIO
 *
z
);

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

46 
__BEGIN_NAMESPACE_STD


48 
__jmp_buf_èg
 
	tjmp_buf
[1];

52 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
__END_NAMESPACE_STD


59 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

63 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

67 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

70 
__BEGIN_NAMESPACE_STD


74 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

77 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


83 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

84 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 #ifdef 
__USE_POSIX


92 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

96 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

102 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

103 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

108 #i‡
__USE_FORTIFY_LEVEL
 > 0

109 
	~<bôs/£tjmp2.h
>

112 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

102 #ifde‡
__USE_XOPEN2K8


103 #i‚de‡
__ssize_t_deföed


104 
__ssize_t
 
	tssize_t
;

105 
	#__ssize_t_deföed


	)

110 
__BEGIN_NAMESPACE_STD


111 #i‚de‡
__USE_FILE_OFFSET64


112 
_G_Âos_t
 
	tÂos_t
;

114 
_G_Âos64_t
 
	tÂos_t
;

116 
__END_NAMESPACE_STD


117 #ifde‡
__USE_LARGEFILE64


118 
_G_Âos64_t
 
	tÂos64_t
;

122 
	#_IOFBF
 0

	)

123 
	#_IOLBF
 1

	)

124 
	#_IONBF
 2

	)

128 #i‚de‡
BUFSIZ


129 
	#BUFSIZ
 
_IO_BUFSIZ


	)

135 #i‚de‡
EOF


136 
	#EOF
 (-1)

	)

142 
	#SEEK_SET
 0

	)

143 
	#SEEK_CUR
 1

	)

144 
	#SEEK_END
 2

	)

145 #ifde‡
__USE_GNU


146 
	#SEEK_DATA
 3

	)

147 
	#SEEK_HOLE
 4

	)

151 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


153 
	#P_tmpdú
 "/tmp"

	)

166 
	~<bôs/°dio_lim.h
>

170 
_IO_FILE
 *
°dö
;

171 
_IO_FILE
 *
°dout
;

172 
_IO_FILE
 *
°dîr
;

174 
	#°dö
 
°dö


	)

175 
	#°dout
 
°dout


	)

176 
	#°dîr
 
°dîr


	)

178 
__BEGIN_NAMESPACE_STD


180 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

182 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

183 
__END_NAMESPACE_STD


185 #ifde‡
__USE_ATFILE


187 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

188 c⁄° *
__√w
Ë
__THROW
;

191 
__BEGIN_NAMESPACE_STD


196 #i‚de‡
__USE_FILE_OFFSET64


197 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

199 #ifde‡
__REDIRECT


200 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

202 
	#tmpfûe
 
tmpfûe64


	)

206 #ifde‡
__USE_LARGEFILE64


207 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

211 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

212 
__END_NAMESPACE_STD


214 #ifde‡
__USE_MISC


217 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

221 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


229 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

230 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

234 
__BEGIN_NAMESPACE_STD


239 
	`f˛o£
 (
FILE
 *
__°ªam
);

244 
	`fÊush
 (
FILE
 *
__°ªam
);

245 
__END_NAMESPACE_STD


247 #ifde‡
__USE_MISC


254 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

257 #ifde‡
__USE_GNU


264 
	`f˛o£Æl
 ();

268 
__BEGIN_NAMESPACE_STD


269 #i‚de‡
__USE_FILE_OFFSET64


274 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

275 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

280 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

281 c⁄° *
__ª°ri˘
 
__modes
,

282 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

284 #ifde‡
__REDIRECT


285 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

286 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

287 
__wur
;

288 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

289 c⁄° *
__ª°ri˘
 
__modes
,

290 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

291 
__wur
;

293 
	#f›í
 
f›í64


	)

294 
	#‰e›í
 
‰e›í64


	)

297 
__END_NAMESPACE_STD


298 #ifde‡
__USE_LARGEFILE64


299 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

301 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

302 c⁄° *
__ª°ri˘
 
__modes
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

306 #ifdef 
__USE_POSIX


308 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

311 #ifdef 
__USE_GNU


314 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

315 c⁄° *
__ª°ri˘
 
__modes
,

316 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

319 #ifde‡
__USE_XOPEN2K8


321 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

322 
__THROW
 
__wur
;

327 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

331 
__BEGIN_NAMESPACE_STD


334 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

338 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

339 
__modes
, 
size_t
 
__n
Ë
__THROW
;

340 
__END_NAMESPACE_STD


342 #ifdef 
__USE_MISC


345 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

346 
size_t
 
__size
Ë
__THROW
;

349 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

353 
__BEGIN_NAMESPACE_STD


358 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

366 
	$•rötf
 (*
__ª°ri˘
 
__s
,

367 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

373 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

374 
_G_va_li°
 
__¨g
);

379 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

381 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

382 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

383 
__END_NAMESPACE_STD


385 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


386 
__BEGIN_NAMESPACE_C99


388 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

389 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

390 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

392 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

393 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

394 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

395 
__END_NAMESPACE_C99


398 #ifde‡
__USE_GNU


401 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

402 
_G_va_li°
 
__¨g
)

403 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

404 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

405 c⁄° *
__ª°ri˘
 
__fmt
, ...)

406 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

408 c⁄° *
__ª°ri˘
 
__fmt
, ...)

409 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

412 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

436 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

451 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

458 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

486 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (c⁄° *
__ª°ri˘
 
__s
,

506 c⁄° *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

516 c⁄° *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #ifde‡
__USE_POSIX199506


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #ifde‡
__USE_POSIX199506


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

627 #i‡!
deföed
 
__USE_ISOC11
 \

628 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

640 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

642 
__END_NAMESPACE_STD


644 #ifde‡
__USE_GNU


651 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

652 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

656 #ifdef 
__USE_XOPEN2K8


667 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

668 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

669 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

670 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

671 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

672 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

680 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

681 
size_t
 *
__ª°ri˘
 
__n
,

682 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

686 
__BEGIN_NAMESPACE_STD


691 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

697 
	`puts
 (c⁄° *
__s
);

704 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

711 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

712 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

717 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

718 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

719 
__END_NAMESPACE_STD


721 #ifde‡
__USE_GNU


728 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

729 
FILE
 *
__ª°ri˘
 
__°ªam
);

732 #ifde‡
__USE_MISC


739 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

741 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

742 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

746 
__BEGIN_NAMESPACE_STD


751 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

756 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

761 
	`ªwöd
 (
FILE
 *
__°ªam
);

762 
__END_NAMESPACE_STD


769 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


770 #i‚de‡
__USE_FILE_OFFSET64


775 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

780 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

782 #ifde‡
__REDIRECT


783 
	`__REDIRECT
 (
f£eko
,

784 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

785 
f£eko64
);

786 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

788 
	#f£eko
 
f£eko64


	)

789 
	#·ñlo
 
·ñlo64


	)

794 
__BEGIN_NAMESPACE_STD


795 #i‚de‡
__USE_FILE_OFFSET64


800 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

805 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

807 #ifde‡
__REDIRECT


808 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

809 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

810 
	`__REDIRECT
 (
f£ços
,

811 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

813 
	#fgëpos
 
fgëpos64


	)

814 
	#f£ços
 
f£ços64


	)

817 
__END_NAMESPACE_STD


819 #ifde‡
__USE_LARGEFILE64


820 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

821 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

822 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

823 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

826 
__BEGIN_NAMESPACE_STD


828 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

830 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

833 
__END_NAMESPACE_STD


835 #ifde‡
__USE_MISC


837 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

838 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

839 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

843 
__BEGIN_NAMESPACE_STD


848 
	`≥º‹
 (c⁄° *
__s
);

849 
__END_NAMESPACE_STD


855 
	~<bôs/sys_îæi°.h
>

858 #ifdef 
__USE_POSIX


860 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

863 #ifde‡
__USE_MISC


865 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

869 #ifde‡
__USE_POSIX2


874 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

880 
	`p˛o£
 (
FILE
 *
__°ªam
);

884 #ifdef 
__USE_POSIX


886 *
	$˘îmid
 (*
__s
Ë
__THROW
;

890 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


892 *
	`cu£rid
 (*
__s
);

896 #ifdef 
__USE_GNU


897 
ob°ack
;

900 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

901 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

903 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

904 c⁄° *
__ª°ri˘
 
__f‹m©
,

905 
_G_va_li°
 
__¨gs
)

906 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

910 #ifde‡
__USE_POSIX199506


914 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

921 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

924 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


928 
	#__√ed_gë›t


	)

929 
	~<gë›t.h
>

934 #ifde‡
__USE_EXTERN_INLINES


935 
	~<bôs/°dio.h
>

937 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


938 
	~<bôs/°dio2.h
>

940 #ifde‡
__LDBL_COMPAT


941 
	~<bôs/°dio-ldbl.h
>

944 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

45 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

46 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

47 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

48 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

49 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

50 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

51 #ifde‡
__WIFCONTINUED


52 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
__BEGIN_NAMESPACE_STD


60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

73 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__BEGIN_NAMESPACE_C99


78 
__exãnsi⁄__
 struct

80 
	mquŸ
;

81 
	mªm
;

82 } 
	tŒdiv_t
;

83 
	#__Œdiv_t_deföed
 1

	)

84 
	g__END_NAMESPACE_C99


89 
	#RAND_MAX
 2147483647

	)

94 
	#EXIT_FAILURE
 1

	)

95 
	#EXIT_SUCCESS
 0

	)

99 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

100 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

103 
__BEGIN_NAMESPACE_STD


105 
	$©of
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©oi
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 
	$©ﬁ
 (c⁄° *
__≈å
)

112 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_ISOC99


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

119 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

120 
__END_NAMESPACE_C99


123 
__BEGIN_NAMESPACE_STD


125 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

126 **
__ª°ri˘
 
__íd±r
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1));

128 
__END_NAMESPACE_STD


130 #ifdef 
__USE_ISOC99


131 
__BEGIN_NAMESPACE_C99


133 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

134 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

136 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

137 **
__ª°ri˘
 
__íd±r
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 
__END_NAMESPACE_C99


142 
__BEGIN_NAMESPACE_STD


144 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

145 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

148 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

149 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 
__END_NAMESPACE_STD


153 #ifde‡
__USE_MISC


155 
__exãnsi⁄__


156 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

157 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

158 
__THROW
 
	`__n⁄nuŒ
 ((1));

160 
__exãnsi⁄__


161 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

162 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__exãnsi⁄__


170 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

174 
__exãnsi⁄__


175 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


182 #ifde‡
__USE_GNU


196 
	~<xloˇÀ.h
>

200 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

202 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

204 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

205 **
__ª°ri˘
 
__íd±r
,

206 
__ba£
, 
__loˇÀ_t
 
__loc
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

209 
__exãnsi⁄__


210 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

212 
__loˇÀ_t
 
__loc
)

213 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

215 
__exãnsi⁄__


216 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

217 **
__ª°ri˘
 
__íd±r
,

218 
__ba£
, 
__loˇÀ_t
 
__loc
)

219 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

221 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

222 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

223 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

225 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

226 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

227 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

229 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

230 **
__ª°ri˘
 
__íd±r
,

231 
__loˇÀ_t
 
__loc
)

232 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

236 #ifde‡
__USE_EXTERN_INLINES


237 
__BEGIN_NAMESPACE_STD


238 
__exã∫_ölöe
 

239 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

241  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

242 
	}
}

243 
__exã∫_ölöe
 

244 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

246  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

247 
	}
}

248 
	g__END_NAMESPACE_STD


250 #ifde‡
__USE_ISOC99


251 
__BEGIN_NAMESPACE_C99


252 
__exãnsi⁄__
 
__exã∫_ölöe
 

253 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

255  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

256 
	}
}

257 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


266 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

269 
	$a64l
 (c⁄° *
__s
)

270 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

274 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


275 
	~<sys/ty≥s.h
>

282 
	$øndom
 (Ë
__THROW
;

285 
	$§™dom
 (
__£ed
Ë
__THROW
;

291 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

292 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

296 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 #ifde‡
__USE_MISC


304 
	søndom_d©a


306 
öt32_t
 *
Âå
;

307 
öt32_t
 *
Ωå
;

308 
öt32_t
 *
°©e
;

309 
ønd_ty≥
;

310 
ønd_deg
;

311 
ønd_£p
;

312 
öt32_t
 *
íd_±r
;

315 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

316 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

319 
__THROW
 
	`__n⁄nuŒ
 ((2));

321 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

322 
size_t
 
__°©ñí
,

323 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

324 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

326 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

327 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

333 
__BEGIN_NAMESPACE_STD


335 
	$ønd
 (Ë
__THROW
;

337 
	$§™d
 (
__£ed
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifde‡
__USE_POSIX199506


342 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

346 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


350 
	$dønd48
 (Ë
__THROW
;

351 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$Ã™d48
 (Ë
__THROW
;

355 
	$ƒ™d48
 (
__xsubi
[3])

356 
__THROW
 
	`__n⁄nuŒ
 ((1));

359 
	$mønd48
 (Ë
__THROW
;

360 
	$jønd48
 (
__xsubi
[3])

361 
__THROW
 
	`__n⁄nuŒ
 ((1));

364 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

365 *
	$£ed48
 (
__£ed16v
[3])

366 
__THROW
 
	`__n⁄nuŒ
 ((1));

367 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

369 #ifde‡
__USE_MISC


373 
	sdønd48_d©a


375 
__x
[3];

376 
__ﬁd_x
[3];

377 
__c
;

378 
__öô
;

379 
__exãnsi⁄__
 
__a
;

384 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

385 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$î™d48_r
 (
__xsubi
[3],

387 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

388 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

392 *
__ª°ri˘
 
__ªsu…
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

394 
	$ƒ™d48_r
 (
__xsubi
[3],

395 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

396 *
__ª°ri˘
 
__ªsu…
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

401 *
__ª°ri˘
 
__ªsu…
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

403 
	$jønd48_r
 (
__xsubi
[3],

404 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

405 *
__ª°ri˘
 
__ªsu…
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

409 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

410 
__THROW
 
	`__n⁄nuŒ
 ((2));

412 
	$£ed48_r
 (
__£ed16v
[3],

413 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

415 
	$lc⁄g48_r
 (
__∑øm
[7],

416 
dønd48_d©a
 *
__buf„r
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

423 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


424 
	#__mÆloc_™d_ˇŒoc_deföed


	)

425 
__BEGIN_NAMESPACE_STD


427 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

429 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

430 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

431 
__END_NAMESPACE_STD


434 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


435 
__BEGIN_NAMESPACE_STD


441 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

442 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

444 
	$‰ì
 (*
__±r
Ë
__THROW
;

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_MISC


449 
	$c‰ì
 (*
__±r
Ë
__THROW
;

452 #ifde‡
__USE_MISC


453 
	~<Æloˇ.h
>

456 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

457 || 
deföed
 
__USE_MISC


459 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

462 #ifde‡
__USE_XOPEN2K


464 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

465 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

468 #ifde‡
__USE_ISOC11


470 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

471 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

474 
__BEGIN_NAMESPACE_STD


476 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

480 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

482 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


484 #ifde‡
__˝lu•lus


485 "C++" 
	$©_quick_exô
 ((*
__func
) ())

486 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

488 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

491 
__END_NAMESPACE_STD


493 #ifdef 
__USE_MISC


496 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

497 
__THROW
 
	`__n⁄nuŒ
 ((1));

500 
__BEGIN_NAMESPACE_STD


504 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

506 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


510 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

512 
__END_NAMESPACE_STD


514 #ifde‡
__USE_ISOC99


515 
__BEGIN_NAMESPACE_C99


518 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
__END_NAMESPACE_C99


523 
__BEGIN_NAMESPACE_STD


525 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

526 
__END_NAMESPACE_STD


528 #ifde‡
__USE_GNU


531 *
	$£cuª_gëív
 (c⁄° *
__«me
)

532 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

535 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


539 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

542 #ifde‡
__USE_XOPEN2K


545 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

546 
__THROW
 
	`__n⁄nuŒ
 ((2));

549 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

552 #ifdef 
__USE_MISC


556 
	$˛óªnv
 (Ë
__THROW
;

560 #i‡
deföed
 
__USE_MISC
 \

561 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

567 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

570 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


579 #i‚de‡
__USE_FILE_OFFSET64


580 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

582 #ifde‡
__REDIRECT


583 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

584 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

586 
	#mk°emp
 
mk°emp64


	)

589 #ifde‡
__USE_LARGEFILE64


590 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

594 #ifde‡
__USE_MISC


601 #i‚de‡
__USE_FILE_OFFSET64


602 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

604 #ifde‡
__REDIRECT


605 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

606 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 
	#mk°emps
 
mk°emps64


	)

611 #ifde‡
__USE_LARGEFILE64


612 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

613 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_XOPEN2K8


623 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 #ifde‡
__USE_GNU


633 #i‚de‡
__USE_FILE_OFFSET64


634 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__REDIRECT


637 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

638 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
	#mko°emp
 
mko°emp64


	)

643 #ifde‡
__USE_LARGEFILE64


644 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

653 #i‚de‡
__USE_FILE_OFFSET64


654 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

655 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #ifde‡
__REDIRECT


658 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

659 
__Êags
), 
mko°emps64
)

660 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

662 
	#mko°emps
 
mko°emps64


	)

665 #ifde‡
__USE_LARGEFILE64


666 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

667 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

672 
__BEGIN_NAMESPACE_STD


677 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

678 
__END_NAMESPACE_STD


681 #ifdef 
__USE_GNU


684 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

685 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


694 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

695 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

700 #i‚de‡
__COMPAR_FN_T


701 
	#__COMPAR_FN_T


	)

702 (*
	t__com∑r_‚_t
) (const *, const *);

704 #ifdef 
__USE_GNU


705 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

708 #ifde‡
__USE_GNU


709 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

712 
__BEGIN_NAMESPACE_STD


715 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

716 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

717 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

719 #ifde‡
__USE_EXTERN_INLINES


720 
	~<bôs/°dlib-b£¨ch.h
>

725 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

726 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

727 #ifde‡
__USE_GNU


728 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

729 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

730 
	`__n⁄nuŒ
 ((1, 4));

735 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

736 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

737 
__END_NAMESPACE_STD


739 #ifde‡
__USE_ISOC99


740 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

741 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

745 
__BEGIN_NAMESPACE_STD


749 
div_t
 
	$div
 (
__numî
, 
__díom
)

750 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

751 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

752 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

753 
__END_NAMESPACE_STD


755 #ifde‡
__USE_ISOC99


756 
__BEGIN_NAMESPACE_C99


757 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

758 
__díom
)

759 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

760 
__END_NAMESPACE_C99


764 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

765 || 
deföed
 
__USE_MISC


772 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

773 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

778 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

779 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

784 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

785 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

788 #ifde‡
__USE_MISC


790 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

791 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

792 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

793 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

794 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

795 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

796 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

797 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

802 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

804 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

805 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

806 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

807 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

809 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

810 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

811 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

812 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

813 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

814 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

815 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

816 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

820 
__BEGIN_NAMESPACE_STD


823 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

826 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

827 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

830 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

834 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

835 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

837 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

838 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

839 
__THROW
;

840 
__END_NAMESPACE_STD


843 #ifde‡
__USE_MISC


848 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

852 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


859 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

860 *c⁄° *
__ª°ri˘
 
__tokís
,

861 **
__ª°ri˘
 
__vÆuï
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

866 #ifde‡
__USE_XOPEN


868 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #ifde‡
__USE_XOPEN2KXSI


876 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

879 #ifde‡
__USE_XOPEN_EXTENDED


884 
	$gø¡±
 (
__fd
Ë
__THROW
;

888 
	$u∆ock±
 (
__fd
Ë
__THROW
;

893 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

896 #ifde‡
__USE_GNU


900 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

901 
__THROW
 
	`__n⁄nuŒ
 ((2));

904 
	`gë±
 ();

907 #ifde‡
__USE_MISC


911 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

915 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


918 
	$ây¶Ÿ
 (Ë
__THROW
;

921 
	~<bôs/°dlib-Êﬂt.h
>

924 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


925 
	~<bôs/°dlib.h
>

927 #ifde‡
__LDBL_COMPAT


928 
	~<bôs/°dlib-ldbl.h
>

932 #unde‡
__√ed_mÆloc_™d_ˇŒoc


934 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
	`__GNUC_PREREQ
 (3,4)

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

644 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
__exã∫_Æways_ölöe
 *

647 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

648 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

650  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

651 
	}
}

656 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/wait.h

22 #i‚def 
_SYS_WAIT_H


23 
	#_SYS_WAIT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<sig«l.h
>

32 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

35 
	~<bôs/waôÊags.h
>

38 
	~<bôs/waô°©us.h
>

40 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

41 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

42 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

43 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

44 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

45 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

46 #ifde‡
__WIFCONTINUED


47 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

51 #ifdef 
__USE_MISC


52 
	#WCOREFLAG
 
__WCOREFLAG


	)

53 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (°©us)

	)

54 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

55 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

63 
__pid_t
 
waô
 (*
__°©_loc
);

65 #ifdef 
__USE_MISC


67 
	#WAIT_ANY
 (-1Ë

	)

68 
	#WAIT_MYPGRP
 0

	)

86 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

88 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


89 #i‚de‡
__id_t_deföed


90 
	~<bôs/ty≥s.h
>

91 
__id_t
 
	tid_t
;

92 
	#__id_t_deföed


	)

95 
	#__√ed_sigöfo_t


	)

96 
	~<bôs/sigöfo.h
>

109 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

110 
__›ti⁄s
);

113 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


116 
	grußge
;

123 
__pid_t
 
	$waô3
 (*
__°©_loc
, 
__›ti⁄s
,

124 
rußge
 * 
__ußge
Ë
__THROWNL
;

127 #ifde‡
__USE_MISC


129 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, *
__°©_loc
, 
__›ti⁄s
,

130 
rußge
 *
__ußge
Ë
__THROWNL
;

134 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #ifde‡
__USE_MISC


787 
	$ây¶Ÿ
 (Ë
__THROW
;

792 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

795 #ifde‡
__USE_ATFILE


798 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

799 c⁄° *
__to
, 
__Êags
)

800 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

803 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


805 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

811 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

812 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


818 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

822 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

823 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

824 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

828 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_ATFILE


832 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

833 
__THROW
 
	`__n⁄nuŒ
 ((2));

837 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

844 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

851 *
	`gëlogö
 ();

852 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


859 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

862 #ifdef 
__USE_MISC


864 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

868 #ifdef 
__USE_POSIX2


872 
	#__√ed_gë›t


	)

873 
	~<gë›t.h
>

877 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


881 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #i‡
deföed
 
__USE_MISC


888 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

893 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

899 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

901 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

908 
	$vh™gup
 (Ë
__THROW
;

911 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

919 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

920 
size_t
 
__off£t
, 
__sˇÀ
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1));

927 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

931 *
	$gëu£rshñl
 (Ë
__THROW
;

932 
	$ídu£rshñl
 (Ë
__THROW
;

933 
	$£tu£rshñl
 (Ë
__THROW
;

939 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

943 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

946 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

958 
	`fsync
 (
__fd
);

961 #ifde‡
__USE_GNU


964 
	$syncfs
 (
__fd
Ë
__THROW
;

968 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


971 
	`gëho°id
 ();

974 
	$sync
 (Ë
__THROW
;

977 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


980 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

985 
	$gëdèbÀsize
 (Ë
__THROW
;

991 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


994 #i‚de‡
__USE_FILE_OFFSET64


995 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

996 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

998 #ifde‡
__REDIRECT_NTH


999 
	`__REDIRECT_NTH
 (
åunˇã
,

1000 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1001 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1003 
	#åunˇã
 
åunˇã64


	)

1006 #ifde‡
__USE_LARGEFILE64


1007 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1013 #i‡
deföed
 
__USE_POSIX199309
 \

1014 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1020 #ifde‡
__REDIRECT_NTH


1021 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1022 
·runˇã64
Ë
__wur
;

1024 
	#·runˇã
 
·runˇã64


	)

1027 #ifde‡
__USE_LARGEFILE64


1028 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1034 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1035 || 
deföed
 
__USE_MISC


1039 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1045 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1049 #ifde‡
__USE_MISC


1060 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1065 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1077 
	#F_ULOCK
 0

	)

1078 
	#F_LOCK
 1

	)

1079 
	#F_TLOCK
 2

	)

1080 
	#F_TEST
 3

	)

1082 #i‚de‡
__USE_FILE_OFFSET64


1083 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1085 #ifde‡
__REDIRECT


1086 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1087 
lockf64
Ë
__wur
;

1089 
	#lockf
 
lockf64


	)

1092 #ifde‡
__USE_LARGEFILE64


1093 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1098 #ifde‡
__USE_GNU


1103 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1104 (
__exãnsi⁄__
 \

1105 ({ 
__ªsu…
; \

1106 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1107 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1108 
__ªsu…
; 
	}
}))

	)

1111 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1114 
fd©async
 (
__fûdes
);

1120 #ifdef 
__USE_XOPEN


1122 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1127 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1128 
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1148 *
	`cu£rid
 (*
__s
);

1154 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1155 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1156 (*
__∑ª¡
) (),

1157 (*
__chûd
Ë()Ë
__THROW
;

1162 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1163 
	~<bôs/uni°d.h
>

1166 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/locale.h

19 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


23 #i‚de‡
_BITS_LOCALE_H


24 
	#_BITS_LOCALE_H
 1

	)

26 
	#__LC_CTYPE
 0

	)

27 
	#__LC_NUMERIC
 1

	)

28 
	#__LC_TIME
 2

	)

29 
	#__LC_COLLATE
 3

	)

30 
	#__LC_MONETARY
 4

	)

31 
	#__LC_MESSAGES
 5

	)

32 
	#__LC_ALL
 6

	)

33 
	#__LC_PAPER
 7

	)

34 
	#__LC_NAME
 8

	)

35 
	#__LC_ADDRESS
 9

	)

36 
	#__LC_TELEPHONE
 10

	)

37 
	#__LC_MEASUREMENT
 11

	)

38 
	#__LC_IDENTIFICATION
 12

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 #ifde‡
__USE_ISOC99


26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 #ifde‡
__NO_LONG_DOUBLE_MATH


29 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

31 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

36 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


38 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

40 #ifde‡
__USE_ISOC99


41 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

42 #ifde‡
__MATH_DECLARE_LDOUBLE


43 #ifde‡
__NO_LONG_DOUBLE_MATH


44 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

46 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

52 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

53 #ifde‡
__USE_ISOC99


54 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

55 #ifde‡
__MATH_DECLARE_LDOUBLE


56 #ifde‡
__NO_LONG_DOUBLE_MATH


57 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

59 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

65 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

66 #ifde‡
__USE_ISOC99


67 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

68 #ifde‡
__MATH_DECLARE_LDOUBLE


69 #ifde‡
__NO_LONG_DOUBLE_MATH


70 
__REDIRECT_NTH
 (
©™2l
, (, ),

71 
__©™2_föôe
);

73 
__REDIRECT_NTH
 (
©™2l
, (, ),

74 
__©™2l_föôe
);

79 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


81 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

83 #ifde‡
__USE_ISOC99


84 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

85 #ifde‡
__MATH_DECLARE_LDOUBLE


86 #ifde‡
__NO_LONG_DOUBLE_MATH


87 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

89 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

95 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

96 #ifde‡
__USE_ISOC99


97 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

102 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

108 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

109 #ifde‡
__USE_ISOC99


110 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

111 #ifde‡
__MATH_DECLARE_LDOUBLE


112 #ifde‡
__NO_LONG_DOUBLE_MATH


113 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

115 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

120 #ifde‡
__USE_GNU


122 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

123 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

124 #ifde‡
__MATH_DECLARE_LDOUBLE


125 #ifde‡
__NO_LONG_DOUBLE_MATH


126 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

128 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

133 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

134 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

135 #ifde‡
__MATH_DECLARE_LDOUBLE


136 #ifde‡
__NO_LONG_DOUBLE_MATH


137 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

139 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

144 #ifde‡
__USE_ISOC99


146 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

147 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

148 #ifde‡
__MATH_DECLARE_LDOUBLE


149 #ifde‡
__NO_LONG_DOUBLE_MATH


150 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

152 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

158 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

159 #ifde‡
__USE_ISOC99


160 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

161 #ifde‡
__MATH_DECLARE_LDOUBLE


162 #ifde‡
__NO_LONG_DOUBLE_MATH


163 
__REDIRECT_NTH
 (
fmodl
, (, ),

164 
__fmod_föôe
);

166 
__REDIRECT_NTH
 (
fmodl
, (, ),

167 
__fmodl_föôe
);

172 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


174 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

176 #ifde‡
__USE_ISOC99


177 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

178 #ifde‡
__MATH_DECLARE_LDOUBLE


179 #ifde‡
__NO_LONG_DOUBLE_MATH


180 
__REDIRECT_NTH
 (
hypŸl
, (, ),

181 
__hypŸ_föôe
);

183 
__REDIRECT_NTH
 (
hypŸl
, (, ),

184 
__hypŸl_föôe
);

189 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


191 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

193 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


194 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 #ifde‡
__NO_LONG_DOUBLE_MATH


197 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

199 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

204 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


206 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

208 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


209 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

210 #ifde‡
__MATH_DECLARE_LDOUBLE


211 #ifde‡
__NO_LONG_DOUBLE_MATH


212 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

214 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


221 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

223 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


224 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

225 #ifde‡
__MATH_DECLARE_LDOUBLE


226 #ifde‡
__NO_LONG_DOUBLE_MATH


227 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

229 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

238 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


239 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

240 #ifde‡
__MATH_DECLARE_LDOUBLE


241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

244 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


251 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

253 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


254 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

255 #ifde‡
__MATH_DECLARE_LDOUBLE


256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

259 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

268 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


269 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

270 #ifde‡
__MATH_DECLARE_LDOUBLE


271 #ifde‡
__NO_LONG_DOUBLE_MATH


272 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

274 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

279 #ifde‡
__USE_MISC


281 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

282 #ifde‡
__USE_ISOC99


283 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 #ifde‡
__NO_LONG_DOUBLE_MATH


286 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

287 
__lgamma_r_föôe
);

289 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

290 
__lgammÆ_r_föôe
);

296 
__lgamma_r_föôe
 (, *);

297 
__lgammaf_r_föôe
 (, *);

298 #ifde‡
__NO_LONG_DOUBLE_MATH


299 
__REDIRECT_NTH
 (
__lgammÆ_r_föôe
, (, *),

300 
__lgamma_r_föôe
);

302 
__lgammÆ_r_föôe
 (, *);

305 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

306 && 
deföed
 
	g__exã∫_Æways_ölöe
)

308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

310 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


311  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

313 
__loˇl_signgam
 = 0;

314  
	`__lgamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

316 
	}
}

318 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


319 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

321 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


322  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

324 
__loˇl_signgam
 = 0;

325  
	`__lgammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

327 
	}
}

328 #ifde‡
__MATH_DECLARE_LDOUBLE


329 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


332  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

334 
__loˇl_signgam
 = 0;

335  
	`__lgammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

337 
	}
}

341 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

342 && 
deföed
 
	g__exã∫_Æways_ölöe
)

344 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

346  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

347 
	}
}

348 #ifde‡
__USE_ISOC99


349 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

351  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

352 
	}
}

353 #ifde‡
__MATH_DECLARE_LDOUBLE


354 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

356  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

357 
	}
}

363 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

364 #ifde‡
__USE_ISOC99


365 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

366 #ifde‡
__MATH_DECLARE_LDOUBLE


367 #ifde‡
__NO_LONG_DOUBLE_MATH


368 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

370 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

376 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

377 #ifde‡
__USE_ISOC99


378 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

379 #ifde‡
__MATH_DECLARE_LDOUBLE


380 #ifde‡
__NO_LONG_DOUBLE_MATH


381 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

383 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

388 #ifde‡
__USE_ISOC99


390 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

391 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

396 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

402 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

403 #ifde‡
__USE_ISOC99


404 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

405 #ifde‡
__MATH_DECLARE_LDOUBLE


406 #ifde‡
__NO_LONG_DOUBLE_MATH


407 
__REDIRECT_NTH
 (
powl
, (, ),

408 
__pow_föôe
);

410 
__REDIRECT_NTH
 (
powl
, (, ),

411 
__powl_föôe
);

416 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


418 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

420 #ifde‡
__USE_ISOC99


421 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

422 #ifde‡
__MATH_DECLARE_LDOUBLE


423 #ifde‡
__NO_LONG_DOUBLE_MATH


424 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

425 
__ªmaödî_föôe
);

427 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

428 
__ªmaödîl_föôe
);

433 #i‡(
deföed
 
__USE_MISC
 \

434 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))

436 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

438 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


439 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

440 #ifde‡
__MATH_DECLARE_LDOUBLE


441 #ifde‡
__NO_LONG_DOUBLE_MATH


442 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

443 
__sˇlb_föôe
);

445 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

446 
__sˇlbl_föôe
);

452 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

453 #ifde‡
__USE_ISOC99


454 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

455 #ifde‡
__MATH_DECLARE_LDOUBLE


456 #ifde‡
__NO_LONG_DOUBLE_MATH


457 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

459 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

465 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

466 #ifde‡
__USE_ISOC99


467 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

468 #ifde‡
__MATH_DECLARE_LDOUBLE


469 #ifde‡
__NO_LONG_DOUBLE_MATH


470 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

472 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

477 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


479 
__gamma_r_föôe
 (, *);

480 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

482 
__loˇl_signgam
 = 0;

483 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

484  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

485 
	}
}

486 
__gammaf_r_föôe
 (, *);

487 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

489 
__loˇl_signgam
 = 0;

490 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

491  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

492 
	}
}

493 #ifde‡
__MATH_DECLARE_LDOUBLE


494 
__gammÆ_r_föôe
 (, *);

495 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

497 
__loˇl_signgam
 = 0;

498 #ifde‡
__NO_LONG_DOUBLE_MATH


499 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

501 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

503  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

504 
	}
}

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL_VEC
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


199 #i‡(!
deföed
 
__˝lu•lus
 \

200 || 
	g__˝lu•lus
 < 201103L \

201 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

204 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

211 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

215 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

218 #ifde‡
__USE_ISOC99


219 
__BEGIN_NAMESPACE_C99


221 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

222 
	g__END_NAMESPACE_C99


225 #ifde‡
__USE_ISOC99


226 
__BEGIN_NAMESPACE_C99


228 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

229 
	g__END_NAMESPACE_C99


234 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

236 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

237 #i‡(!
deföed
 
__˝lu•lus
 \

238 || 
	g__˝lu•lus
 < 201103L \

239 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

241 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

245 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

247 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

248 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

249 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

250 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

256 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

260 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

261 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

262 
	g__END_NAMESPACE_C99


265 #ifde‡
__USE_ISOC99


266 
__BEGIN_NAMESPACE_C99


268 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

269 
	g__END_NAMESPACE_C99


272 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

274 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

277 #ifde‡
__USE_MISC


281 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

285 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


286 
__BEGIN_NAMESPACE_C99


289 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

292 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

293 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


294 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

297 #ifde‡
__USE_GNU


299 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

301 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

305 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

307 #ifde‡
__USE_ISOC99


309 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

313 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

316 #ifde‡
__USE_ISOC99


318 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

322 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

330 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

335 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

342 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

343 
__exãnsi⁄__


344 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

348 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

349 
__exãnsi⁄__


350 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

354 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

357 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

360 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

364 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

365 
__©åibuã__
 ((
__c⁄°__
));

368 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

369 
__©åibuã__
 ((
__c⁄°__
));

373 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

376 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


377 
	g__END_NAMESPACE_C99


380 #ifde‡
__USE_GNU


382 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

383 
__©åibuã__
 ((
__c⁄°__
));

386 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

387 && 
	g__MATH_DECLARING_DOUBLE
 \

388 && !
deföed
 
	g__USE_XOPEN2K8
)

390 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #ifde‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #ifde‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #ifde‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


390 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


391 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

392 && 
deföed
 
	g__OPTIMIZE__
)

396 #unde‡
m©h_îrh™dlög


405 #ifde‡
__USE_ISOC99


406 
	#__ölöe_m©h›
(
func
, 
›
) \

407 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

408 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

409 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›NP
(
func
, 
›
) \

411 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

412 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

415 
	#__ölöe_m©h›
(
func
, 
›
) \

416 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

417 
	#__ölöe_m©h›NP
(
func
, 
›
) \

418 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

421 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

422 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

423 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

424 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

427 #ifde‡
__USE_ISOC99


428 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

429 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

434 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

437 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

438 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

439 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

440 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

443 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

444 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

445 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

447 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

448 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

450 
Êﬂt_ty≥
 
__ªsu…
; \

451 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

452  
__ªsu…
; \

453 }

	)

456 #ifde‡
__USE_ISOC99


457 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

460 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

461 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

462 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

463 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

464 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

465 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

469 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

470 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

471 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

472 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

473 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

478 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

479 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

480 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

482 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

483 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

484 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

485 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

486 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

487 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

488 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

489 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

490 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

491 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

492 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

493 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

496 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

497 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

498 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

500 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

501 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

503 
code
; \

504 }

	)

507 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

508 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

509 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

511 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

512 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

514 
code
; \

515 }

	)

517 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

518 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

519 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

521 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

522 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

523 
Êﬂt_ty≥
 
¨g3
)) \

525 
code
; \

526 }

	)

530 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


534 #ifde‡
__FAST_MATH__


535 #ifde‡
__USE_GNU


536 
	#__söcos_code
 \

537 
__co§
; \

538 
__sör
; \

539 
__swtmp
; \

540 
__asm
 
__vﬁ©ûe__
 \

555 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

556 *
__söx
 = 
__sör
; \

557 *
__cosx
 = 
__co§


	)

559 
__MATH_INLINE
 

560 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

562 
__söcos_code
;

563 
	}
}

565 
__MATH_INLINE
 

566 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

568 
__söcos_code
;

569 
	}
}

571 
__MATH_INLINE
 

572 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

574 
__söcos_code
;

575 
	}
}

582 #i‡
__GNUC_PREREQ
 (3, 5)

583 
	#__expm1_code
 \

584 
__ãmp
; \

585 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

586  
__ãmp
 ? __ãm∞: 
__x


	)

588 
	#__expm1_code
 \

589 
__vÆue
; \

590 
__exp⁄ít
; \

591 
__ãmp
; \

592 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

602 
__asm
 
__vﬁ©ûe__
 \

604 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

605 
__ãmp
 -= 1.0; \

606 
__ãmp
 +
__vÆue
; \

607  
__ãmp
 ? __ãm∞: 
__x


	)

609 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

611 #i‡
	`__GNUC_PREREQ
 (3, 4)

612 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

614 
	#__exp_code
 \

615 
__vÆue
; \

616 
__exp⁄ít
; \

617 
__asm
 
__vﬁ©ûe__
 \

625 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

626 
__vÆue
 += 1.0; \

627 
__asm
 
__vﬁ©ûe__
 \

629 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

630  
__vÆue


	)

631 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

632 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

636 #i‡!
	`__GNUC_PREREQ
 (3, 5)

637 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

638 
__vÆue
; \

639 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

640 
__asm
 
__vﬁ©ûe__
 \

642 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

643  
__vÆue
)

648 #i‡
	`__GNUC_PREREQ
 (3, 4)

649 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

650  
	$__buûtö_©™2l
 (
__y
, 
__x
))

652 
	#__©™2_code
 \

653 
__vÆue
; \

654 
__asm
 
__vﬁ©ûe__
 \

656 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

657  
__vÆue


	)

658 #ifde‡
__FAST_MATH__


659 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

661 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

665 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

666 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

667 
__vÆue
; \

668 
__asm
 
__vﬁ©ûe__
 \

673 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

674  
__vÆue
)

678 #ifde‡
__FAST_MATH__


679 #i‡!
	`__GNUC_PREREQ
 (3,3)

680 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

681 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

682 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

684 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

688 #i‡
	`__GNUC_PREREQ
 (2, 8)

689 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

690 #ifde‡
__USE_ISOC99


691 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

692 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

694 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

696 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

697 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

700 #ifde‡
__FAST_MATH__


701 #i‡!
	`__GNUC_PREREQ
 (3, 4)

703 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

705 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

707 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 #i‡!
	`__GNUC_PREREQ
 (3, 5)

711 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

713 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

714 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

717 #i‡!
	`__GNUC_PREREQ
 (3, 4)

718 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

722 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

723 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

724 { 
__xld
: 
__x
 
	}
}; \

725 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

726 
	g__n
.
	g__xi
[1] = 0x80000000; \

727 
	g__n
.
	g__xi
[0] = 0; \

728  
	g__n
.
	g__xld
)

731 #ifde‡
__FAST_MATH__


733 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

734 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

735  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

737 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

738 
__ex
 = 
	`__ex∂
 (
__x
); \

739  0.5 * (
__ex
 + 1.0 / __ex))

741 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

742 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

743  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

746 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

747 
__vÆue
; \

748 
__ign‹e
; \

749 
__cw
; \

750 
__cwtmp
; \

751 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

759 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

760 "=m" (
__cw
) \

761 : "0" (
__x
)); \

762  
__vÆue
)

764 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

765 
__vÆue
; \

766 
__ign‹e
; \

767 
__cw
; \

768 
__cwtmp
; \

769 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

777 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

778 "=m" (
__cw
) \

779 : "0" (
__x
)); \

780  
__vÆue
)

782 #ifde‡
__FAST_MATH__


783 
	#__ldexp_code
 \

784 
__vÆue
; \

785 
__asm
 
__vﬁ©ûe__
 \

787 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

788  
__vÆue


	)

790 
__MATH_INLINE
 

791 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

793 
__ldexp_code
;

794 
	}
}

799 #ifde‡
__USE_ISOC99


801 #ifde‡
__FAST_MATH__


802 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

806 
	#__M_SQRT2
 1.41421356237309504880L

	)

808 #i‡!
	`__GNUC_PREREQ
 (3, 5)

809 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

810 
__vÆue
; \

811 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

812 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

814 
__asm
 
__vﬁ©ûe__
 \

818 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

819  
__vÆue
)

824 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

825 
__y
 = 
	`__Áb¶
 (
__x
); \

826  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

827 * 
	$__sgn1l
 (
__x
)))

829 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

830  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

832 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

833 
__y
 = 
	`__Áb¶
 (
__x
); \

834  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

837 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

838  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

840 #i‡!
	`__GNUC_PREREQ
 (3, 5)

841 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

842 
__vÆue
; \

843 
__junk
; \

844 
__asm
 
__vﬁ©ûe__
 \

846 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

847  
__vÆue
)

853 #ifde‡
__USE_ISOC99


854 #ifde‡
__FAST_MATH__


856 #i‡!
	`__GNUC_PREREQ
 (3, 5)

857 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

860 
__MATH_INLINE
 

861 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

863 
__ldexp_code
;

864 
	}
}

866 
__MATH_INLINE
 

867 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

869 
__ldexp_code
;

870 
	}
}

872 
__ölöe_m©h›NP
 (
röt
, "frndint")

875 
	#__Ãöt_code
 \

876 
__Ãöåes
; \

877 
__asm__
 
__vﬁ©ûe__
 \

879 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

880  
__Ãöåes


	)

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãötf
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöt
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 
__MATH_INLINE
 

892 
__NTH
 (
	$Ãöé
 (
__x
))

894 
__Ãöt_code
;

895 
	}
}

896 #unde‡
__Ãöt_code


898 
	#__Œröt_code
 \

899 
__Œröåes
; \

900 
__asm__
 
__vﬁ©ûe__
 \

902 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

903  
__Œröåes


	)

904 
__exãnsi⁄__


905 
__MATH_INLINE
 

906 
__NTH
 (
	$Œrötf
 (
__x
))

908 
__Œröt_code
;

909 
	}
}

910 
__exãnsi⁄__


911 
__MATH_INLINE
 

912 
__NTH
 (
	$Œröt
 (
__x
))

914 
__Œröt_code
;

915 
	}
}

916 
__exãnsi⁄__


917 
__MATH_INLINE
 

918 
__NTH
 (
	$Œröé
 (
__x
))

920 
__Œröt_code
;

921 
	}
}

922 #unde‡
__Œröt_code


927 #ifde‡
__USE_MISC


929 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

930 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

931 
__vÆue
; \

932 
__˛obbîed
; \

933 
__asm
 
__vﬁ©ûe__
 \

938 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

939  
__vÆue
)

944 
__MATH_INLINE
 

945 
__NTH
 (
	$__föôe
 (
__x
))

947  (
__exãnsi⁄__


948 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

950 
	}
}

955 #unde‡
__©™2_code


956 #ifde‡
__FAST_MATH__


957 #unde‡
__expm1_code


958 #unde‡
__exp_code


959 #unde‡
__söcos_code


966 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


967 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

968 
__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

969 
__vÆue
;

970 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

971 : "Ò" (
__vÆue
)

972 : "0" (
__x
), "u" (
__y
) : "st(1)");

973  
__vÆue
;)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

113 *
_lowî
;

114 *
_uµî
;

115 } 
si_addr_bnd
;

116 } 
_sigÁu…
;

121 
si_b™d
;

122 
si_fd
;

123 } 
_sigpﬁl
;

128 *
_ˇŒ_addr
;

129 
_sysˇŒ
;

130 
_¨ch
;

131 } 
_sigsys
;

132 } 
_sifõlds
;

133 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

137 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

138 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

139 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

140 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

141 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

142 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

143 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

144 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

145 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

146 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

147 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

148 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

149 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
si_addr_bnd
.
_lowî


	)

150 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
si_addr_bnd
.
_uµî


	)

151 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

152 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

153 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

154 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

155 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

162 
SI_ASYNCNL
 = -60,

163 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

164 
SI_TKILL
 = -6,

165 
	#SI_TKILL
 
SI_TKILL


	)

166 
SI_SIGIO
,

167 
	#SI_SIGIO
 
SI_SIGIO


	)

168 
SI_ASYNCIO
,

169 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

170 
SI_MESGQ
,

171 
	#SI_MESGQ
 
SI_MESGQ


	)

172 
SI_TIMER
,

173 
	#SI_TIMER
 
SI_TIMER


	)

174 
SI_QUEUE
,

175 
	#SI_QUEUE
 
SI_QUEUE


	)

176 
SI_USER
,

177 
	#SI_USER
 
SI_USER


	)

178 
SI_KERNEL
 = 0x80

179 
	#SI_KERNEL
 
SI_KERNEL


	)

183 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


187 
ILL_ILLOPC
 = 1,

188 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

189 
ILL_ILLOPN
,

190 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

191 
ILL_ILLADR
,

192 
	#ILL_ILLADR
 
ILL_ILLADR


	)

193 
ILL_ILLTRP
,

194 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

195 
ILL_PRVOPC
,

196 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

197 
ILL_PRVREG
,

198 
	#ILL_PRVREG
 
ILL_PRVREG


	)

199 
ILL_COPROC
,

200 
	#ILL_COPROC
 
ILL_COPROC


	)

201 
ILL_BADSTK


202 
	#ILL_BADSTK
 
ILL_BADSTK


	)

208 
FPE_INTDIV
 = 1,

209 
	#FPE_INTDIV
 
FPE_INTDIV


	)

210 
FPE_INTOVF
,

211 
	#FPE_INTOVF
 
FPE_INTOVF


	)

212 
FPE_FLTDIV
,

213 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

214 
FPE_FLTOVF
,

215 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

216 
FPE_FLTUND
,

217 
	#FPE_FLTUND
 
FPE_FLTUND


	)

218 
FPE_FLTRES
,

219 
	#FPE_FLTRES
 
FPE_FLTRES


	)

220 
FPE_FLTINV
,

221 
	#FPE_FLTINV
 
FPE_FLTINV


	)

222 
FPE_FLTSUB


223 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

229 
SEGV_MAPERR
 = 1,

230 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

231 
SEGV_ACCERR


232 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

238 
BUS_ADRALN
 = 1,

239 
	#BUS_ADRALN
 
BUS_ADRALN


	)

240 
BUS_ADRERR
,

241 
	#BUS_ADRERR
 
BUS_ADRERR


	)

242 
BUS_OBJERR
,

243 
	#BUS_OBJERR
 
BUS_OBJERR


	)

244 
BUS_MCEERR_AR
,

245 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

246 
BUS_MCEERR_AO


247 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

251 #ifde‡
__USE_XOPEN_EXTENDED


255 
TRAP_BRKPT
 = 1,

256 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

257 
TRAP_TRACE


258 
	#TRAP_TRACE
 
TRAP_TRACE


	)

262 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


266 
CLD_EXITED
 = 1,

267 
	#CLD_EXITED
 
CLD_EXITED


	)

268 
CLD_KILLED
,

269 
	#CLD_KILLED
 
CLD_KILLED


	)

270 
CLD_DUMPED
,

271 
	#CLD_DUMPED
 
CLD_DUMPED


	)

272 
CLD_TRAPPED
,

273 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

274 
CLD_STOPPED
,

275 
	#CLD_STOPPED
 
CLD_STOPPED


	)

276 
CLD_CONTINUED


277 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

283 
POLL_IN
 = 1,

284 
	#POLL_IN
 
POLL_IN


	)

285 
POLL_OUT
,

286 
	#POLL_OUT
 
POLL_OUT


	)

287 
POLL_MSG
,

288 
	#POLL_MSG
 
POLL_MSG


	)

289 
POLL_ERR
,

290 
	#POLL_ERR
 
POLL_ERR


	)

291 
POLL_PRI
,

292 
	#POLL_PRI
 
POLL_PRI


	)

293 
POLL_HUP


294 
	#POLL_HUP
 
POLL_HUP


	)

298 #unde‡
__√ed_sigöfo_t


302 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

303 && !
deföed
 
__have_sigevít_t


304 
	#__have_sigevít_t
 1

	)

307 
	#__SIGEV_MAX_SIZE
 64

	)

308 #i‡
__WORDSIZE
 == 64

309 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

311 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

315 #i‚de‡
__have_±hªad_©å_t


316 
±hªad_©å_t
 
	t±hªad_©å_t
;

317 
	#__have_±hªad_©å_t
 1

	)

320 
	ssigevít


322 
sigvÆ_t
 
sigev_vÆue
;

323 
sigev_signo
;

324 
sigev_nŸify
;

328 
_∑d
[
__SIGEV_PAD_SIZE
];

332 
__pid_t
 
_tid
;

336 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

337 
±hªad_©å_t
 *
_©åibuã
;

338 } 
_sigev_thªad
;

339 } 
_sigev_un
;

340 } 
	tsigevít_t
;

343 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

344 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

349 
SIGEV_SIGNAL
 = 0,

350 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

351 
SIGEV_NONE
,

352 
	#SIGEV_NONE
 
SIGEV_NONE


	)

353 
SIGEV_THREAD
,

354 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

356 
SIGEV_THREAD_ID
 = 4

357 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_INLINE_u«lig√d
 1

	)

27 
	#_HAVE_STRING_ARCH_memp˝y
 1

	)

31 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

32 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

33 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

34 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

35 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

36 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

37 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

38 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

39 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

40 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

41 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

42 || 
deföed
 
	g__btvî2__
)

46 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

47 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

49 #i‚de‡
__STRING_INLINE


50 #i‚de‡
__exã∫_ölöe


51 
	#__STRING_INLINE
 
ölöe


	)

53 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

58 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

59 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

60 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

62 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

63 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

64 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

65 | ((c⁄° *Ë(
§c
))[
idx
])

	)

69 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

70 
	#mem˝y
(
de°
, 
§c
, 
n
) \

71 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

72 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

73 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

74 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

75 ((
n
) == 0 \

76 ? (
de°
) \

77 : (((
n
) % 4 == 0) \

78 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

79 : (((
n
) % 2 == 0) \

80 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

81 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

83 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

84 
size_t
 
__n
);

86 
__STRING_INLINE
 *

87 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

89 
__d0
, 
__d1
;

90 *
__tmp
 = 
__de°
;

91 
__asm__
 
__vﬁ©ûe__


99 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

100 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

102  
__de°
;

103 
	}
}

105 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

106 
size_t
 
__n
);

108 
__STRING_INLINE
 *

109 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

111 
__d0
, 
__d1
;

112 *
__tmp
 = 
__de°
;

113 
__asm__
 
__vﬁ©ûe__


126 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

127 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

129  
__de°
;

130 
	}
}

132 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

134 
__STRING_INLINE
 *

135 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

137 
__d0
, 
__d1
, 
__d2
;

138 *
__tmp
 = 
__de°
;

139 
__asm__
 
__vﬁ©ûe__


150 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

151 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

152 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

153 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

155  
__de°
;

156 
	}
}

158 
	#_HAVE_STRING_ARCH_memmove
 1

	)

159 #i‚de‡
_FORCE_INLINES


162 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

164 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

165 
	`__asm__
 ("memmove");

167 
__STRING_INLINE
 *

168 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

170 
__d0
, 
__d1
, 
__d2
;

171 *
__tmp
 = 
__de°
;

172 i‡(
__de°
 < 
__§c
)

173 
__asm__
 
__vﬁ©ûe__


176 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

177 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

178 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

179 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

181 
__asm__
 
__vﬁ©ûe__


187 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

188 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

189 : "0" (
__n
), "1" (__¿+ (c⁄° *Ë
__§c
),

190 "2" (
__n
 + (*Ë
__tmp
),

191 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

192  
__de°
;

193 
	}
}

197 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

198 #i‚de‡
_FORCE_INLINES


199 #i‚de‡
__PIC__


201 
__STRING_INLINE
 

202 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

204 
__d0
, 
__d1
, 
__d2
;

205 
__ªs
;

206 
__asm__
 
__vﬁ©ûe__


214 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

215 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

216 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

217 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

219  
__ªs
;

220 
	}
}

225 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

226 
	#_USE_STRING_ARCH_mem£t
 1

	)

227 
	#mem£t
(
s
, 
c
, 
n
) \

228 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

229 ? ((
n
) == 1 \

230 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

231 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

232 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

233 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

234 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

235 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

236 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

237 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

238 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

240 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

241 *((*Ë
__s
Ë(Ë(
c
); \

242 
__s
; })

	)

244 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

245 ({ *
__s
 = (
s
); \

247 
__ui
; \

248 
__usi
; \

249 
__uc
; \

250 } *
__u
 = 
__s
; \

251 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

257 i‡((
n
) == 3 || (n) >= 5) \

258 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

261 
n
) \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__ui
 = 
__c
; \

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

270 
__u
->
__ui
 = 
__c
; \

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

273 
__u
->
__usi
 = (Ë
__c
; \

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

275 
__u
->
__uc
 = (Ë
__c
; \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__usi
 = (Ë
__c
; \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__uc
 = (Ë
__c
; \

305 
__u
->
__ui
 = 
__c
; \

306 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

308 
__u
->
__ui
 = 
__c
; \

309 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

311 
__u
->
__ui
 = 
__c
; \

312 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

314 
__u
->
__ui
 = 
__c
; \

319 
__s
; })

	)

321 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

322 (((
n
) % 4 == 0) \

323 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

324 
n
) \

325 : (((
n
) % 2 == 0) \

326 ? 
	`__mem£t_c˙_by2
 (
s
, \

327 ((Ë((Ë(
c
))) * 0x01010101,\

328 
n
) \

329 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

331 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

332 
size_t
 
__n
);

334 
__STRING_INLINE
 *

335 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

337 *
__tmp
 = 
__s
;

338 
__d0
;

339 #ifde‡
__i686__


340 
__asm__
 
__vﬁ©ûe__


343 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

344 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

345 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

348 
__asm__
 
__vﬁ©ûe__


354 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359  
__s
;

360 
	}
}

362 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

363 
size_t
 
__n
);

365 
__STRING_INLINE
 *

366 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

368 
__d0
, 
__d1
;

369 *
__tmp
 = 
__s
;

370 #ifde‡
__i686__


371 
__asm__
 
__vﬁ©ûe__


375 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

376 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

377 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

380 
__asm__
 
__vﬁ©ûe__


386 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

387 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

388 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

391  
__s
;

392 
	}
}

394 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

395 (((
n
) % 4 == 0) \

396 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

397 : (((
n
) % 2 == 0) \

398 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

399 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

401 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

403 
__STRING_INLINE
 *

404 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

406 *
__tmp
 = 
__s
;

407 
__d0
;

408 
__asm__
 
__vﬁ©ûe__


418 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

419 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

420 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

422  
__s
;

423 
	}
}

425 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

427 
__STRING_INLINE
 *

428 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
;

431 *
__tmp
 = 
__s
;

432 
__asm__
 
__vﬁ©ûe__


443 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

444 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

445 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

447  
__s
;

448 
	}
}

452 
	#_HAVE_STRING_ARCH_memchr
 1

	)

453 #i‚de‡
_FORCE_INLINES


454 
__STRING_INLINE
 *

455 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

457 
__d0
;

458 #ifde‡
__i686__


459 
__d1
;

461 *
__ªs
;

462 i‡(
__n
 == 0)

463  
NULL
;

464 #ifde‡
__i686__


465 
__asm__
 
__vﬁ©ûe__


469 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

470 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

471 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

474 
__asm__
 
__vﬁ©ûe__


480 : "=D" (
__ªs
), "=&c" (
__d0
)

481 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

482 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

485  
__ªs
 - 1;

486 
	}
}

489 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

490 #i‚de‡
_FORCE_INLINES


491 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

493 
__STRING_INLINE
 *

494 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

496 
__d0
;

497 #ifde‡
__i686__


498 
__d1
;

500 *
__ªs
;

501 i‡(
__n
 == 0)

502  
NULL
;

503 #ifde‡
__i686__


504 
__asm__
 
__vﬁ©ûe__


510 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

511 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

512 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

515 
__asm__
 
__vﬁ©ûe__


522 : "=D" (
__ªs
), "=&c" (
__d0
)

523 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

524 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

527  
__ªs
;

528 
	}
}

529 #ifde‡
__USE_GNU


530 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

535 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

536 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

538 #i‚de‡
_FORCE_INLINES


539 
__STRING_INLINE
 *

540 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

542 
__d0
;

543 *
__ªs
;

544 
__asm__
 
__vﬁ©ûe__


547 : "=D" (
__ªs
), "=&c" (
__d0
)

548 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

549 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

551  
__ªs
 - 1;

552 
	}
}

553 #ifde‡
__USE_GNU


554 
__STRING_INLINE
 *

555 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

557  
	`__øwmemchr
 (
__s
, 
__c
);

558 
	}
}

564 
	#_HAVE_STRING_ARCH_°æí
 1

	)

565 
	#°æí
(
°r
) \

566 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

567 ? 
	`__buûtö_°æí
 (
°r
) \

568 : 
	`__°æí_g
 (
°r
)))

	)

569 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

571 
__STRING_INLINE
 
size_t


572 
	$__°æí_g
 (c⁄° *
__°r
)

574 
__dummy
;

575 c⁄° *
__tmp
 = 
__°r
;

576 
__asm__
 
__vﬁ©ûe__


582 : "Ù" (
__tmp
), "=&q" (
__dummy
)

583 : "0" (
__°r
),

584 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

586  
__tmp
 - 
__°r
 - 1;

587 
	}
}

591 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

592 
	#°r˝y
(
de°
, 
§c
) \

593 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

594 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

595 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

596 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

597 (c⁄° *Ë(
§c
), \

598 
	`°æí
 (
§c
) + 1)) \

599 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

601 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

602 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

604 
__ui
; \

605 
__usi
; \

606 
__uc
; \

607 
__c
; \

608 } *
__u
 = (*Ë
__de°
; \

609 
§˛í
) \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

618 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

619 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

620 
__u
->
__uc
 = '\0'; \

623 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__uc
 = '\0'; \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

636 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

637 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

638 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

640 
__u
->
__uc
 = '\0'; \

643 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

645 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

648 (*Ë
__de°
; }))

	)

650 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

652 
__STRING_INLINE
 *

653 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

655 *
__tmp
 = 
__de°
;

656 
__dummy
;

657 
__asm__
 
__vﬁ©ûe__


666 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

667 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

668 : "0" (
__§c
), "1" (
__tmp
),

669 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

671  
__de°
;

672 
	}
}

675 #ifde‡
__USE_GNU


676 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

678 
	#__°p˝y
(
de°
, 
§c
) \

679 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

680 ? (
	`°æí
 (
§c
) + 1 <= 8 \

681 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

682 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

683 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

684 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

685 ((
§˛í
) % 4 == 0 \

686 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

687 : ((
§˛í
) % 2 == 0 \

688 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

689 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

692 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

694 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

695 (
	`__exãnsi⁄__
 ({ union { \

696 
__ui
; \

697 
__usi
; \

698 
__uc
; \

699 
__c
; \

700 } *
__u
 = (*Ë(
de°
); \

701 
§˛í
) \

704 
__u
->
__uc
 = '\0'; \

707 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

708 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

713 
__u
->
__uc
 = '\0'; \

716 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

717 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__uc
 = '\0'; \

725 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

726 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

727 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

728 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

731 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

732 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

733 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

735 
__u
->
__uc
 = '\0'; \

738 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

739 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

740 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

741 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

744 (*Ë
__u
; }))

	)

746 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

747 
size_t
 
__§˛í
);

749 
__STRING_INLINE
 *

750 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

752 *
__tmp
 = 
__de°
;

753 
__d0
, 
__d1
;

754 
__asm__
 
__vﬁ©ûe__


762 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

763 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

765  
__tmp
;

766 
	}
}

768 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

769 
size_t
 
__§˛í
);

771 
__STRING_INLINE
 *

772 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

774 *
__tmp
 = 
__de°
;

775 
__d0
, 
__d1
;

776 
__asm__
 
__vﬁ©ûe__


789 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

790 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

791 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

792 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

794  
__tmp
 + 2;

795 
	}
}

797 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

798 
size_t
 
__§˛í
);

800 
__STRING_INLINE
 *

801 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

803 
__d0
, 
__d1
;

804 *
__tmp
 = 
__de°
;

805 
__asm__
 
__vﬁ©ûe__


816 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

817 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

818 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

819 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

821  
__tmp
;

822 
	}
}

824 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

826 
__STRING_INLINE
 *

827 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

829 *
__tmp
 = 
__de°
;

830 
__dummy
;

831 
__asm__
 
__vﬁ©ûe__


840 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

841 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

842 : "0" (
__§c
), "1" (
__tmp
),

843 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

845  
__tmp
 - 1;

846 
	}
}

851 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

852 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

853 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

854 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

855 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

856 (c⁄° *Ë(
§c
), 
n
) \

857 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

858 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

859 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

860 (((
§˛í
) % 4 == 0) \

861 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

862 : (((
§˛í
) % 2 == 0) \

863 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

864 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

866 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

867 
size_t
 
__§˛í
, size_à
__n
);

869 
__STRING_INLINE
 *

870 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

872 *
__tmp
 = 
__de°
;

873 
__dummy1
, 
__dummy2
;

874 
__asm__
 
__vﬁ©ûe__


882 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

883 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

884 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

885 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

887 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

888  
__de°
;

889 
	}
}

891 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

892 
size_t
 
__§˛í
, size_à
__n
);

894 
__STRING_INLINE
 *

895 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

897 *
__tmp
 = 
__de°
;

898 
__dummy1
, 
__dummy2
;

899 
__asm__
 
__vﬁ©ûe__


912 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

913 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

914 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

915 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

917 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

918  
__de°
;

919 
	}
}

921 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

922 
size_t
 
__§˛í
, size_à
__n
);

924 
__STRING_INLINE
 *

925 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

927 
__d0
, 
__d1
;

928 *
__tmp
 = 
__de°
;

929 
__asm__
 
__vﬁ©ûe__


940 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

941 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

942 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

943 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

945 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

946  
__de°
;

947 
	}
}

949 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

950 
size_t
 
__n
);

952 
__STRING_INLINE
 *

953 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

955 *
__tmp
 = 
__de°
;

956 
__dummy
;

957 i‡(
__n
 > 0)

958 
__asm__
 
__vﬁ©ûe__


974 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

975 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

978  
__de°
;

979 
	}
}

983 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

984 
	#°rˇt
(
de°
, 
§c
) \

985 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

986 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

987 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

989 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

990 
size_t
 
__§˛í
);

992 
__STRING_INLINE
 *

993 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

995 #ifde‡
__i686__


996 
__d0
;

997 *
__tmp
;

998 
__asm__
 
__vﬁ©ûe__


1000 : "=D" (
__tmp
), "=&c" (
__d0
),

1001 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1002 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

1003 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1005 --
__tmp
;

1007 *
__tmp
 = 
__de°
;

1008 
__asm__
 
__vﬁ©ûe__


1014 : "Ù" (
__tmp
),

1015 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1016 : "0" (
__tmp
),

1017 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1020 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1021  
__de°
;

1022 
	}
}

1024 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1026 
__STRING_INLINE
 *

1027 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1029 *
__tmp
 = 
__de°
;

1030 
__dummy
;

1031 
__asm__
 
__vﬁ©ûe__


1044 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1045 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1046 : "1" (
__tmp
), "2" (
__§c
),

1047 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1049  
__de°
;

1050 
	}
}

1054 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1055 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1056 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1057 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1058 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1059 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1060 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1061 (c⁄° *Ë(
§c
), \

1062 (
n
)Ë0, 
__de°
)) \

1063 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1065 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1066 
size_t
 
__n
);

1068 
__STRING_INLINE
 *

1069 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1071 *
__tmp
 = 
__de°
;

1072 
__dummy
;

1073 #ifde‡
__i686__


1074 
__asm__
 
__vﬁ©ûe__


1088 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1089 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1092 
__asm__
 
__vﬁ©ûe__


1109 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1110 : "1" ((Ë
__tmp
 - 1), "2" (
__§c
), "3" (
__n
)

1113  
__de°
;

1114 
	}
}

1118 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1119 
	#°rcmp
(
s1
, 
s2
) \

1120 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1121 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1122 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1123 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1124 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1125 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1126 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1127 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1128 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1129 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1130 (c⁄° *Ë(
s2
), \

1131 
	`°æí
 (
s1
)) \

1132 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1133 (c⁄° *Ë(
s2
), \

1134 
	`°æí
 (
s1
))) \

1135 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1136 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1137 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1138 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1139 (c⁄° *Ë(
s2
), \

1140 
	`°æí
 (
s2
)) \

1141 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1142 (c⁄° *Ë(
s2
), \

1143 
	`°æí
 (
s2
))) \

1144 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1146 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1147 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1148 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1150 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1151 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1154 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1155 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1158 
__ªsu…
; }))

	)

1160 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1161 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1162 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1163 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1165 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1166 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1169 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1170 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1173 
__ªsu…
; }))

	)

1175 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1176 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1177 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1178 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1180 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1181 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1183 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1184 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1185 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1188 
__ªsu…
; }))

	)

1190 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1192 
__STRING_INLINE
 

1193 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1195 
__ªs
;

1196 
__asm__
 
__vﬁ©ûe__


1212 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1213 : "1" (
__s1
), "2" (
__s2
),

1214 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1215 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1217  
__ªs
;

1218 
	}
}

1222 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1223 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1224 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1225 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1226 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1227 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1228 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1230 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1231 
size_t
 
__n
);

1233 
__STRING_INLINE
 

1234 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1236 
__ªs
;

1237 
__asm__
 
__vﬁ©ûe__


1256 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1257 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1258 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1259 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1261  
__ªs
;

1262 
	}
}

1266 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1267 
	#_USE_STRING_ARCH_°rchr
 1

	)

1268 
	#°rchr
(
s
, 
c
) \

1269 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1270 ? ((
c
) == '\0' \

1271 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1272 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1273 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1275 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1277 
__STRING_INLINE
 *

1278 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1280 
__d0
;

1281 *
__ªs
;

1282 
__asm__
 
__vﬁ©ûe__


1292 : "Ù" (
__ªs
), "=&a" (
__d0
)

1293 : "0" (
__s
), "1" (
__c
),

1294 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1296  
__ªs
;

1297 
	}
}

1299 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1301 
__STRING_INLINE
 *

1302 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1304 
__d0
;

1305 *
__ªs
;

1306 
__asm__
 
__vﬁ©ûe__


1317 : "Ù" (
__ªs
), "=&a" (
__d0
)

1318 : "0" (
__s
), "1" (
__c
),

1319 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1321  
__ªs
;

1322 
	}
}

1326 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1327 
	#__°rch∫ul
(
s
, 
c
) \

1328 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1329 ? ((
c
) == '\0' \

1330 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1331 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1332 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1334 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1336 
__STRING_INLINE
 *

1337 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1339 
__d0
;

1340 *
__ªs
;

1341 
__asm__
 
__vﬁ©ûe__


1351 : "Ù" (
__ªs
), "=&a" (
__d0
)

1352 : "0" (
__s
), "1" (
__c
),

1353 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1355  
__ªs
;

1356 
	}
}

1358 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1360 
__STRING_INLINE
 *

1361 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1363 
__d0
;

1364 *
__ªs
;

1365 
__asm__
 
__vﬁ©ûe__


1376 : "Ù" (
__ªs
), "=&a" (
__d0
)

1377 : "0" (
__s
), "1" (
__c
),

1378 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1380  
__ªs
;

1381 
	}
}

1382 #ifde‡
__USE_GNU


1383 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1387 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1389 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1390 
	#ödex
(
s
, 
c
) \

1391 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1392 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1393 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1398 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1399 
	#°ºchr
(
s
, 
c
) \

1400 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1401 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1402 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1404 #ifde‡
__i686__


1405 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1420 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1421 : "0" (1), "1" (
__s
), "2" (
__c
),

1422 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1424  
__ªs
 - 1;

1425 
	}
}

1427 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1429 
__STRING_INLINE
 *

1430 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1432 
__d0
, 
__d1
;

1433 *
__ªs
;

1434 
__asm__
 
__vﬁ©ûe__


1443 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1444 : "0" (1), "1" (
__s
), "2" (
__c
),

1445 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1447  
__ªs
 - 1;

1448 
	}
}

1450 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1452 
__STRING_INLINE
 *

1453 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1455 
__d0
, 
__d1
;

1456 *
__ªs
;

1457 
__asm__
 
__vﬁ©ûe__


1467 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1468 : "0" (0), "1" (
__s
), "2" (
__c
),

1469 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1471  
__ªs
;

1472 
	}
}

1474 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1476 
__STRING_INLINE
 *

1477 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1479 
__d0
, 
__d1
;

1480 *
__ªs
;

1481 
__asm__
 
__vﬁ©ûe__


1492 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1493 : "0" (0), "1" (
__s
), "2" (
__c
),

1494 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1496  
__ªs
;

1497 
	}
}

1501 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1503 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1504 
	#rödex
(
s
, 
c
) \

1505 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1506 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1507 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1513 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1514 
	#°rc•n
(
s
, 
ªje˘
) \

1515 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1516 ? ((
ªje˘
)[0] == '\0' \

1517 ? 
	`°æí
 (
s
) \

1518 : ((
ªje˘
)[1] == '\0' \

1519 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1520 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1521 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1523 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1525 #i‚de‡
_FORCE_INLINES


1526 
__STRING_INLINE
 
size_t


1527 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1529 
__d0
;

1530 *
__ªs
;

1531 
__asm__
 
__vﬁ©ûe__


1540 : "Ù" (
__ªs
), "=&a" (
__d0
)

1541 : "0" (
__s
), "1" (
__ªje˘
),

1542 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1544  (
__ªs
 - 1Ë- 
__s
;

1545 
	}
}

1548 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1549 
size_t
 
__ªje˘_Àn
);

1551 
__STRING_INLINE
 
size_t


1552 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1554 
__d0
, 
__d1
, 
__d2
;

1555 c⁄° *
__ªs
;

1556 
__asm__
 
__vﬁ©ûe__


1567 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1568 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1570  (
__ªs
 - 1Ë- 
__s
;

1571 
	}
}

1573 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1574 #ifde‡
__PIC__


1576 
__STRING_INLINE
 
size_t


1577 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1579 
__d0
, 
__d1
, 
__d2
;

1580 c⁄° *
__ªs
;

1581 
__asm__
 
__vﬁ©ûe__


1598 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1599 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1601  (
__ªs
 - 1Ë- 
__s
;

1602 
	}
}

1604 
__STRING_INLINE
 
size_t


1605 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1607 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1608 c⁄° *
__ªs
;

1609 
__asm__
 
__vﬁ©ûe__


1623 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1624 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1627  (
__ªs
 - 1Ë- 
__s
;

1628 
	}
}

1634 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1635 
	#°r•n
(
s
, 
ac˚±
) \

1636 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1637 ? ((
ac˚±
)[0] == '\0' \

1638 ? ((Ë(
s
), 0) \

1639 : ((
ac˚±
)[1] == '\0' \

1640 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1641 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1642 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1644 #i‚de‡
_FORCE_INLINES


1645 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1647 
__STRING_INLINE
 
size_t


1648 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1650 
__d0
;

1651 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1659 : "Ù" (
__ªs
), "=&q" (
__d0
)

1660 : "0" (
__s
), "1" (
__ac˚±
),

1661 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1663  (
__ªs
 - 1Ë- 
__s
;

1664 
	}
}

1667 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1668 
size_t
 
__ac˚±_Àn
);

1670 
__STRING_INLINE
 
size_t


1671 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1673 
__d0
, 
__d1
, 
__d2
;

1674 c⁄° *
__ªs
;

1675 
__asm__
 
__vﬁ©ûe__


1686 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1687 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1690 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1691 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1693  (
__ªs
 - 1Ë- 
__s
;

1694 
	}
}

1696 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1697 #ifde‡
__PIC__


1699 
__STRING_INLINE
 
size_t


1700 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1702 
__d0
, 
__d1
, 
__d2
;

1703 c⁄° *
__ªs
;

1704 
__asm__
 
__vﬁ©ûe__


1720 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1721 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1723  (
__ªs
 - 1Ë- 
__s
;

1724 
	}
}

1726 
__STRING_INLINE
 
size_t


1727 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1729 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1730 c⁄° *
__ªs
;

1731 
__asm__
 
__vﬁ©ûe__


1745 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1746 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1748  (
__ªs
 - 1Ë- 
__s
;

1749 
	}
}

1754 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1755 
	#°Ωbrk
(
s
, 
ac˚±
) \

1756 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1757 ? ((
ac˚±
)[0] == '\0' \

1758 ? ((Ë(
s
), (*) 0) \

1759 : ((
ac˚±
)[1] == '\0' \

1760 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1761 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1762 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1764 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1765 
size_t
 
__ac˚±_Àn
);

1767 
__STRING_INLINE
 *

1768 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1770 
__d0
, 
__d1
, 
__d2
;

1771 *
__ªs
;

1772 
__asm__
 
__vﬁ©ûe__


1787 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1788 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1790  
__ªs
;

1791 
	}
}

1793 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1794 #ifde‡
__PIC__


1796 
__STRING_INLINE
 *

1797 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1799 
__d0
, 
__d1
, 
__d2
;

1800 *
__ªs
;

1801 
__asm__
 
__vﬁ©ûe__


1822 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1823 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1825  
__ªs
;

1826 
	}
}

1828 
__STRING_INLINE
 *

1829 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1831 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1832 *
__ªs
;

1833 
__asm__
 
__vﬁ©ûe__


1852 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1853 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1855  
__ªs
;

1856 
	}
}

1861 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1862 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1863 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1864 ? ((
√edÀ
)[0] == '\0' \

1865 ? (
hay°ack
) \

1866 : ((
√edÀ
)[1] == '\0' \

1867 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1868 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1869 
	`°æí
 (
√edÀ
)))) \

1870 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1874 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1875 c⁄° 
__√edÀ
[],

1876 
size_t
 
__√edÀ_Àn
);

1878 
__STRING_INLINE
 *

1879 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1880 
size_t
 
__√edÀ_Àn
)

1882 
__d0
, 
__d1
, 
__d2
;

1883 *
__ªs
;

1884 
__asm__
 
__vﬁ©ûe__


1897 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1898 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1900  
__ªs
;

1901 
	}
}

1903 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1904 c⁄° *
__√edÀ
);

1905 #ifde‡
__PIC__


1907 
__STRING_INLINE
 *

1908 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1910 
__d0
, 
__d1
, 
__d2
;

1911 *
__ªs
;

1912 
__asm__
 
__vﬁ©ûe__


1931 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1932 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1933 "d" (
__√edÀ
)

1935  
__ªs
;

1936 
	}
}

1938 
__STRING_INLINE
 *

1939 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1941 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1942 *
__ªs
;

1943 
__asm__
 
__vﬁ©ûe__


1960 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1961 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1962 "b" (
__√edÀ
)

1964  
__ªs
;

1965 
	}
}

1971 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1972 #ifde‡
__i686__


1973 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1974 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1975 ? 
	`__buûtö_ffs
 (
w‹d
) \

1976 : ({ 
__˙t
, 
__tmp
; \

1977 
__asm__
 
__vﬁ©ûe__
 \

1980 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1981 : "rm" (
w‹d
), "1" (-1)); \

1982 
__˙t
 + 1; }))

	)

1984 #i‚de‡
ff¶


1985 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1990 #i‚de‡
_FORCE_INLINES


1991 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

52 
	#__°rög2_1b±r_p
(
__x
) \

53 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

56 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


57 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

61 #i‚de‡
_HAVE_STRING_ARCH_°rchr


62 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

63 
	#°rchr
(
s
, 
c
) \

64 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

65 && (
c
) == '\0' \

66 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

67 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

72 #ifde‡
__USE_GNU


73 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


74 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

77 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

83 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


84 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

89 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


90 #ifde‡
_USE_STRING_ARCH_°rchr


91 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

92 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

93 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

94 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

95 ? 
	`°rˇt
 (
__de°
, 
§c
) \

96 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

97 
§c
, 
n
)Ë'\0', 
__de°
)) \

98 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

100 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

106 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


107 
	#°rcmp
(
s1
, 
s2
) \

108 
__exãnsi⁄__
 \

109 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

110 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

111 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

112 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

113 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

114 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

115 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

116 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

118 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

119 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

120 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

121 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

122 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

123 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

124 : -
	`__°rcmp_cg
 (
s2
, 
s1
, 
__s2_Àn
)) \

125 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

127 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

128 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

129 (c⁄° *Ë(c⁄° *Ë(
s2
); \

130 
__ªsu…
 = \

131 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

132 - 
__s2
[0]); \

133 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

135 
__ªsu…
 = (((const *) \

136 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

137 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

139 
__ªsu…
 = (((const *) \

140 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

141 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

142 
__ªsu…
 = (((const *) \

143 (c⁄° *Ë(
s1
))[3] \

144 - 
__s2
[3]); \

147 
__ªsu…
; }))

	)

152 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


153 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

154 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

155 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

156 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

157 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

158 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

159 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

165 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


166 
	#°rc•n
(
s
, 
ªje˘
Ë
	`__buûtö_°rc•n
 (s,Ñeje˘)

	)

172 #i‚de‡
_HAVE_STRING_ARCH_°r•n


173 
	#°r•n
(
s
, 
ac˚±
Ë
	`__buûtö_°r•n
 (s,ác˚±)

	)

178 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


179 
	#°Ωbrk
(
s
, 
ac˚±
Ë
	`__buûtö_°Ωbrk
 (s,ác˚±)

	)

183 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


184 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


185 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

186 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

187 && ((c⁄° *Ë(
£p
))[0] != '\0' \

188 && ((c⁄° *Ë(
£p
))[1] == '\0' \

189 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

190 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

193 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

194 
__STRING_INLINE
 *

195 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

197 *
__ªsu…
;

198 i‡(
__s
 =
NULL
)

199 
__s
 = *
__√xç
;

200 *
__s
 =
__£p
)

201 ++
__s
;

202 
__ªsu…
 = 
NULL
;

203 i‡(*
__s
 != '\0')

205 
__ªsu…
 = 
__s
++;

206 *
__s
 != '\0')

207 i‡(*
__s
++ =
__£p
)

209 
__s
[-1] = '\0';

213 *
__√xç
 = 
__s
;

214  
__ªsu…
;

215 
	}
}

216 #ifde‡
__USE_POSIX


217 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

222 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


223 #i‚de‡
_HAVE_STRING_ARCH_°r£p


225 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

226 
	#__°r£p
(
s
, 
ªje˘
) \

227 
__exãnsi⁄__
 \

228 ({ 
__r0
, 
__r1
, 
__r2
; \

229 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

230 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

231 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

232 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

233 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

234 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

235 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

236 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

237 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

238 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

239 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

240 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

243 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

244 
__STRING_INLINE
 *

245 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

247 *
__ªtvÆ
 = *
__s
;

248 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

249 *(*
__s
)++ = '\0';

250  
__ªtvÆ
;

251 
	}
}

253 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

254 
__STRING_INLINE
 *

255 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

257 *
__ªtvÆ
 = *
__s
;

258 i‡(
__ªtvÆ
 !
NULL
)

260 *
__˝
 = 
__ªtvÆ
;

263 i‡(*
__˝
 == '\0')

265 
__˝
 = 
NULL
;

268 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

270 *
__˝
++ = '\0';

273 ++
__˝
;

275 *
__s
 = 
__˝
;

277  
__ªtvÆ
;

278 
	}
}

280 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

281 
__ªje˘3
);

282 
__STRING_INLINE
 *

283 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

285 *
__ªtvÆ
 = *
__s
;

286 i‡(
__ªtvÆ
 !
NULL
)

288 *
__˝
 = 
__ªtvÆ
;

291 i‡(*
__˝
 == '\0')

293 
__˝
 = 
NULL
;

296 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

298 *
__˝
++ = '\0';

301 ++
__˝
;

303 *
__s
 = 
__˝
;

305  
__ªtvÆ
;

306 
	}
}

307 #ifde‡
__USE_MISC


308 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

315 #ifde‡
__USE_MISC


317 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


318 
	#__√ed_mÆloc_™d_ˇŒoc


	)

319 
	~<°dlib.h
>

322 #i‚de‡
_HAVE_STRING_ARCH_°rdup


324 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

325 
	#__°rdup
(
s
) \

326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

327 ? (((c⁄° *Ë(
s
))[0] == '\0' \

328 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

330 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

331 i‡(
__ªtvÆ
 !
NULL
) \

332 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

333 
__ªtvÆ
; 
	}
})) \

334 : 
	`__°rdup
 (
s
)))

	)

336 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


337 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

341 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


343 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

344 
__THROW
 
__©åibuã_mÆloc__
;

345 
	#__°∫dup
(
s
, 
n
) \

346 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

347 ? (((c⁄° *Ë(
s
))[0] == '\0' \

348 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

349 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

350 
size_t
 
__n
 = (
n
); \

351 *
__ªtvÆ
; \

352 i‡(
__n
 < 
__Àn
) \

353 
__Àn
 = 
__n
 + 1; \

354 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

355 i‡(
__ªtvÆ
 !
NULL
) \

357 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

358 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

359 
__Àn
 - 1); \

361 
__ªtvÆ
; 
	}
})) \

362 : 
	`__°∫dup
 (
s
, 
n
)))

	)

364 #ifde‡
__USE_XOPEN2K8


365 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

371 #i‚de‡
_FORCE_INLINES


372 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


81 
	#NL_NMAX
 
INT_MAX


	)

85 
	#NL_SETMAX
 
INT_MAX


	)

88 
	#NL_TEXTMAX
 
INT_MAX


	)

91 
	#NZERO
 20

	)

95 #ifde‡
INT_MAX


96 #i‡
INT_MAX
 == 32767

97 
	#WORD_BIT
 16

	)

99 #i‡
INT_MAX
 == 2147483647

100 
	#WORD_BIT
 32

	)

103 
	#WORD_BIT
 64

	)

106 #ñi‡
deföed
 
__INT_MAX__


107 #i‡
__INT_MAX__
 == 32767

108 
	#WORD_BIT
 16

	)

110 #i‡
__INT_MAX__
 == 2147483647

111 
	#WORD_BIT
 32

	)

114 
	#WORD_BIT
 64

	)

118 
	#WORD_BIT
 32

	)

122 #ifde‡
LONG_MAX


123 #i‡
LONG_MAX
 == 2147483647

124 
	#LONG_BIT
 32

	)

127 
	#LONG_BIT
 64

	)

129 #ñi‡
deföed
 
__LONG_MAX__


130 #i‡
__LONG_MAX__
 == 2147483647

131 
	#LONG_BIT
 32

	)

134 
	#LONG_BIT
 64

	)

137 
	~<bôs/w‹dsize.h
>

138 #i‡
__WORDSIZE
 == 64

139 
	#LONG_BIT
 64

	)

141 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


149 #unde‡
_DEFAULT_SOURCE


150 
	#_DEFAULT_SOURCE
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_ISOC11_SOURCE


160 
	#_ISOC11_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_DEFAULT_SOURCE


172 
	#_DEFAULT_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
))

184 #unde‡
_DEFAULT_SOURCE


185 
	#_DEFAULT_SOURCE
 1

	)

189 #i‡(
deföed
 
_ISOC11_SOURCE
 \

190 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

191 
	#__USE_ISOC11
 1

	)

195 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

196 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

197 
	#__USE_ISOC99
 1

	)

201 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

202 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

203 
	#__USE_ISOC95
 1

	)

210 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

211 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

212 
	#__USE_ISOCXX11
 1

	)

218 #ifde‡
_DEFAULT_SOURCE


219 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


220 
	#__USE_POSIX_IMPLICITLY
 1

	)

222 #unde‡
_POSIX_SOURCE


223 
	#_POSIX_SOURCE
 1

	)

224 #unde‡
_POSIX_C_SOURCE


225 
	#_POSIX_C_SOURCE
 200809L

	)

227 #i‡((!
deföed
 
__STRICT_ANSI__
 \

228 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

229 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

230 
	#_POSIX_SOURCE
 1

	)

231 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

232 
	#_POSIX_C_SOURCE
 2

	)

233 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

234 
	#_POSIX_C_SOURCE
 199506L

	)

235 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

236 
	#_POSIX_C_SOURCE
 200112L

	)

238 
	#_POSIX_C_SOURCE
 200809L

	)

240 
	#__USE_POSIX_IMPLICITLY
 1

	)

243 #i‡(
deföed
 
_POSIX_SOURCE
 \

244 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

245 || 
deföed
 
_XOPEN_SOURCE
)

246 
	#__USE_POSIX
 1

	)

249 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


250 
	#__USE_POSIX2
 1

	)

253 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

254 
	#__USE_POSIX199309
 1

	)

257 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

258 
	#__USE_POSIX199506
 1

	)

261 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

262 
	#__USE_XOPEN2K
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

270 
	#__USE_XOPEN2K8
 1

	)

271 #unde‡
_ATFILE_SOURCE


272 
	#_ATFILE_SOURCE
 1

	)

275 #ifdef 
_XOPEN_SOURCE


276 
	#__USE_XOPEN
 1

	)

277 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

278 
	#__USE_XOPEN_EXTENDED
 1

	)

279 
	#__USE_UNIX98
 1

	)

280 #unde‡
_LARGEFILE_SOURCE


281 
	#_LARGEFILE_SOURCE
 1

	)

282 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

283 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

284 
	#__USE_XOPEN2K8
 1

	)

285 
	#__USE_XOPEN2K8XSI
 1

	)

287 
	#__USE_XOPEN2K
 1

	)

288 
	#__USE_XOPEN2KXSI
 1

	)

289 #unde‡
__USE_ISOC95


290 
	#__USE_ISOC95
 1

	)

291 #unde‡
__USE_ISOC99


292 
	#__USE_ISOC99
 1

	)

295 #ifde‡
_XOPEN_SOURCE_EXTENDED


296 
	#__USE_XOPEN_EXTENDED
 1

	)

301 #ifde‡
_LARGEFILE_SOURCE


302 
	#__USE_LARGEFILE
 1

	)

305 #ifde‡
_LARGEFILE64_SOURCE


306 
	#__USE_LARGEFILE64
 1

	)

309 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

310 
	#__USE_FILE_OFFSET64
 1

	)

313 #i‡
deföed
 
_DEFAULT_SOURCE


314 
	#__USE_MISC
 1

	)

317 #ifdef 
_ATFILE_SOURCE


318 
	#__USE_ATFILE
 1

	)

321 #ifdef 
_GNU_SOURCE


322 
	#__USE_GNU
 1

	)

325 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


326 
	#__USE_REENTRANT
 1

	)

329 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

330 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

331 #i‡
_FORTIFY_SOURCE
 > 1

332 
	#__USE_FORTIFY_LEVEL
 2

	)

334 
	#__USE_FORTIFY_LEVEL
 1

	)

337 
	#__USE_FORTIFY_LEVEL
 0

	)

342 
	~<°dc-¥edef.h
>

350 #unde‡
__GNU_LIBRARY__


351 
	#__GNU_LIBRARY__
 6

	)

355 
	#__GLIBC__
 2

	)

356 
	#__GLIBC_MINOR__
 24

	)

358 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

359 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

362 #i‚de‡
__ASSEMBLER__


363 #i‚de‡
_SYS_CDEFS_H


364 
	~<sys/cdefs.h
>

369 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


370 
	#__USE_LARGEFILE
 1

	)

371 
	#__USE_LARGEFILE64
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 #ifde‡
__USE_XOPEN2K


43 
	#__√ed_time•ec


	)

45 
	~<time.h
>

46 
	#__√ed_timevÆ


	)

47 
	~<bôs/time.h
>

49 #i‚de‡
__su£c⁄ds_t_deföed


50 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

51 
	#__su£c⁄ds_t_deföed


	)

56 
	t__fd_mask
;

59 #unde‡
__NFDBITS


61 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

62 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

63 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

70 #ifde‡
__USE_XOPEN


71 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

72 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

74 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

75 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

77 } 
	tfd_£t
;

80 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

82 #ifde‡
__USE_MISC


84 
__fd_mask
 
	tfd_mask
;

87 
	#NFDBITS
 
__NFDBITS


	)

92 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

93 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

94 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

95 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

98 
__BEGIN_DECLS


108 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

109 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

110 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

111 
timevÆ
 *
__ª°ri˘
 
__timeout
);

113 #ifde‡
__USE_XOPEN2K


120 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

121 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

122 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

123 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

124 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

129 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


130 
	~<bôs/£À˘2.h
>

133 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

40 
	#__DECL_SIMD_sö


	)

41 
	#__DECL_SIMD_söf


	)

42 
	#__DECL_SIMD_söl


	)

44 
	#__DECL_SIMD_söcos


	)

45 
	#__DECL_SIMD_söcosf


	)

46 
	#__DECL_SIMD_söco¶


	)

48 
	#__DECL_SIMD_log


	)

49 
	#__DECL_SIMD_logf


	)

50 
	#__DECL_SIMD_logl


	)

52 
	#__DECL_SIMD_exp


	)

53 
	#__DECL_SIMD_expf


	)

54 
	#__DECL_SIMD_ex∂


	)

56 
	#__DECL_SIMD_pow


	)

57 
	#__DECL_SIMD_powf


	)

58 
	#__DECL_SIMD_powl


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

57 
	#__STDC_ISO_10646__
 201605L

	)

60 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

310 #unde‡
__Æways_ölöe


311 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

313 #unde‡
__Æways_ölöe


314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡
__GNUC_PREREQ
 (4,3)

320 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

322 
	#__©åibuã_¨tificül__


	)

334 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

335 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

336 || 
deföed
 
__GNUC_GNU_INLINE__
)))

337 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


338 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

339 
	#__exã∫_Æways_ölöe
 \

340 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

342 
	#__exã∫_ölöe
 
__ölöe


	)

343 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

347 #ifde‡
__exã∫_Æways_ölöe


348 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

353 #i‡
__GNUC_PREREQ
 (4,3)

354 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

355 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

362 #i‡!
__GNUC_PREREQ
 (2,8)

363 
	#__exãnsi⁄__


	)

367 #i‡!
__GNUC_PREREQ
 (2,92)

368 
	#__ª°ri˘


	)

374 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


375 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

377 #ifde‡
__GNUC__


378 
	#__ª°ri˘_¨r


	)

380 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

381 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

384 
	#__ª°ri˘_¨r


	)

389 #i‡
__GNUC__
 >= 3

390 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

391 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

393 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

394 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

397 #i‡(!
deföed
 
_N‹ëu∫
 \

398 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

399 && !
	$__GNUC_PREREQ
 (4,7))

400 #i‡
	`__GNUC_PREREQ
 (2,8)

401 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

403 
	#_N‹ëu∫


	)

407 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

408 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

409 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

410 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

411 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

412 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

415 
	~<bôs/w‹dsize.h
>

417 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


418 
	#__LDBL_COMPAT
 1

	)

419 #ifde‡
__REDIRECT


420 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

422 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

423 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

424 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

425 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

426 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

427 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

428 
	#__LDBL_REDIR_DECL
(
«me
) \

429 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

430 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

431 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

432 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

433 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

436 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


437 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

438 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

439 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

440 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

441 
	#__LDBL_REDIR_DECL
(
«me
)

	)

442 #ifde‡
__REDIRECT


443 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

444 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

445 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

17 
	#ENOSYS
 38

	)

19 
	#ENOTEMPTY
 39

	)

20 
	#ELOOP
 40

	)

21 
	#EWOULDBLOCK
 
EAGAIN


	)

22 
	#ENOMSG
 42

	)

23 
	#EIDRM
 43

	)

24 
	#ECHRNG
 44

	)

25 
	#EL2NSYNC
 45

	)

26 
	#EL3HLT
 46

	)

27 
	#EL3RST
 47

	)

28 
	#ELNRNG
 48

	)

29 
	#EUNATCH
 49

	)

30 
	#ENOCSI
 50

	)

31 
	#EL2HLT
 51

	)

32 
	#EBADE
 52

	)

33 
	#EBADR
 53

	)

34 
	#EXFULL
 54

	)

35 
	#ENOANO
 55

	)

36 
	#EBADRQC
 56

	)

37 
	#EBADSLT
 57

	)

39 
	#EDEADLOCK
 
EDEADLK


	)

41 
	#EBFONT
 59

	)

42 
	#ENOSTR
 60

	)

43 
	#ENODATA
 61

	)

44 
	#ETIME
 62

	)

45 
	#ENOSR
 63

	)

46 
	#ENONET
 64

	)

47 
	#ENOPKG
 65

	)

48 
	#EREMOTE
 66

	)

49 
	#ENOLINK
 67

	)

50 
	#EADV
 68

	)

51 
	#ESRMNT
 69

	)

52 
	#ECOMM
 70

	)

53 
	#EPROTO
 71

	)

54 
	#EMULTIHOP
 72

	)

55 
	#EDOTDOT
 73

	)

56 
	#EBADMSG
 74

	)

57 
	#EOVERFLOW
 75

	)

58 
	#ENOTUNIQ
 76

	)

59 
	#EBADFD
 77

	)

60 
	#EREMCHG
 78

	)

61 
	#ELIBACC
 79

	)

62 
	#ELIBBAD
 80

	)

63 
	#ELIBSCN
 81

	)

64 
	#ELIBMAX
 82

	)

65 
	#ELIBEXEC
 83

	)

66 
	#EILSEQ
 84

	)

67 
	#ERESTART
 85

	)

68 
	#ESTRPIPE
 86

	)

69 
	#EUSERS
 87

	)

70 
	#ENOTSOCK
 88

	)

71 
	#EDESTADDRREQ
 89

	)

72 
	#EMSGSIZE
 90

	)

73 
	#EPROTOTYPE
 91

	)

74 
	#ENOPROTOOPT
 92

	)

75 
	#EPROTONOSUPPORT
 93

	)

76 
	#ESOCKTNOSUPPORT
 94

	)

77 
	#EOPNOTSUPP
 95

	)

78 
	#EPFNOSUPPORT
 96

	)

79 
	#EAFNOSUPPORT
 97

	)

80 
	#EADDRINUSE
 98

	)

81 
	#EADDRNOTAVAIL
 99

	)

82 
	#ENETDOWN
 100

	)

83 
	#ENETUNREACH
 101

	)

84 
	#ENETRESET
 102

	)

85 
	#ECONNABORTED
 103

	)

86 
	#ECONNRESET
 104

	)

87 
	#ENOBUFS
 105

	)

88 
	#EISCONN
 106

	)

89 
	#ENOTCONN
 107

	)

90 
	#ESHUTDOWN
 108

	)

91 
	#ETOOMANYREFS
 109

	)

92 
	#ETIMEDOUT
 110

	)

93 
	#ECONNREFUSED
 111

	)

94 
	#EHOSTDOWN
 112

	)

95 
	#EHOSTUNREACH
 113

	)

96 
	#EALREADY
 114

	)

97 
	#EINPROGRESS
 115

	)

98 
	#ESTALE
 116

	)

99 
	#EUCLEAN
 117

	)

100 
	#ENOTNAM
 118

	)

101 
	#ENAVAIL
 119

	)

102 
	#EISNAM
 120

	)

103 
	#EREMOTEIO
 121

	)

104 
	#EDQUOT
 122

	)

106 
	#ENOMEDIUM
 123

	)

107 
	#EMEDIUMTYPE
 124

	)

108 
	#ECANCELED
 125

	)

109 
	#ENOKEY
 126

	)

110 
	#EKEYEXPIRED
 127

	)

111 
	#EKEYREVOKED
 128

	)

112 
	#EKEYREJECTED
 129

	)

115 
	#EOWNERDEAD
 130

	)

116 
	#ENOTRECOVERABLE
 131

	)

118 
	#ERFKILL
 132

	)

120 
	#EHWPOISON
 133

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
[0];

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
161
3232
lapi.c
lapi.h
lauxlib.c
lauxlib.h
lbaselib.c
lbitlib.c
lcode.c
lcode.h
lcorolib.c
lctype.c
lctype.h
ldblib.c
ldebug.c
ldebug.h
ldo.c
ldo.h
ldump.c
lfunc.c
lfunc.h
lgc.c
lgc.h
linit.c
liolib.c
llex.c
llex.h
llimits.h
lmathlib.c
lmem.c
lmem.h
loadlib.c
lobject.c
lobject.h
lopcodes.c
lopcodes.h
loslib.c
lparser.c
lparser.h
lprefix.h
lstate.c
lstate.h
lstring.c
lstring.h
lstrlib.c
ltable.c
ltable.h
ltablib.c
ltm.c
ltm.h
lua.c
lua.h
lua.hpp
luac.c
luaconf.h
lualib.h
lundump.c
lundump.h
lutf8lib.c
lvm.c
lvm.h
lzio.c
lzio.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/math.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/locale.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/bits/byteswap-16.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
